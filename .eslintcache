[{"C:\\Emir's folder\\widget-booking\\src\\index.js":"1","C:\\Emir's folder\\widget-booking\\src\\App.js":"2","C:\\Emir's folder\\widget-booking\\src\\reportWebVitals.js":"3","C:\\Emir's folder\\widget-booking\\src\\Redux\\redux-store.js":"4","C:\\Emir's folder\\widget-booking\\src\\Redux\\company-profile-reducer.js":"5","C:\\Emir's folder\\widget-booking\\src\\Redux\\company-token-reducer.js":"6","C:\\Emir's folder\\widget-booking\\src\\Theme.js":"7","C:\\Emir's folder\\widget-booking\\src\\assets\\icons.js":"8","C:\\Emir's folder\\widget-booking\\src\\Components\\CompanyProfile\\CompanyProfile.js":"9","C:\\Emir's folder\\widget-booking\\src\\Components\\Helpers\\Preloader.js":"10","C:\\Emir's folder\\widget-booking\\src\\Components\\CheckoutForm\\CheckOut\\CheckOut.js":"11","C:\\Emir's folder\\widget-booking\\src\\Redux\\form-reducer.js":"12","C:\\Emir's folder\\widget-booking\\src\\Redux\\car-reducer.js":"13","C:\\Emir's folder\\widget-booking\\src\\api\\api.js":"14","C:\\Emir's folder\\widget-booking\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm.js":"15","C:\\Emir's folder\\widget-booking\\src\\Components\\CheckoutForm\\CheckOut\\Payment.js":"16","C:\\Emir's folder\\widget-booking\\src\\Components\\CheckoutForm\\CheckOut\\Preview.js":"17","C:\\Emir's folder\\widget-booking\\src\\Components\\CheckoutForm\\CheckOut\\FleetForm.js":"18","C:\\Emir's folder\\widget-booking\\src\\Components\\CheckoutForm\\Confirmation.js":"19","C:\\Emir's folder\\widget-booking\\src\\Components\\CheckoutForm\\CheckOut\\Hours.js":"20","C:\\Emir's folder\\widget-booking\\src\\Components\\CheckoutForm\\CheckOut\\PassengerQuantity.js":"21","C:\\Emir's folder\\widget-booking\\src\\Components\\CheckoutForm\\CheckOut\\CustomFormInput.js":"22","C:\\Emir's folder\\widget-booking\\src\\Components\\CheckoutForm\\ReservationFailed.js":"23","C:\\Emir's folder\\widget-booking\\src\\Components\\GoogleMap\\Directions.js":"24","C:\\Emir's folder\\widget-booking\\src\\Components\\GoogleMap\\GoogleMap.js":"25","C:\\Emir's folder\\widget-booking\\src\\Components\\TermsOfUse\\TermOfUse.js":"26","C:\\Emir's folder\\widget-booking\\src\\Components\\TermsOfUse\\PrivacyPolicy.js":"27","C:\\Emir's folder\\widget-booking\\src\\Components\\GoogleMap\\mapStyles.js":"28","C:\\Emir's folder\\widget-booking\\src\\AppStyles.js":"29"},{"size":365,"mtime":1625493823979,"results":"30","hashOfConfig":"31"},{"size":20562,"mtime":1625902744438,"results":"32","hashOfConfig":"31"},{"size":375,"mtime":1625493823979,"results":"33","hashOfConfig":"31"},{"size":724,"mtime":1625493823977,"results":"34","hashOfConfig":"31"},{"size":1805,"mtime":1625493823976,"results":"35","hashOfConfig":"31"},{"size":907,"mtime":1625493823976,"results":"36","hashOfConfig":"31"},{"size":1504,"mtime":1625923830152,"results":"37","hashOfConfig":"31"},{"size":57310,"mtime":1625903988500,"results":"38","hashOfConfig":"31"},{"size":3632,"mtime":1625902744438,"results":"39","hashOfConfig":"31"},{"size":584,"mtime":1625493823974,"results":"40","hashOfConfig":"31"},{"size":1473,"mtime":1625665350100,"results":"41","hashOfConfig":"31"},{"size":5157,"mtime":1625493823976,"results":"42","hashOfConfig":"31"},{"size":1682,"mtime":1625493823976,"results":"43","hashOfConfig":"31"},{"size":2667,"mtime":1625920749956,"results":"44","hashOfConfig":"31"},{"size":35659,"mtime":1625923136980,"results":"45","hashOfConfig":"31"},{"size":24794,"mtime":1625922574311,"results":"46","hashOfConfig":"31"},{"size":25830,"mtime":1625745618755,"results":"47","hashOfConfig":"31"},{"size":23325,"mtime":1625499180096,"results":"48","hashOfConfig":"31"},{"size":2436,"mtime":1625493823972,"results":"49","hashOfConfig":"31"},{"size":2754,"mtime":1625579197313,"results":"50","hashOfConfig":"31"},{"size":2716,"mtime":1625831805423,"results":"51","hashOfConfig":"31"},{"size":3386,"mtime":1625493823969,"results":"52","hashOfConfig":"31"},{"size":679,"mtime":1625493823972,"results":"53","hashOfConfig":"31"},{"size":2541,"mtime":1625493823973,"results":"54","hashOfConfig":"31"},{"size":12270,"mtime":1625493823973,"results":"55","hashOfConfig":"31"},{"size":14995,"mtime":1625493823975,"results":"56","hashOfConfig":"31"},{"size":6684,"mtime":1625493823974,"results":"57","hashOfConfig":"31"},{"size":3510,"mtime":1625493823973,"results":"58","hashOfConfig":"31"},{"size":4280,"mtime":1625730288392,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"ewo71c",{"filePath":"63","messages":"64","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"62"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"62"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"C:\\Emir's folder\\widget-booking\\src\\index.js",[],["135","136"],"C:\\Emir's folder\\widget-booking\\src\\App.js",["137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158"],"import Accordion from \"@material-ui/core/Accordion\"\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\"\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\"\r\nimport Card from \"@material-ui/core/Card\"\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\r\nimport Slide from \"@material-ui/core/Slide\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Dialog from \"@material-ui/core/Dialog\"\r\nimport { ThemeProvider } from \"@material-ui/styles\"\r\n// import { isMobile } from 'react-device-detect';\r\nimport React, { useEffect } from \"react\"\r\nimport Draggable from \"react-draggable\"\r\nimport { connect } from \"react-redux\"\r\nimport { BookinglaneIcon, BookinglaneIconForMobile } from \"./assets/icons\"\r\nimport CheckOut from \"./Components/CheckoutForm/CheckOut/CheckOut\"\r\nimport CompanyProfile from \"./Components/CompanyProfile/CompanyProfile\"\r\nimport {\r\n  getCompanyProfile,\r\n  initializing,\r\n} from \"./Redux/company-profile-reducer\"\r\nimport { getCompanyToken } from \"./Redux/company-token-reducer\"\r\nimport theme from \"./Theme\"\r\n\r\nimport { Preloader } from \"./Components/Helpers/Preloader\"\r\nimport { userScreenHeight, userScreenWidth, useStyles } from \"./AppStyles\"\r\nimport { AppBar, useMediaQuery } from \"@material-ui/core\"\r\nimport { useRef } from \"react\"\r\n// import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\r\n\r\nlet xOrdinate = 0\r\nlet yOrdinate = 0\r\n// const cardHeight = document.getElementById(\"mainContent\").clientHeight\r\n\r\nconst App = (props) => {\r\n  const classes = useStyles(props)\r\n\r\n  const [activeStep, setActiveStep] = React.useState(0)\r\n  let position = React.useRef({ x: 0, y: 0 })\r\n  const [expanded, setExpanded] = React.useState(false)\r\n  const [disabled, setDisabled] = React.useState(false)\r\n  const [disabledWidget, setDisabledWidget] = React.useState(false)\r\n  const [open, setOpen] = React.useState(false)\r\n  const [heightOfCard, setHeightOfCard] = React.useState(0)\r\n  const refOfCard = useRef(null)\r\n  const [heightOfBookNow, setHeightOfBookNow] = React.useState(0)\r\n  const [backgroundScrollStop, setBackgroundScrollStop] = React.useState(false)\r\n  const [\r\n    backgroundScrollStopForTimePicker,\r\n    setBackgroundScrollStopForTimePicker,\r\n  ] = React.useState(false)\r\n  const [draggable, setDraggable] = React.useState(false)\r\n\r\n  const refOfBookNow = useRef(null)\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setExpanded(false)\r\n    document.body.style.overflowY = \"unset\"\r\n  }\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    yOrdinate = position.current.y\r\n    xOrdinate = position.current.x\r\n    position.current.y = 0\r\n    if (userScreenWidth - xOrdinate < 500) {\r\n      position.current.x = userScreenWidth - 520\r\n    }\r\n    if (xOrdinate < -20) {\r\n      position.current.x = 0\r\n    }\r\n    setExpanded(isExpanded ? panel : false)\r\n  }\r\n\r\n  const enableAccordionButton = (e) => {\r\n    setTimeout(() => {\r\n      setDisabled(false)\r\n    }, 120)\r\n\r\n    setHeightOfCard(refOfCard.current.clientHeight)\r\n\r\n    {\r\n      /*Этот обработчик чтобы сам раскрывшийся виджет не выходил за рамки экрана если перетаскивается за пределы то он возвращается */\r\n    }\r\n    if (expanded) {\r\n      yOrdinate = position.current.y\r\n      xOrdinate = position.current.x\r\n      if (xOrdinate + 500 > userScreenWidth) {\r\n        position.current.x = userScreenWidth - 455\r\n      }\r\n      if (xOrdinate < -20) {\r\n        position.current.x = 0\r\n      }\r\n      if (yOrdinate - heightOfCard < -userScreenHeight) {\r\n        position.current.y = -userScreenHeight + heightOfCard\r\n      }\r\n      if (yOrdinate > 0) {\r\n        position.current.y = 0\r\n      }\r\n    }\r\n    {\r\n      /*Тот же обратчик только для иконки Book Now! с пульсацией до раскрытой иконке*/\r\n    }\r\n    yOrdinate = position.current.y\r\n    xOrdinate = position.current.x\r\n    if (xOrdinate < 0) {\r\n      position.current.x = -60\r\n    }\r\n    if (xOrdinate + 300 > userScreenWidth) {\r\n      position.current.x = userScreenWidth - 300\r\n    }\r\n    if (yOrdinate - 180 < -userScreenHeight) {\r\n      position.current.y = -userScreenHeight + 220\r\n    }\r\n\r\n    if (yOrdinate > 0) {\r\n      position.current.y = 0\r\n    }\r\n    // console.log(position.current.y)\r\n    // console.log(userScreenHeight)\r\n  }\r\n\r\n  const enableAccordionButtonMobile = (e) => {\r\n    setTimeout(() => {\r\n      setDisabled(false)\r\n    }, 100)\r\n\r\n    setHeightOfCard(refOfCard.current.clientHeight)\r\n    {\r\n      /*Тот же обратчик только для иконки Book Now! с пульсацией до раскрытой иконке*/\r\n    }\r\n    yOrdinate = position.current.y\r\n    xOrdinate = position.current.x\r\n    if (xOrdinate < 0) {\r\n      position.current.x = -30\r\n    }\r\n    if (xOrdinate + 200 > userScreenWidth) {\r\n      position.current.x = userScreenWidth - 200\r\n    }\r\n    if (yOrdinate - 180 < -userScreenHeight) {\r\n      position.current.y = -userScreenHeight + 210\r\n    }\r\n\r\n    if (yOrdinate > 0) {\r\n      position.current.y = 45\r\n    }\r\n    // console.log(position.current.y)\r\n    // console.log(userScreenHeight)\r\n  }\r\n\r\n  const disableAccordionButtonMobile = () => {\r\n    setDraggable(true)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (backgroundScrollStop) {\r\n      document.body.style.overflow = \"hidden\"\r\n    } else {\r\n      document.body.style.overflow = \"unset\"\r\n    }\r\n  }, [backgroundScrollStop])\r\n\r\n  React.useEffect(() => {\r\n    setHeightOfBookNow(refOfBookNow.current.clientHeight)\r\n  }, [heightOfBookNow])\r\n  const handleDrag = (e, ui) => {\r\n    position.current.x = ui.x\r\n    position.current.y = ui.y\r\n    if (!expanded)\r\n      setTimeout(() => {\r\n        setDisabled(true)\r\n      }, 150)\r\n  }\r\n  const handleDragForMobile = (e, ui) => {\r\n    position.current.x = ui.x\r\n    position.current.y = ui.y\r\n    if (!expanded)\r\n      setTimeout(() => {\r\n        setDisabled(true)\r\n      }, 150)\r\n  }\r\n\r\n  const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1)\r\n  const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1)\r\n\r\n  const jwtToken = localStorage.getItem(\"Authorization\")\r\n\r\n  useEffect(() => {\r\n    if (jwtToken) {\r\n      return\r\n    }\r\n\r\n    props.getCompanyToken()\r\n  }, [jwtToken])\r\n\r\n  const Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />\r\n  })\r\n\r\n  const isMobile = useMediaQuery(\"(max-width:530px)\")\r\n  const isiPad = useMediaQuery(\"(max-width:1024px)\")\r\n\r\n  return (\r\n    <>\r\n      {isMobile ? (\r\n        <>\r\n          <CssBaseline />\r\n          <ThemeProvider theme={theme}>\r\n            <div className={classes.mainMobile}>\r\n              {/* <Draggable\r\n                onStart={disableAccordionButtonMobile}\r\n                onDrag={handleDragForMobile}\r\n                onStop={enableAccordionButtonMobile}\r\n                position={position.current}\r\n                // disabled={draggable ? true : false}\r\n                cancel=\"#mainest \"\r\n                onClick={() => {\r\n                  console.log(\"hello drag\")\r\n                }}\r\n                // bounds=\"body\"\r\n                // handle=\"#panel1a-header\"\r\n                // allowAnyClick={false}\r\n                // enableUserSelectHack={false}\r\n              > */}\r\n              <Accordion\r\n                elevation={0}\r\n                disabled={disabled}\r\n                classes={{\r\n                  root: classes.MuiAccordionroot,\r\n                  disabled: classes.disabledButton,\r\n                }}\r\n                TransitionProps={{\r\n                  timeout: 0,\r\n                }}\r\n                expanded={expanded === \"panel1\"}\r\n                onChange={handleChange(\"panel1\")}\r\n                id=\"panel1a-header1\"\r\n              >\r\n                <AccordionSummary\r\n                  className={classes.accordionMobile}\r\n                  expandIcon={<BookinglaneIconForMobile />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header-mobile\"\r\n                  ref={refOfBookNow}\r\n                  onClick={() => {\r\n                    setBackgroundScrollStop(true)\r\n                  }}\r\n                >\r\n                  {/* <div\r\n                      id=\"mainest\"\r\n                      className={classes.accordionMobile}\r\n                      style={{\r\n                        // position: \"absolute\",\r\n                        // zIndex: \"2\",\r\n                        width: \"100px\",\r\n                        height: \"100px\",\r\n                        background: \"green\",\r\n                        marginTop: \"-50px\",\r\n                        marginLeft: \"34px\",\r\n                      }}\r\n                    ></div> */}\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  {jwtToken && (\r\n                    <Card\r\n                      className={\r\n                        backgroundScrollStopForTimePicker\r\n                          ? classes.contentMobileWithoutScroll\r\n                          : classes.contentMobile\r\n                      }\r\n                      style={{ bottom: userScreenHeight - yOrdinate }}\r\n                      style={\r\n                        activeStep === 1\r\n                          ? { overflowY: \"hidden\" }\r\n                          : { overflowY: \"auto\" }\r\n                      }\r\n                      style={{\r\n                        width: userScreenWidth,\r\n                      }} /* ширину уже раскрывшегося карда пишу сдезь потому-что через makestyles не сетает*/\r\n                      ref={refOfCard}\r\n                    >\r\n                      <CompanyProfile\r\n                        setExpanded={handleClose}\r\n                        initializing={props.initializing}\r\n                        expanded={expanded}\r\n                        setActiveStep={setActiveStep}\r\n                        setBackgroundScrollStop={setBackgroundScrollStop}\r\n                      />\r\n\r\n                      {props.initializing ? (\r\n                        <CheckOut\r\n                          isFetching={props.isFetching}\r\n                          setExpanded={handleClose}\r\n                          activeStep={activeStep}\r\n                          setActiveStep={setActiveStep}\r\n                          nextStep={nextStep}\r\n                          backStep={backStep}\r\n                          backgroundScrollStopForTimePicker={\r\n                            backgroundScrollStopForTimePicker\r\n                          }\r\n                          setBackgroundScrollStopForTimePicker={\r\n                            setBackgroundScrollStopForTimePicker\r\n                          }\r\n                        />\r\n                      ) : null}\r\n                    </Card>\r\n                  )}\r\n                  {!jwtToken && null}\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              {/* </Draggable> */}\r\n            </div>\r\n\r\n            {/* <div className={classes.main}>\r\n\r\n              <Button className={classes.mobileButton} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                <BookinglaneIcon />\r\n              </Button>\r\n\r\n            </div>\r\n            <Dialog fullScreen open={open} onClose={handleCloseDialog} scroll='body' TransitionComponent={Transition}>\r\n              <div className={classes.mobileMain}>\r\n                {jwtToken &&\r\n                  <Card className={classes.mobileContent} style={activeStep === 1 ? { overflowY: 'hidden' } : { overflowY: 'auto' }} >\r\n                    <CompanyProfile handleCloseDialog={handleCloseDialog} expanded={expanded} setActiveStep={setActiveStep} />\r\n                    <CheckOut isFetching={props.isFetching} handleCloseDialog={handleCloseDialog} activeStep={activeStep} setActiveStep={setActiveStep} nextStep={nextStep} backStep={backStep} />\r\n                  </Card>\r\n                }\r\n                {!jwtToken && null}\r\n              </div>\r\n            </Dialog> */}\r\n          </ThemeProvider>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <CssBaseline />\r\n          <ThemeProvider theme={theme}>\r\n            <div className={classes.main}>\r\n              {isiPad && (\r\n                // <Draggable\r\n                //   onDrag={handleDrag}\r\n                //   onStop={enableAccordionButton}\r\n                //   position={position.current}\r\n                //   defaultPosition={{ x: 350, y: -10 }}\r\n                //   // disabled={false}\r\n                //   // bounds=\"body\"\r\n                //   handle=\".companyProfileClassForDrag\"\r\n                // >\r\n                <Accordion\r\n                  elevation={0}\r\n                  disabled={disabled}\r\n                  classes={{\r\n                    root: classes.MuiAccordionroot,\r\n                    disabled: classes.disabledButton,\r\n                  }}\r\n                  TransitionProps={{\r\n                    timeout: 0,\r\n                  }}\r\n                  expanded={expanded === \"panel1\"}\r\n                  onChange={handleChange(\"panel1\")}\r\n                >\r\n                  <AccordionSummary\r\n                    className={classes.accordion}\r\n                    expandIcon={<BookinglaneIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                    ref={refOfBookNow}\r\n                    onClick={() => {\r\n                      setBackgroundScrollStop(true)\r\n                    }}\r\n                  ></AccordionSummary>\r\n                  <AccordionDetails>\r\n                    {jwtToken && (\r\n                      <div className=\"mainContent\">\r\n                        <Card\r\n                          className={classes.content}\r\n                          style={{ bottom: userScreenHeight - yOrdinate }}\r\n                          style={\r\n                            activeStep === 1\r\n                              ? { overflowY: \"hidden\" }\r\n                              : { overflowY: \"auto\" }\r\n                          }\r\n                          ref={refOfCard}\r\n                          // style={{ borderRadius: \"10px\" }}\r\n                        >\r\n                          <AppBar position=\"sticky\" color=\" #101020\">\r\n                            <div className=\"companyProfileClassForDrag\">\r\n                              {/* этот класс c div-oм для реакт драга чтобы можно было перетаскивать по шапке виджета*/}\r\n                              <div className={classes.companyProfile}>\r\n                                {/* это для pointer cursora */}\r\n                                <CompanyProfile\r\n                                  setExpanded={handleClose}\r\n                                  initializing={props.initializing}\r\n                                  expanded={expanded}\r\n                                  setActiveStep={setActiveStep}\r\n                                  setBackgroundScrollStop={\r\n                                    setBackgroundScrollStop\r\n                                  }\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          </AppBar>\r\n\r\n                          {props.initializing ? (\r\n                            <CheckOut\r\n                              isFetching={props.isFetching}\r\n                              setExpanded={handleClose}\r\n                              activeStep={activeStep}\r\n                              setActiveStep={setActiveStep}\r\n                              nextStep={nextStep}\r\n                              backStep={backStep}\r\n                            />\r\n                          ) : null}\r\n                        </Card>\r\n                      </div>\r\n                    )}\r\n                    {!jwtToken && null}\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n                // </Draggable>\r\n              )}\r\n              {!isiPad && (\r\n                <Draggable\r\n                  onDrag={handleDrag}\r\n                  onStop={enableAccordionButton}\r\n                  position={position.current}\r\n                  defaultPosition={{ x: 350, y: -10 }}\r\n                  // disabled={false}\r\n                  // bounds=\"body\"\r\n                  handle=\".companyProfileClassForDrag, #panel1a-header\"\r\n                >\r\n                  <Accordion\r\n                    elevation={0}\r\n                    disabled={disabled}\r\n                    classes={{\r\n                      root: classes.MuiAccordionroot,\r\n                      disabled: classes.disabledButton,\r\n                    }}\r\n                    TransitionProps={{\r\n                      timeout: 0,\r\n                    }}\r\n                    expanded={expanded === \"panel1\"}\r\n                    onChange={handleChange(\"panel1\")}\r\n                  >\r\n                    <AccordionSummary\r\n                      className={classes.accordion}\r\n                      expandIcon={<BookinglaneIcon />}\r\n                      aria-controls=\"panel1a-content\"\r\n                      id=\"panel1a-header\"\r\n                      ref={refOfBookNow}\r\n                      onClick={() => {\r\n                        setBackgroundScrollStop(true)\r\n                      }}\r\n                    ></AccordionSummary>\r\n                    <AccordionDetails>\r\n                      {jwtToken && (\r\n                        <div className=\"mainContent\">\r\n                          <Card\r\n                            className={classes.content}\r\n                            style={{ bottom: userScreenHeight - yOrdinate }}\r\n                            style={\r\n                              activeStep === 1\r\n                                ? { overflowY: \"hidden\" }\r\n                                : { overflowY: \"auto\" }\r\n                            }\r\n                            ref={refOfCard}\r\n                            // style={{ borderRadius: \"10px\" }}\r\n                          >\r\n                            <AppBar position=\"sticky\" color=\" #101020\">\r\n                              <div className=\"companyProfileClassForDrag\">\r\n                                {/* этот класс c div-oм для реакт драга чтобы можно было перетаскивать по шапке виджета*/}\r\n                                <div className={classes.companyProfile}>\r\n                                  {/* это для pointer cursora */}\r\n                                  <CompanyProfile\r\n                                    setExpanded={handleClose}\r\n                                    initializing={props.initializing}\r\n                                    expanded={expanded}\r\n                                    setActiveStep={setActiveStep}\r\n                                    setBackgroundScrollStop={\r\n                                      setBackgroundScrollStop\r\n                                    }\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </AppBar>\r\n\r\n                            {props.initializing ? (\r\n                              <CheckOut\r\n                                isFetching={props.isFetching}\r\n                                setExpanded={handleClose}\r\n                                activeStep={activeStep}\r\n                                setActiveStep={setActiveStep}\r\n                                nextStep={nextStep}\r\n                                backStep={backStep}\r\n                              />\r\n                            ) : null}\r\n                          </Card>\r\n                        </div>\r\n                      )}\r\n                      {!jwtToken && null}\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                </Draggable>\r\n              )}\r\n            </div>\r\n          </ThemeProvider>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isFetching: state.cars.isFetching,\r\n    companyName: state.companyProfile.profile.companyName,\r\n    initializing: state.companyProfile.initializing,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getCompanyProfile, getCompanyToken })(\r\n  App\r\n)\r\n","C:\\Emir's folder\\widget-booking\\src\\reportWebVitals.js",[],"C:\\Emir's folder\\widget-booking\\src\\Redux\\redux-store.js",[],"C:\\Emir's folder\\widget-booking\\src\\Redux\\company-profile-reducer.js",[],"C:\\Emir's folder\\widget-booking\\src\\Redux\\company-token-reducer.js",[],"C:\\Emir's folder\\widget-booking\\src\\Theme.js",["159","160","161"],"C:\\Emir's folder\\widget-booking\\src\\assets\\icons.js",["162","163"],"import * as React from \"react\"\r\nimport { useState } from \"react\"\r\nimport Draggable from \"react-draggable\"\r\nimport \"./iconsStyle.css\"\r\n\r\nexport const LocationIcon = () => (\r\n  <svg\r\n    width=\"12\"\r\n    height=\"14\"\r\n    viewBox=\"0 0 16 21\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M8.00001 0C3.58174 0 0 3.54412 0 7.91602C0 9.37809 0.289214 10.8882 1.11917 11.9766L8.00001 21L14.8808 11.9766C15.6347 10.988 16 9.24033 16 7.91602C16 3.54412 12.4183 0 8.00001 0ZM8.00001 4.58477C9.85906 4.58477 11.3666 6.07649 11.3666 7.916C11.3666 9.75555 9.85906 11.2473 8.00001 11.2473C6.14096 11.2473 4.63343 9.75555 4.63343 7.91602C4.63343 6.07649 6.14096 4.58477 8.00001 4.58477Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const Success = () => (\r\n  <svg\r\n    width=\"60\"\r\n    height=\"60\"\r\n    viewBox=\"0 0 60 60\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <circle cx=\"30\" cy=\"30\" r=\"30\" fill=\"#219653\" />\r\n    <path\r\n      d=\"M20 30L23.0775 26.7994L27.6923 31.6L36.9231 22L40 25.2L27.6923 38L20 30Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const Ticket = () => (\r\n  <svg\r\n    width=\"20\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    style={{ marginLeft: \"-4px\" }}\r\n  >\r\n    <path\r\n      fill-rule=\"evenodd\"\r\n      clip-rule=\"evenodd\"\r\n      d=\"M18.0156 11.8957L8.0198 1.89995C7.79447 1.67462 7.42914 1.67462 7.20382 1.89995C7.09504 2.00873 6.9575 2.265 6.93256 2.73516C6.89482 3.44651 6.73274 4.81897 5.77585 5.77585C4.81897 6.73274 3.44651 6.89482 2.73516 6.93256C2.265 6.9575 2.00873 7.09504 1.89995 7.20382C1.67462 7.42915 1.67462 7.79447 1.89995 8.0198L11.8957 18.0156C12.2337 18.3535 12.7817 18.3535 13.1197 18.0156L18.0156 13.1197C18.3535 12.7817 18.3535 12.2337 18.0156 11.8957ZM9.24377 0.67598L19.2395 10.6717C20.2535 11.6857 20.2535 13.3297 19.2395 14.3436L14.3436 19.2395C13.3297 20.2535 11.6857 20.2535 10.6717 19.2395L0.675979 9.24377C-0.225327 8.34246 -0.225326 6.88116 0.67598 5.97985C1.18965 5.46618 1.91805 5.24251 2.64347 5.20403C3.3009 5.16916 4.08482 5.01895 4.55188 4.55188C5.01895 4.08482 5.16916 3.3009 5.20403 2.64347C5.24251 1.91805 5.46618 1.18965 5.97985 0.67598C6.88116 -0.225327 8.34246 -0.225327 9.24377 0.67598Z\"\r\n      fill=\"#BABABA\"\r\n    />\r\n    <path\r\n      d=\"M16.7916 10.6717L15.5676 9.44776L9.44776 15.5676L10.6717 16.7916L16.7916 10.6717Z\"\r\n      fill=\"#BABABA\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const StartLocationIcon = () => (\r\n  <svg\r\n    width=\"16\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 16 20\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M8.00001 0C3.85788 0 0.5 3.37535 0.5 7.53907C0.5 8.93152 0.771138 10.3697 1.54922 11.4063L8.00001 20L14.4508 11.4063C15.1575 10.4648 15.5 8.80032 15.5 7.53907C15.5 3.37535 12.1421 0 8.00001 0ZM8.00001 4.36645C9.74286 4.36645 11.1562 5.78713 11.1562 7.53905C11.1562 9.291 9.74286 10.7117 8.00001 10.7117C6.25715 10.7117 4.84384 9.291 4.84384 7.53907C4.84384 5.78713 6.25715 4.36645 8.00001 4.36645Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const BetweenLine = () => (\r\n  <svg\r\n    width=\"2\"\r\n    height=\"26\"\r\n    viewBox=\"0 0 2 26\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <line x1=\"1\" x2=\"1\" y2=\"26\" stroke=\"#422C88\" stroke-dasharray=\"4 4\" />\r\n  </svg>\r\n)\r\n\r\nexport const AddLocIcon = () => (\r\n  <svg\r\n    width=\"16\"\r\n    height=\"16\"\r\n    viewBox=\"0 0 16 16\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M8 0C7.44772 0 7 0.447715 7 1V7H1C0.447715 7 0 7.44772 0 8C0 8.55229 0.447715 9 1 9H7V15C7 15.5523 7.44772 16 8 16C8.55229 16 9 15.5523 9 15V9H15C15.5523 9 16 8.55229 16 8C16 7.44772 15.5523 7 15 7H9V1C9 0.447715 8.55229 0 8 0Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const DeleteLocIcon = () => (\r\n  <svg\r\n    width=\"16\"\r\n    height=\"2\"\r\n    viewBox=\"0 0 16 2\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M15 0H1C0.447715 0 0 0.447715 0 1C0 1.55229 0.447715 2 1 2H15C15.5523 2 16 1.55229 16 1C16 0.447715 15.5523 0 15 0Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const EndLocationIcon = () => (\r\n  <svg\r\n    width=\"14\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 14 20\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      fill-rule=\"evenodd\"\r\n      clip-rule=\"evenodd\"\r\n      d=\"M7.43875 5L9.83875 2H2V8H9.83875L7.43875 5ZM14 10H2V20H0V0H14L10 5L14 10Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const NumberOfPassengersIcon = () => (\r\n  <svg\r\n    width=\"20\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    style={{ marginLeft: \"10px\", marginRight: \"10px\" }}\r\n  >\r\n    <path\r\n      d=\"M10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM5.07 16.28C5.5 15.38 8.12 14.5 10 14.5C11.88 14.5 14.51 15.38 14.93 16.28C13.57 17.36 11.86 18 10 18C8.14 18 6.43 17.36 5.07 16.28ZM16.36 14.83C14.93 13.09 11.46 12.5 10 12.5C8.54 12.5 5.07 13.09 3.64 14.83C2.57765 13.4438 2.00131 11.7464 2 10C2 5.59 5.59 2 10 2C14.41 2 18 5.59 18 10C18 11.82 17.38 13.49 16.36 14.83ZM10 4C8.06 4 6.5 5.56 6.5 7.5C6.5 9.44 8.06 11 10 11C11.94 11 13.5 9.44 13.5 7.5C13.5 5.56 11.94 4 10 4ZM10 9C9.17 9 8.5 8.33 8.5 7.5C8.5 6.67 9.17 6 10 6C10.83 6 11.5 6.67 11.5 7.5C11.5 8.33 10.83 9 10 9Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const HourlyIcon = () => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    style={{ marginLeft: \"8px\", marginRight: \"8px\" }}\r\n  >\r\n    <path\r\n      d=\"M11.99 2C6.47 2 2 6.48 2 12C2 17.52 6.47 22 11.99 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 11.99 2ZM12 20C7.58 20 4 16.42 4 12C4 7.58 7.58 4 12 4C16.42 4 20 7.58 20 12C20 16.42 16.42 20 12 20Z\"\r\n      fill=\"white\"\r\n    />\r\n    <path d=\"M12.5 7H11V13L16.25 16.15L17 14.92L12.5 12.25V7Z\" fill=\"white\" />\r\n  </svg>\r\n)\r\n\r\nexport const DestinationIcon = () => (\r\n  <svg\r\n    width=\"12\"\r\n    height=\"14\"\r\n    viewBox=\"0 0 16 16\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <ellipse cx=\"7.86903\" cy=\"8\" rx=\"7.86903\" ry=\"8\" fill=\"white\" />\r\n    <ellipse cx=\"7.86883\" cy=\"8\" rx=\"4.91814\" ry=\"5\" fill=\"#0D0D15\" />\r\n  </svg>\r\n)\r\n\r\nexport const MinusIcon = () => (\r\n  <svg\r\n    width=\"35\"\r\n    height=\"35\"\r\n    viewBox=\"0 0 45 45\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    style={{\r\n      borderTopLeftRadius: \"9px\",\r\n      borderBottomLeftRadius: \"9px\",\r\n      cursor: \"pointer\",\r\n    }}\r\n    className=\"minusIcon\"\r\n  >\r\n    <rect width=\"45\" height=\"45\" fill=\"#191929\" />\r\n    <path\r\n      d=\"M31 23H17C16.4477 23 16 23.4477 16 24C16 24.5523 16.4477 25 17 25H31C31.5523 25 32 24.5523 32 24C32 23.4477 31.5523 23 31 23Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const PlusIcon = () => (\r\n  //const [plusIcon, plusIconset] = useState('#3F3D4A');\r\n\r\n  <svg\r\n    width=\"35\"\r\n    height=\"35\"\r\n    viewBox=\"0 0 45 45\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    style={{\r\n      borderTopRightRadius: \"9px\",\r\n      borderBottomRightRadius: \"9px\",\r\n      cursor: \"pointer\",\r\n    }}\r\n    className=\"plusIcon\"\r\n  >\r\n    <rect\r\n      width=\"45\"\r\n      height=\"45\"\r\n      fill=\"#191929\"\r\n    />\r\n    <path\r\n      d=\"M24 16C23.4477 16 23 16.4477 23 17V23H17C16.4477 23 16 23.4477 16 24C16 24.5523 16.4477 25 17 25H23V31C23 31.5523 23.4477 32 24 32C24.5523 32 25 31.5523 25 31V25H31C31.5523 25 32 24.5523 32 24C32 23.4477 31.5523 23 31 23H25V17C25 16.4477 24.5523 16 24 16Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const ClockIcon = () => (\r\n  <svg\r\n    width=\"18\"\r\n    height=\"18\"\r\n    viewBox=\"0 0 33 33\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M16.5 2.0625C8.52715 2.0625 2.0625 8.52715 2.0625 16.5C2.0625 24.4729 8.52715 30.9375 16.5 30.9375C24.4729 30.9375 30.9375 24.4729 30.9375 16.5C30.9375 8.52715 24.4729 2.0625 16.5 2.0625ZM16.5 28.4883C9.88066 28.4883 4.51172 23.1193 4.51172 16.5C4.51172 9.88066 9.88066 4.51172 16.5 4.51172C23.1193 4.51172 28.4883 9.88066 28.4883 16.5C28.4883 23.1193 23.1193 28.4883 16.5 28.4883Z\"\r\n      fill=\"white\"\r\n    />\r\n    <path\r\n      d=\"M22.13 20.5799L17.5345 17.2573V9.28125C17.5345 9.13945 17.4185 9.02344 17.2767 9.02344H15.7266C15.5848 9.02344 15.4688 9.13945 15.4688 9.28125V18.1564C15.4688 18.2402 15.5074 18.3176 15.5751 18.3659L20.9054 22.2524C21.0214 22.3362 21.1825 22.3105 21.2663 22.1977L22.188 20.9408C22.2718 20.8216 22.246 20.6604 22.13 20.5799Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const DateIcon = () => (\r\n  <svg\r\n    width=\"18\"\r\n    height=\"18\"\r\n    viewBox=\"0 0 18 18\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M5 10C4.44772 10 4 9.55228 4 9C4 8.44771 4.44772 8 5 8C5.55228 8 6 8.44771 6 9C6 9.55228 5.55228 10 5 10Z\"\r\n      fill=\"white\"\r\n    />\r\n    <path\r\n      d=\"M5 14C4.44772 14 4 13.5523 4 13C4 12.4477 4.44772 12 5 12C5.55228 12 6 12.4477 6 13C6 13.5523 5.55228 14 5 14Z\"\r\n      fill=\"white\"\r\n    />\r\n    <path\r\n      d=\"M8 13C8 13.5523 8.44771 14 9 14C9.55228 14 10 13.5523 10 13C10 12.4477 9.55228 12 9 12C8.44771 12 8 12.4477 8 13Z\"\r\n      fill=\"white\"\r\n    />\r\n    <path\r\n      d=\"M13 14C12.4477 14 12 13.5523 12 13C12 12.4477 12.4477 12 13 12C13.5523 12 14 12.4477 14 13C14 13.5523 13.5523 14 13 14Z\"\r\n      fill=\"white\"\r\n    />\r\n    <path\r\n      d=\"M8 9C8 9.55228 8.44771 10 9 10C9.55228 10 10 9.55228 10 9C10 8.44771 9.55228 8 9 8C8.44771 8 8 8.44771 8 9Z\"\r\n      fill=\"white\"\r\n    />\r\n    <path\r\n      d=\"M13 10C12.4477 10 12 9.55228 12 9C12 8.44771 12.4477 8 13 8C13.5523 8 14 8.44771 14 9C14 9.55228 13.5523 10 13 10Z\"\r\n      fill=\"white\"\r\n    />\r\n    <path\r\n      d=\"M5 4C4.44772 4 4 4.44772 4 5C4 5.55228 4.44772 6 5 6H13C13.5523 6 14 5.55228 14 5C14 4.44772 13.5523 4 13 4H5Z\"\r\n      fill=\"white\"\r\n    />\r\n    <path\r\n      fill-rule=\"evenodd\"\r\n      clip-rule=\"evenodd\"\r\n      d=\"M3 0C1.34315 0 0 1.34315 0 3V15C0 16.6569 1.34315 18 3 18H15C16.6569 18 18 16.6569 18 15V3C18 1.34315 16.6569 0 15 0H3ZM15 2H3C2.44772 2 2 2.44772 2 3V15C2 15.5523 2.44772 16 3 16H15C15.5523 16 16 15.5523 16 15V3C16 2.44772 15.5523 2 15 2Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const RightArrowForAdressForm = () => (\r\n  <svg\r\n    width=\"6\"\r\n    height=\"10\"\r\n    viewBox=\"0 0 6 10\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      fill-rule=\"evenodd\"\r\n      clip-rule=\"evenodd\"\r\n      d=\"M1.23143 9.79642L5.85392 5.33942C6.04869 5.1518 6.04869 4.84869 5.85392 4.66058L1.23143 0.203577C0.950267 -0.0678594 0.492813 -0.0678595 0.211148 0.203576C-0.0700169 0.475012 -0.0700169 0.915547 0.211148 1.18698L4.16544 5.00024L0.211147 8.81253C-0.0700177 9.08445 -0.0700177 9.52499 0.211147 9.79642C0.492812 10.0679 0.950266 10.0679 1.23143 9.79642Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const LeftArrowForAdressForm = () => (\r\n  <svg\r\n    width=\"6\"\r\n    height=\"11\"\r\n    viewBox=\"0 0 6 11\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      fill-rule=\"evenodd\"\r\n      clip-rule=\"evenodd\"\r\n      d=\"M4.76857 0.838343L0.146076 5.29535C-0.048692 5.48297 -0.048692 5.78608 0.146076 5.97418L4.76857 10.4312C5.04973 10.7026 5.50719 10.7026 5.78885 10.4312C6.07002 10.1598 6.07002 9.71922 5.78885 9.44778L1.83456 5.63452L5.78885 1.82224C6.07002 1.55031 6.07002 1.10978 5.78885 0.838343C5.50719 0.566907 5.04973 0.566907 4.76857 0.838343Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const PlaneIcon = () => (\r\n  <svg\r\n    width=\"18\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 18 20\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M7.5 3.22677C7.5 3.37855 7.50469 3.88703 7.51406 4.03033L7.59375 6.92764C7.59472 6.9427 7.59129 6.95772 7.58384 6.97104C7.5764 6.98435 7.56522 6.99545 7.55156 7.00308L0.166875 12.7879C0.118105 12.823 0.0779231 12.8677 0.0491098 12.9191C0.0202965 12.9704 0.00354003 13.0271 0 13.0852L0 14.2856L7.54687 11.0267C7.56415 11.0189 7.58325 11.0156 7.6023 11.017C7.62135 11.0184 7.6397 11.0244 7.65554 11.0346C7.67138 11.0448 7.68416 11.0587 7.69264 11.075C7.70112 11.0913 7.70501 11.1094 7.70391 11.1276L7.78828 16.5602C7.79008 16.6167 7.77786 16.6728 7.75261 16.724C7.72736 16.7752 7.6898 16.82 7.64297 16.8548L5.53359 18.5066C5.35078 18.6405 5.25234 18.8914 5.25234 19.1097V19.9517C5.25234 20.0093 5.30906 20.0008 5.36625 19.9852L8.71406 19.0994C8.89335 19.0325 9.09258 19.0325 9.27187 19.0994L12.6094 19.986C12.7008 20.0124 12.75 20.0093 12.75 19.907V19.107C12.75 18.7436 12.7003 18.6941 12.4547 18.5084L10.3125 16.8254C10.266 16.7903 10.2287 16.7454 10.2035 16.6943C10.1783 16.6432 10.1659 16.5872 10.1672 16.5307L10.2937 11.1432C10.2942 11.1236 10.2997 11.1044 10.3097 11.0873C10.3198 11.0701 10.334 11.0556 10.3513 11.0449C10.3686 11.0342 10.3884 11.0277 10.4089 11.0259C10.4294 11.0242 10.4501 11.0272 10.4691 11.0348L18 14.2856V13.0964C17.9964 13.0384 17.9797 12.9818 17.951 12.9305C17.9223 12.8793 17.8822 12.8346 17.8336 12.7995L10.4531 7.00264C10.425 6.98523 10.4109 6.91335 10.4109 6.88255L10.4906 4.02989C10.5 3.88257 10.5047 3.37855 10.5047 3.22632C10.5047 1.24999 9.93422 0 9 0C8.06578 0 7.5 1.24464 7.5 3.22677Z\"\r\n      fill=\"#BABABA\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const BookinglaneIcon = () => (\r\n  <svg\r\n    width=\"150\"\r\n    height=\"105\"\r\n    style={{ marginBottom: \"50px\", marginTop: \"-10px\" }}\r\n    viewBox=\"0 0 272 188\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <g filter=\"url(#filter0_d)\">\r\n      <path\r\n        d=\"M108.337 30H140.366C140.494 30.0319 140.62 30.0781 140.75 30.0935C149.085 31.099 155.968 34.8759 161.236 41.3318C166.295 47.5319 168.641 54.7392 168.106 62.7949C168.077 63.2329 168.169 63.5369 168.498 63.8416C169.355 64.6343 170.207 65.4372 171 66.2925C174.638 70.2196 177.372 74.6889 179.076 79.781C180.04 82.6624 180.589 85.6271 181 88.6248V95.3157C180.881 96.2349 180.784 97.1575 180.638 98.0721C179.906 102.68 178.36 107.005 176.091 111.078C173.075 116.489 168.948 120.89 163.852 124.376C158.907 127.759 153.43 129.81 147.51 130.702C145.036 131.075 142.555 131.336 140.065 130.961C133.92 130.037 129.827 126.335 127.035 121.045C125.264 117.69 124.83 113.974 124.723 110.239C124.626 106.816 124.624 103.391 124.611 99.9664C124.554 83.0017 124.576 66.0369 124.675 49.0722C124.682 48.0404 124.659 46.9899 124.476 45.9795C123.163 38.7203 116.94 33.7157 109.441 34.3185C105.716 34.6165 102.624 36.2304 100.062 38.8761C97.3284 41.7034 96.2881 45.1789 96.2911 49.0542C96.3056 69.1519 96.3081 89.2495 96.2986 109.347C96.2986 111.444 96.3234 113.545 96.6023 115.624C97.2206 120.229 99.0985 124.256 102.281 127.66C103.418 128.876 104.649 129.975 106.243 130.622C106.071 130.717 105.943 130.747 105.818 130.735C105.581 130.712 105.346 130.672 105.115 130.614C102.172 129.834 99.7753 128.143 97.715 125.984C93.8366 121.919 91.9832 117.088 92.0001 111.419C92.0647 90.1272 92.0241 68.8342 92.0294 47.542C92.0294 46.8803 92.0343 46.207 92.1492 45.5588C93.2525 39.3257 96.665 34.8079 102.297 31.9311C104.21 30.9533 106.249 30.408 108.337 30ZM122.652 34.3451C123.207 34.8875 123.83 35.2876 124.159 35.857C125.162 37.5895 126.632 37.8638 128.504 37.8248C132.478 37.7422 136.469 37.5557 140.432 38.0781C146.101 38.8254 150.831 41.4463 154.548 45.7081C158.949 50.7593 160.823 56.7277 160.016 63.4168C159.156 70.5438 155.482 75.8776 149.317 79.486C145.565 81.6824 141.457 82.6207 137.125 82.6207C134.682 82.6207 132.239 82.6335 129.797 82.6143C129.189 82.6098 128.912 82.8166 128.947 83.4468C128.978 84.0293 128.992 84.6178 128.943 85.1977C128.88 85.96 129.171 86.2298 129.941 86.2201C132.596 86.1863 135.252 86.1702 137.906 86.216C142.491 86.2952 146.755 85.0352 150.702 82.8651C159.637 77.9524 165.033 68.3977 163.564 57.5095C162.175 47.1982 156.409 40.1 146.853 36.0634C143.885 34.8094 140.768 34.2498 137.541 34.2524C132.683 34.2566 127.825 34.2292 122.967 34.2179C122.92 34.2187 122.872 34.2554 122.652 34.3451ZM133.708 123.072C135.247 124.686 137.004 125.761 139.076 126.32C141.483 126.967 143.915 126.826 146.344 126.501C152.221 125.713 157.551 123.549 162.364 120.097C167.496 116.419 171.239 111.611 173.808 105.877C175.821 101.385 176.805 96.6557 176.774 91.7336C176.739 86.5252 175.493 81.5916 173.17 76.9409C171.743 74.0873 169.908 71.4565 167.724 69.1311C167.287 68.665 167.094 68.6957 166.915 69.3233C166.699 70.0874 166.461 70.8565 166.124 71.573C165.722 72.428 165.882 73.0499 166.469 73.7915C171.95 80.7103 173.772 88.6376 172.339 97.2246C170.884 105.946 166.315 112.822 158.971 117.787C154.642 120.714 149.841 122.355 144.63 122.788C141.316 123.064 137.997 122.879 134.681 122.941C134.396 122.944 134.1 122.87 133.709 123.07L133.708 123.072ZM133.928 42.1538C132.066 42.1538 130.446 42.176 128.828 42.1433C128.131 42.1294 128.006 42.3828 128.197 43.0028C128.395 43.6351 128.545 44.2812 128.647 44.9357C128.753 45.6297 129.046 45.9142 129.794 45.9014C132.341 45.8579 134.89 45.8748 137.438 45.8883C140.655 45.9056 143.56 46.9437 146.107 48.8414C150.077 51.7937 152.066 55.8461 152.066 60.7651C152.063 66.2073 149.508 70.2274 144.749 72.8288C142.341 74.1447 139.708 74.5929 136.992 74.6068C134.656 74.6199 132.32 74.6068 129.984 74.6128C129.016 74.6158 128.961 74.6811 128.956 75.6678C128.953 76.2252 128.987 76.7848 128.947 77.3391C128.897 78.0444 129.21 78.2696 129.883 78.2628C132.723 78.2347 135.563 78.2354 138.405 78.2328C139.445 78.2328 140.47 78.0943 141.483 77.8841C150.872 75.9384 156.693 68.0798 155.761 58.6182C155.021 51.1031 148.966 44.3611 141.454 42.6147C138.878 42.0168 136.28 42.194 133.928 42.1519V42.1538ZM136.596 115.093C134.684 115.093 132.772 115.1 130.86 115.089C130.232 115.085 129.964 115.294 130.175 115.956C130.368 116.562 130.531 117.178 130.663 117.801C130.802 118.463 131.163 118.689 131.841 118.682C134.919 118.653 138.002 118.72 141.081 118.652C143.438 118.6 145.794 118.441 148.106 117.883C153.74 116.522 158.468 113.633 162.172 109.224C166.736 103.794 168.824 97.4806 168.388 90.3562C168.095 85.5873 166.504 81.3033 163.777 77.4074C163.461 76.957 163.286 77.0745 163.036 77.4375C162.644 78.0053 162.283 78.61 161.805 79.0983C161.231 79.6857 161.274 80.1391 161.697 80.8173C164.622 85.5088 165.465 90.6185 164.537 96.0259C163.679 101.032 161.346 105.291 157.663 108.764C154.131 112.094 149.942 114.151 145.104 114.817C142.277 115.205 139.433 115.058 136.596 115.091V115.093ZM136.567 106.992C134.093 106.992 132.024 106.99 129.953 106.992C129.554 106.992 129.11 106.944 129.161 107.58C129.216 108.266 129.261 108.955 129.29 109.644C129.322 110.408 129.613 110.741 130.465 110.73C134.233 110.682 138.003 110.723 141.771 110.699C142.75 110.692 143.741 110.649 144.703 110.484C150.978 109.402 155.699 106.1 158.522 100.365C161.231 94.8638 161.321 89.3019 158.401 83.791C158.068 83.1619 157.807 83.207 157.343 83.6063C156.822 84.0567 156.277 84.4876 155.699 84.8592C155.165 85.2015 155.087 85.5396 155.387 86.1007C156.422 88.0385 156.827 90.1426 156.808 92.3176C156.748 99.3584 151.524 105.469 144.584 106.69C141.788 107.182 138.97 106.897 136.567 106.99V106.992ZM134.269 70.2684C135.663 70.2015 137.385 70.3303 139.109 70.1276C144.824 69.4554 148.383 64.4906 147.71 59.5697C147.117 55.2365 143.671 51.1838 139.325 50.4842C136.09 49.9628 132.809 50.334 129.549 50.2702C129.109 50.2616 128.953 50.5352 128.955 50.9458C128.96 51.7682 128.97 52.5912 128.95 53.4132C128.936 53.9597 129.17 54.1785 129.71 54.1691C130.745 54.1515 131.781 54.1447 132.816 54.1691C134.802 54.2179 136.798 54.0036 138.775 54.3403C141.452 54.7959 143.585 56.9627 143.899 59.5344C144.243 62.352 142.773 64.9166 140.149 65.9878C139.081 66.4239 137.94 66.5312 136.791 66.532C134.482 66.5339 132.173 66.5541 129.863 66.5256C129.168 66.517 128.901 66.7636 128.945 67.4545C128.982 68.1171 128.983 68.7812 128.947 69.4438C128.916 70.0762 129.199 70.2864 129.801 70.2766C131.181 70.2511 132.562 70.2665 134.269 70.2665V70.2684ZM136.287 102.614C138.092 102.614 139.897 102.621 141.703 102.614C146.473 102.592 149.774 100.279 151.654 95.9906C152.765 93.4579 152.705 90.8306 151.642 88.2442C151.39 87.6287 151.075 87.5161 150.487 87.8141C149.917 88.0999 149.323 88.3331 148.711 88.5107C148.01 88.716 147.817 88.9337 148.169 89.7181C150.029 93.8722 148.272 98.2497 143.199 98.9087C140.902 99.2067 138.585 98.9947 136.278 99.0262C134.127 99.0559 131.977 99.0495 129.826 99.0236C129.171 99.0161 128.905 99.2529 128.946 99.9097C128.987 100.493 128.987 101.078 128.946 101.661C128.888 102.4 129.195 102.636 129.917 102.627C132.038 102.592 134.163 102.612 136.287 102.612V102.614ZM136.159 90.5923V90.6636C134.089 90.6636 132.02 90.6756 129.95 90.6572C129.212 90.6508 128.883 90.9267 128.942 91.6983C128.994 92.3867 128.994 93.078 128.942 93.7664C128.886 94.5227 129.15 94.7952 129.933 94.788C133.595 94.755 137.258 94.782 140.92 94.7663C141.741 94.7629 142.57 94.7182 143.361 94.4604C144.256 94.168 144.62 93.569 144.528 92.6322C144.385 91.1853 143.793 90.6287 142.212 90.6009C140.194 90.5634 138.176 90.5904 136.159 90.5904V90.5923ZM133.652 62.278C134.842 62.203 136.305 62.4124 137.756 62.1654C139.013 61.95 139.595 61.3142 139.534 60.2385C139.479 59.2687 138.761 58.5811 137.571 58.5589C134.945 58.5101 132.317 58.5398 129.691 58.5289C129.143 58.5267 128.936 58.7883 128.95 59.3171C128.969 60.0328 128.98 60.7508 128.947 61.4655C128.917 62.1035 129.203 62.3021 129.804 62.2882C130.998 62.2593 132.192 62.278 133.652 62.278Z\"\r\n        fill=\"#577FFC\"\r\n      />\r\n      <path\r\n        d=\"M114.666 130.629C113.925 130.808 113.28 130.543 112.646 130.298C108.288 128.614 105.187 125.521 102.909 121.53C101.272 118.662 100.455 115.59 100.46 112.26C100.488 90.9148 100.493 69.5702 100.476 48.2256C100.476 43.3314 103.823 39.2088 108.612 38.1598C114.537 36.8608 120.506 41.3913 120.838 47.4119C120.9 48.5533 120.917 49.6924 120.917 50.8334C120.919 70.9837 120.917 91.1336 120.912 111.283C120.912 114.385 121.193 117.435 122.315 120.352C123.704 123.96 125.729 127.12 128.868 129.472C129.167 129.694 129.476 129.9 129.795 130.091C130.088 130.268 130.398 130.416 130.795 130.627C130.387 130.81 130.074 130.7 129.757 130.621C126.735 129.87 124.32 128.11 122.229 125.911C118.463 121.955 116.541 117.261 116.553 111.736C116.592 90.6566 116.597 69.5774 116.567 48.4981C116.567 45.3533 114.724 43.0229 111.784 42.41C108.371 41.6969 104.986 44.3391 104.874 47.8064C104.844 48.7345 104.829 49.6633 104.827 50.5928C104.825 70.5044 104.825 90.4155 104.827 110.326C104.827 112.927 104.849 115.525 105.519 118.072C106.613 122.234 108.66 125.821 111.838 128.744C112.68 129.519 113.651 130.095 114.666 130.629Z\"\r\n        fill=\"#577FFC\"\r\n      />\r\n      <path\r\n        d=\"M122.996 130.623C122.4 130.792 122.05 130.723 121.694 130.632C119.238 130.002 117.167 128.669 115.318 127.004C111.797 123.832 109.463 119.962 108.706 115.234C108.556 114.264 108.484 113.283 108.488 112.301C108.476 91.1972 108.474 70.0929 108.48 48.9884C108.48 48.2715 108.456 47.5419 108.913 46.9241C109.441 46.2109 110.442 45.8439 111.241 46.0526C112.039 46.2612 112.719 47.0659 112.821 47.969C112.865 48.3627 112.848 48.7643 112.848 49.1621C112.852 70.3463 112.86 91.5303 112.871 112.714C112.88 118.058 114.728 122.81 118.081 126.935C119.342 128.486 120.841 129.856 122.996 130.623Z\"\r\n        fill=\"#577FFC\"\r\n      />\r\n    </g>\r\n    <path\r\n      d=\"M0.3 152.1H15.75C18.65 152.1 20.9167 152.917 22.55 154.55C24.2167 156.183 25.05 158.367 25.05 161.1C25.05 162.4 24.8667 163.517 24.5 164.45C24.1333 165.35 23.6667 166.1 23.1 166.7C22.5333 167.267 21.8833 167.7 21.15 168C20.4167 168.267 19.7 168.433 19 168.5V168.8C19.7 168.833 20.4667 169 21.3 169.3C22.1667 169.6 22.9667 170.083 23.7 170.75C24.4333 171.383 25.05 172.217 25.55 173.25C26.05 174.25 26.3 175.483 26.3 176.95C26.3 178.35 26.0667 179.667 25.6 180.9C25.1667 182.133 24.55 183.2 23.75 184.1C22.95 185 22 185.717 20.9 186.25C19.8 186.75 18.6 187 17.3 187H0.3V152.1ZM5.95 182.15H15.65C17.1167 182.15 18.2667 181.767 19.1 181C19.9333 180.233 20.35 179.133 20.35 177.7V176C20.35 174.567 19.9333 173.467 19.1 172.7C18.2667 171.933 17.1167 171.55 15.65 171.55H5.95V182.15ZM5.95 166.85H14.7C16.1 166.85 17.1833 166.5 17.95 165.8C18.7167 165.067 19.1 164.033 19.1 162.7V161.1C19.1 159.767 18.7167 158.75 17.95 158.05C17.1833 157.317 16.1 156.95 14.7 156.95H5.95V166.85ZM46.594 187.6C44.3273 187.6 42.2607 187.217 40.394 186.45C38.5607 185.65 36.9773 184.5 35.644 183C34.344 181.467 33.3273 179.583 32.594 177.35C31.894 175.083 31.544 172.483 31.544 169.55C31.544 166.617 31.894 164.033 32.594 161.8C33.3273 159.533 34.344 157.65 35.644 156.15C36.9773 154.617 38.5607 153.467 40.394 152.7C42.2607 151.9 44.3273 151.5 46.594 151.5C48.8607 151.5 50.9107 151.9 52.744 152.7C54.6107 153.467 56.194 154.617 57.494 156.15C58.8273 157.65 59.844 159.533 60.544 161.8C61.2773 164.033 61.644 166.617 61.644 169.55C61.644 172.483 61.2773 175.083 60.544 177.35C59.844 179.583 58.8273 181.467 57.494 183C56.194 184.5 54.6107 185.65 52.744 186.45C50.9107 187.217 48.8607 187.6 46.594 187.6ZM46.594 182.55C47.9273 182.55 49.144 182.317 50.244 181.85C51.3773 181.383 52.3273 180.717 53.094 179.85C53.894 178.95 54.5107 177.867 54.944 176.6C55.3773 175.333 55.594 173.9 55.594 172.3V166.8C55.594 165.2 55.3773 163.767 54.944 162.5C54.5107 161.233 53.894 160.167 53.094 159.3C52.3273 158.4 51.3773 157.717 50.244 157.25C49.144 156.783 47.9273 156.55 46.594 156.55C45.2273 156.55 43.994 156.783 42.894 157.25C41.794 157.717 40.844 158.4 40.044 159.3C39.2773 160.167 38.6773 161.233 38.244 162.5C37.8107 163.767 37.594 165.2 37.594 166.8V172.3C37.594 173.9 37.8107 175.333 38.244 176.6C38.6773 177.867 39.2773 178.95 40.044 179.85C40.844 180.717 41.794 181.383 42.894 181.85C43.994 182.317 45.2273 182.55 46.594 182.55ZM82.0247 187.6C79.758 187.6 77.6914 187.217 75.8247 186.45C73.9914 185.65 72.408 184.5 71.0747 183C69.7747 181.467 68.758 179.583 68.0247 177.35C67.3247 175.083 66.9747 172.483 66.9747 169.55C66.9747 166.617 67.3247 164.033 68.0247 161.8C68.758 159.533 69.7747 157.65 71.0747 156.15C72.408 154.617 73.9914 153.467 75.8247 152.7C77.6914 151.9 79.758 151.5 82.0247 151.5C84.2914 151.5 86.3414 151.9 88.1747 152.7C90.0414 153.467 91.6247 154.617 92.9247 156.15C94.258 157.65 95.2747 159.533 95.9747 161.8C96.708 164.033 97.0747 166.617 97.0747 169.55C97.0747 172.483 96.708 175.083 95.9747 177.35C95.2747 179.583 94.258 181.467 92.9247 183C91.6247 184.5 90.0414 185.65 88.1747 186.45C86.3414 187.217 84.2914 187.6 82.0247 187.6ZM82.0247 182.55C83.358 182.55 84.5747 182.317 85.6747 181.85C86.808 181.383 87.758 180.717 88.5247 179.85C89.3247 178.95 89.9414 177.867 90.3747 176.6C90.808 175.333 91.0247 173.9 91.0247 172.3V166.8C91.0247 165.2 90.808 163.767 90.3747 162.5C89.9414 161.233 89.3247 160.167 88.5247 159.3C87.758 158.4 86.808 157.717 85.6747 157.25C84.5747 156.783 83.358 156.55 82.0247 156.55C80.658 156.55 79.4247 156.783 78.3247 157.25C77.2247 157.717 76.2747 158.4 75.4747 159.3C74.708 160.167 74.108 161.233 73.6747 162.5C73.2414 163.767 73.0247 165.2 73.0247 166.8V172.3C73.0247 173.9 73.2414 175.333 73.6747 176.6C74.108 177.867 74.708 178.95 75.4747 179.85C76.2747 180.717 77.2247 181.383 78.3247 181.85C79.4247 182.317 80.658 182.55 82.0247 182.55ZM114.405 170.7L109.605 176.2V187H103.955V152.1H109.605V169.8H109.805L114.805 163.45L124.205 152.1H130.805L118.355 166.8L131.805 187H125.005L114.405 170.7ZM157.85 167.7L154 160.3H153.85V187H148.45V152.1H154.75L166.15 171.4L170 178.8H170.15V152.1H175.55V187H169.25L157.85 167.7ZM197.478 187.6C195.211 187.6 193.145 187.217 191.278 186.45C189.445 185.65 187.861 184.5 186.528 183C185.228 181.467 184.211 179.583 183.478 177.35C182.778 175.083 182.428 172.483 182.428 169.55C182.428 166.617 182.778 164.033 183.478 161.8C184.211 159.533 185.228 157.65 186.528 156.15C187.861 154.617 189.445 153.467 191.278 152.7C193.145 151.9 195.211 151.5 197.478 151.5C199.745 151.5 201.795 151.9 203.628 152.7C205.495 153.467 207.078 154.617 208.378 156.15C209.711 157.65 210.728 159.533 211.428 161.8C212.161 164.033 212.528 166.617 212.528 169.55C212.528 172.483 212.161 175.083 211.428 177.35C210.728 179.583 209.711 181.467 208.378 183C207.078 184.5 205.495 185.65 203.628 186.45C201.795 187.217 199.745 187.6 197.478 187.6ZM197.478 182.55C198.811 182.55 200.028 182.317 201.128 181.85C202.261 181.383 203.211 180.717 203.978 179.85C204.778 178.95 205.395 177.867 205.828 176.6C206.261 175.333 206.478 173.9 206.478 172.3V166.8C206.478 165.2 206.261 163.767 205.828 162.5C205.395 161.233 204.778 160.167 203.978 159.3C203.211 158.4 202.261 157.717 201.128 157.25C200.028 156.783 198.811 156.55 197.478 156.55C196.111 156.55 194.878 156.783 193.778 157.25C192.678 157.717 191.728 158.4 190.928 159.3C190.161 160.167 189.561 161.233 189.128 162.5C188.695 163.767 188.478 165.2 188.478 166.8V172.3C188.478 173.9 188.695 175.333 189.128 176.6C189.561 177.867 190.161 178.95 190.928 179.85C191.728 180.717 192.678 181.383 193.778 181.85C194.878 182.317 196.111 182.55 197.478 182.55ZM224.07 187L215.82 152.1H221.57L225.12 168.9L227.57 180.5H227.72L230.52 168.9L234.67 152.1H240.97L245.07 168.9L247.82 180.45H247.97L250.52 168.9L254.17 152.1H259.72L251.12 187H244.77L240.32 168.95L237.72 158.35H237.62L234.97 168.95L230.42 187H224.07ZM266.944 177L265.194 162.05V152.1H271.094V162.05L269.444 177H266.944ZM268.194 187.6C266.928 187.6 265.994 187.3 265.394 186.7C264.828 186.067 264.544 185.267 264.544 184.3V183.45C264.544 182.483 264.828 181.7 265.394 181.1C265.994 180.467 266.928 180.15 268.194 180.15C269.461 180.15 270.378 180.467 270.944 181.1C271.544 181.7 271.844 182.483 271.844 183.45V184.3C271.844 185.267 271.544 186.067 270.944 186.7C270.378 187.3 269.461 187.6 268.194 187.6Z\"\r\n      fill=\"#577FFC\"\r\n    />\r\n    <defs>\r\n      <filter\r\n        id=\"filter0_d\"\r\n        x=\"62\"\r\n        y=\"0\"\r\n        width=\"149\"\r\n        height=\"161.144\"\r\n        filterUnits=\"userSpaceOnUse\"\r\n        color-interpolation-filters=\"sRGB\"\r\n      >\r\n        <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\" />\r\n        <feColorMatrix\r\n          in=\"SourceAlpha\"\r\n          type=\"matrix\"\r\n          values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\r\n        />\r\n        <feOffset />\r\n        <feGaussianBlur stdDeviation=\"15\" />\r\n        <feColorMatrix\r\n          type=\"matrix\"\r\n          values=\"0 0 0 0 0.4125 0 0 0 0 0.554924 0 0 0 0 1 0 0 0 0.7 0\"\r\n        />\r\n        <feBlend\r\n          mode=\"normal\"\r\n          in2=\"BackgroundImageFix\"\r\n          result=\"effect1_dropShadow\"\r\n        />\r\n        <feBlend\r\n          mode=\"normal\"\r\n          in=\"SourceGraphic\"\r\n          in2=\"effect1_dropShadow\"\r\n          result=\"shape\"\r\n        />\r\n      </filter>\r\n    </defs>\r\n  </svg>\r\n)\r\n\r\nexport const BookinglaneIconForMobile = () => (\r\n  // <Draggable handle=\"#draggable\">\r\n  //   <div id=\"draggable\">\r\n  <svg\r\n    width=\"100\"\r\n    height=\"85\"\r\n    style={{\r\n      marginBottom: \"20px\",\r\n      marginTop: \"-10px\",\r\n      marginRight: \"0px\",\r\n      marginLeft: \"0px\",\r\n    }}\r\n    viewBox=\"0 0 272 188\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <g filter=\"url(#filter0_d)\">\r\n      <path\r\n        d=\"M108.337 30H140.366C140.494 30.0319 140.62 30.0781 140.75 30.0935C149.085 31.099 155.968 34.8759 161.236 41.3318C166.295 47.5319 168.641 54.7392 168.106 62.7949C168.077 63.2329 168.169 63.5369 168.498 63.8416C169.355 64.6343 170.207 65.4372 171 66.2925C174.638 70.2196 177.372 74.6889 179.076 79.781C180.04 82.6624 180.589 85.6271 181 88.6248V95.3157C180.881 96.2349 180.784 97.1575 180.638 98.0721C179.906 102.68 178.36 107.005 176.091 111.078C173.075 116.489 168.948 120.89 163.852 124.376C158.907 127.759 153.43 129.81 147.51 130.702C145.036 131.075 142.555 131.336 140.065 130.961C133.92 130.037 129.827 126.335 127.035 121.045C125.264 117.69 124.83 113.974 124.723 110.239C124.626 106.816 124.624 103.391 124.611 99.9664C124.554 83.0017 124.576 66.0369 124.675 49.0722C124.682 48.0404 124.659 46.9899 124.476 45.9795C123.163 38.7203 116.94 33.7157 109.441 34.3185C105.716 34.6165 102.624 36.2304 100.062 38.8761C97.3284 41.7034 96.2881 45.1789 96.2911 49.0542C96.3056 69.1519 96.3081 89.2495 96.2986 109.347C96.2986 111.444 96.3234 113.545 96.6023 115.624C97.2206 120.229 99.0985 124.256 102.281 127.66C103.418 128.876 104.649 129.975 106.243 130.622C106.071 130.717 105.943 130.747 105.818 130.735C105.581 130.712 105.346 130.672 105.115 130.614C102.172 129.834 99.7753 128.143 97.715 125.984C93.8366 121.919 91.9832 117.088 92.0001 111.419C92.0647 90.1272 92.0241 68.8342 92.0294 47.542C92.0294 46.8803 92.0343 46.207 92.1492 45.5588C93.2525 39.3257 96.665 34.8079 102.297 31.9311C104.21 30.9533 106.249 30.408 108.337 30ZM122.652 34.3451C123.207 34.8875 123.83 35.2876 124.159 35.857C125.162 37.5895 126.632 37.8638 128.504 37.8248C132.478 37.7422 136.469 37.5557 140.432 38.0781C146.101 38.8254 150.831 41.4463 154.548 45.7081C158.949 50.7593 160.823 56.7277 160.016 63.4168C159.156 70.5438 155.482 75.8776 149.317 79.486C145.565 81.6824 141.457 82.6207 137.125 82.6207C134.682 82.6207 132.239 82.6335 129.797 82.6143C129.189 82.6098 128.912 82.8166 128.947 83.4468C128.978 84.0293 128.992 84.6178 128.943 85.1977C128.88 85.96 129.171 86.2298 129.941 86.2201C132.596 86.1863 135.252 86.1702 137.906 86.216C142.491 86.2952 146.755 85.0352 150.702 82.8651C159.637 77.9524 165.033 68.3977 163.564 57.5095C162.175 47.1982 156.409 40.1 146.853 36.0634C143.885 34.8094 140.768 34.2498 137.541 34.2524C132.683 34.2566 127.825 34.2292 122.967 34.2179C122.92 34.2187 122.872 34.2554 122.652 34.3451ZM133.708 123.072C135.247 124.686 137.004 125.761 139.076 126.32C141.483 126.967 143.915 126.826 146.344 126.501C152.221 125.713 157.551 123.549 162.364 120.097C167.496 116.419 171.239 111.611 173.808 105.877C175.821 101.385 176.805 96.6557 176.774 91.7336C176.739 86.5252 175.493 81.5916 173.17 76.9409C171.743 74.0873 169.908 71.4565 167.724 69.1311C167.287 68.665 167.094 68.6957 166.915 69.3233C166.699 70.0874 166.461 70.8565 166.124 71.573C165.722 72.428 165.882 73.0499 166.469 73.7915C171.95 80.7103 173.772 88.6376 172.339 97.2246C170.884 105.946 166.315 112.822 158.971 117.787C154.642 120.714 149.841 122.355 144.63 122.788C141.316 123.064 137.997 122.879 134.681 122.941C134.396 122.944 134.1 122.87 133.709 123.07L133.708 123.072ZM133.928 42.1538C132.066 42.1538 130.446 42.176 128.828 42.1433C128.131 42.1294 128.006 42.3828 128.197 43.0028C128.395 43.6351 128.545 44.2812 128.647 44.9357C128.753 45.6297 129.046 45.9142 129.794 45.9014C132.341 45.8579 134.89 45.8748 137.438 45.8883C140.655 45.9056 143.56 46.9437 146.107 48.8414C150.077 51.7937 152.066 55.8461 152.066 60.7651C152.063 66.2073 149.508 70.2274 144.749 72.8288C142.341 74.1447 139.708 74.5929 136.992 74.6068C134.656 74.6199 132.32 74.6068 129.984 74.6128C129.016 74.6158 128.961 74.6811 128.956 75.6678C128.953 76.2252 128.987 76.7848 128.947 77.3391C128.897 78.0444 129.21 78.2696 129.883 78.2628C132.723 78.2347 135.563 78.2354 138.405 78.2328C139.445 78.2328 140.47 78.0943 141.483 77.8841C150.872 75.9384 156.693 68.0798 155.761 58.6182C155.021 51.1031 148.966 44.3611 141.454 42.6147C138.878 42.0168 136.28 42.194 133.928 42.1519V42.1538ZM136.596 115.093C134.684 115.093 132.772 115.1 130.86 115.089C130.232 115.085 129.964 115.294 130.175 115.956C130.368 116.562 130.531 117.178 130.663 117.801C130.802 118.463 131.163 118.689 131.841 118.682C134.919 118.653 138.002 118.72 141.081 118.652C143.438 118.6 145.794 118.441 148.106 117.883C153.74 116.522 158.468 113.633 162.172 109.224C166.736 103.794 168.824 97.4806 168.388 90.3562C168.095 85.5873 166.504 81.3033 163.777 77.4074C163.461 76.957 163.286 77.0745 163.036 77.4375C162.644 78.0053 162.283 78.61 161.805 79.0983C161.231 79.6857 161.274 80.1391 161.697 80.8173C164.622 85.5088 165.465 90.6185 164.537 96.0259C163.679 101.032 161.346 105.291 157.663 108.764C154.131 112.094 149.942 114.151 145.104 114.817C142.277 115.205 139.433 115.058 136.596 115.091V115.093ZM136.567 106.992C134.093 106.992 132.024 106.99 129.953 106.992C129.554 106.992 129.11 106.944 129.161 107.58C129.216 108.266 129.261 108.955 129.29 109.644C129.322 110.408 129.613 110.741 130.465 110.73C134.233 110.682 138.003 110.723 141.771 110.699C142.75 110.692 143.741 110.649 144.703 110.484C150.978 109.402 155.699 106.1 158.522 100.365C161.231 94.8638 161.321 89.3019 158.401 83.791C158.068 83.1619 157.807 83.207 157.343 83.6063C156.822 84.0567 156.277 84.4876 155.699 84.8592C155.165 85.2015 155.087 85.5396 155.387 86.1007C156.422 88.0385 156.827 90.1426 156.808 92.3176C156.748 99.3584 151.524 105.469 144.584 106.69C141.788 107.182 138.97 106.897 136.567 106.99V106.992ZM134.269 70.2684C135.663 70.2015 137.385 70.3303 139.109 70.1276C144.824 69.4554 148.383 64.4906 147.71 59.5697C147.117 55.2365 143.671 51.1838 139.325 50.4842C136.09 49.9628 132.809 50.334 129.549 50.2702C129.109 50.2616 128.953 50.5352 128.955 50.9458C128.96 51.7682 128.97 52.5912 128.95 53.4132C128.936 53.9597 129.17 54.1785 129.71 54.1691C130.745 54.1515 131.781 54.1447 132.816 54.1691C134.802 54.2179 136.798 54.0036 138.775 54.3403C141.452 54.7959 143.585 56.9627 143.899 59.5344C144.243 62.352 142.773 64.9166 140.149 65.9878C139.081 66.4239 137.94 66.5312 136.791 66.532C134.482 66.5339 132.173 66.5541 129.863 66.5256C129.168 66.517 128.901 66.7636 128.945 67.4545C128.982 68.1171 128.983 68.7812 128.947 69.4438C128.916 70.0762 129.199 70.2864 129.801 70.2766C131.181 70.2511 132.562 70.2665 134.269 70.2665V70.2684ZM136.287 102.614C138.092 102.614 139.897 102.621 141.703 102.614C146.473 102.592 149.774 100.279 151.654 95.9906C152.765 93.4579 152.705 90.8306 151.642 88.2442C151.39 87.6287 151.075 87.5161 150.487 87.8141C149.917 88.0999 149.323 88.3331 148.711 88.5107C148.01 88.716 147.817 88.9337 148.169 89.7181C150.029 93.8722 148.272 98.2497 143.199 98.9087C140.902 99.2067 138.585 98.9947 136.278 99.0262C134.127 99.0559 131.977 99.0495 129.826 99.0236C129.171 99.0161 128.905 99.2529 128.946 99.9097C128.987 100.493 128.987 101.078 128.946 101.661C128.888 102.4 129.195 102.636 129.917 102.627C132.038 102.592 134.163 102.612 136.287 102.612V102.614ZM136.159 90.5923V90.6636C134.089 90.6636 132.02 90.6756 129.95 90.6572C129.212 90.6508 128.883 90.9267 128.942 91.6983C128.994 92.3867 128.994 93.078 128.942 93.7664C128.886 94.5227 129.15 94.7952 129.933 94.788C133.595 94.755 137.258 94.782 140.92 94.7663C141.741 94.7629 142.57 94.7182 143.361 94.4604C144.256 94.168 144.62 93.569 144.528 92.6322C144.385 91.1853 143.793 90.6287 142.212 90.6009C140.194 90.5634 138.176 90.5904 136.159 90.5904V90.5923ZM133.652 62.278C134.842 62.203 136.305 62.4124 137.756 62.1654C139.013 61.95 139.595 61.3142 139.534 60.2385C139.479 59.2687 138.761 58.5811 137.571 58.5589C134.945 58.5101 132.317 58.5398 129.691 58.5289C129.143 58.5267 128.936 58.7883 128.95 59.3171C128.969 60.0328 128.98 60.7508 128.947 61.4655C128.917 62.1035 129.203 62.3021 129.804 62.2882C130.998 62.2593 132.192 62.278 133.652 62.278Z\"\r\n        fill=\"#577FFC\"\r\n      />\r\n      <path\r\n        d=\"M114.666 130.629C113.925 130.808 113.28 130.543 112.646 130.298C108.288 128.614 105.187 125.521 102.909 121.53C101.272 118.662 100.455 115.59 100.46 112.26C100.488 90.9148 100.493 69.5702 100.476 48.2256C100.476 43.3314 103.823 39.2088 108.612 38.1598C114.537 36.8608 120.506 41.3913 120.838 47.4119C120.9 48.5533 120.917 49.6924 120.917 50.8334C120.919 70.9837 120.917 91.1336 120.912 111.283C120.912 114.385 121.193 117.435 122.315 120.352C123.704 123.96 125.729 127.12 128.868 129.472C129.167 129.694 129.476 129.9 129.795 130.091C130.088 130.268 130.398 130.416 130.795 130.627C130.387 130.81 130.074 130.7 129.757 130.621C126.735 129.87 124.32 128.11 122.229 125.911C118.463 121.955 116.541 117.261 116.553 111.736C116.592 90.6566 116.597 69.5774 116.567 48.4981C116.567 45.3533 114.724 43.0229 111.784 42.41C108.371 41.6969 104.986 44.3391 104.874 47.8064C104.844 48.7345 104.829 49.6633 104.827 50.5928C104.825 70.5044 104.825 90.4155 104.827 110.326C104.827 112.927 104.849 115.525 105.519 118.072C106.613 122.234 108.66 125.821 111.838 128.744C112.68 129.519 113.651 130.095 114.666 130.629Z\"\r\n        fill=\"#577FFC\"\r\n      />\r\n      <path\r\n        d=\"M122.996 130.623C122.4 130.792 122.05 130.723 121.694 130.632C119.238 130.002 117.167 128.669 115.318 127.004C111.797 123.832 109.463 119.962 108.706 115.234C108.556 114.264 108.484 113.283 108.488 112.301C108.476 91.1972 108.474 70.0929 108.48 48.9884C108.48 48.2715 108.456 47.5419 108.913 46.9241C109.441 46.2109 110.442 45.8439 111.241 46.0526C112.039 46.2612 112.719 47.0659 112.821 47.969C112.865 48.3627 112.848 48.7643 112.848 49.1621C112.852 70.3463 112.86 91.5303 112.871 112.714C112.88 118.058 114.728 122.81 118.081 126.935C119.342 128.486 120.841 129.856 122.996 130.623Z\"\r\n        fill=\"#577FFC\"\r\n      />\r\n    </g>\r\n    <path\r\n      d=\"M0.3 152.1H15.75C18.65 152.1 20.9167 152.917 22.55 154.55C24.2167 156.183 25.05 158.367 25.05 161.1C25.05 162.4 24.8667 163.517 24.5 164.45C24.1333 165.35 23.6667 166.1 23.1 166.7C22.5333 167.267 21.8833 167.7 21.15 168C20.4167 168.267 19.7 168.433 19 168.5V168.8C19.7 168.833 20.4667 169 21.3 169.3C22.1667 169.6 22.9667 170.083 23.7 170.75C24.4333 171.383 25.05 172.217 25.55 173.25C26.05 174.25 26.3 175.483 26.3 176.95C26.3 178.35 26.0667 179.667 25.6 180.9C25.1667 182.133 24.55 183.2 23.75 184.1C22.95 185 22 185.717 20.9 186.25C19.8 186.75 18.6 187 17.3 187H0.3V152.1ZM5.95 182.15H15.65C17.1167 182.15 18.2667 181.767 19.1 181C19.9333 180.233 20.35 179.133 20.35 177.7V176C20.35 174.567 19.9333 173.467 19.1 172.7C18.2667 171.933 17.1167 171.55 15.65 171.55H5.95V182.15ZM5.95 166.85H14.7C16.1 166.85 17.1833 166.5 17.95 165.8C18.7167 165.067 19.1 164.033 19.1 162.7V161.1C19.1 159.767 18.7167 158.75 17.95 158.05C17.1833 157.317 16.1 156.95 14.7 156.95H5.95V166.85ZM46.594 187.6C44.3273 187.6 42.2607 187.217 40.394 186.45C38.5607 185.65 36.9773 184.5 35.644 183C34.344 181.467 33.3273 179.583 32.594 177.35C31.894 175.083 31.544 172.483 31.544 169.55C31.544 166.617 31.894 164.033 32.594 161.8C33.3273 159.533 34.344 157.65 35.644 156.15C36.9773 154.617 38.5607 153.467 40.394 152.7C42.2607 151.9 44.3273 151.5 46.594 151.5C48.8607 151.5 50.9107 151.9 52.744 152.7C54.6107 153.467 56.194 154.617 57.494 156.15C58.8273 157.65 59.844 159.533 60.544 161.8C61.2773 164.033 61.644 166.617 61.644 169.55C61.644 172.483 61.2773 175.083 60.544 177.35C59.844 179.583 58.8273 181.467 57.494 183C56.194 184.5 54.6107 185.65 52.744 186.45C50.9107 187.217 48.8607 187.6 46.594 187.6ZM46.594 182.55C47.9273 182.55 49.144 182.317 50.244 181.85C51.3773 181.383 52.3273 180.717 53.094 179.85C53.894 178.95 54.5107 177.867 54.944 176.6C55.3773 175.333 55.594 173.9 55.594 172.3V166.8C55.594 165.2 55.3773 163.767 54.944 162.5C54.5107 161.233 53.894 160.167 53.094 159.3C52.3273 158.4 51.3773 157.717 50.244 157.25C49.144 156.783 47.9273 156.55 46.594 156.55C45.2273 156.55 43.994 156.783 42.894 157.25C41.794 157.717 40.844 158.4 40.044 159.3C39.2773 160.167 38.6773 161.233 38.244 162.5C37.8107 163.767 37.594 165.2 37.594 166.8V172.3C37.594 173.9 37.8107 175.333 38.244 176.6C38.6773 177.867 39.2773 178.95 40.044 179.85C40.844 180.717 41.794 181.383 42.894 181.85C43.994 182.317 45.2273 182.55 46.594 182.55ZM82.0247 187.6C79.758 187.6 77.6914 187.217 75.8247 186.45C73.9914 185.65 72.408 184.5 71.0747 183C69.7747 181.467 68.758 179.583 68.0247 177.35C67.3247 175.083 66.9747 172.483 66.9747 169.55C66.9747 166.617 67.3247 164.033 68.0247 161.8C68.758 159.533 69.7747 157.65 71.0747 156.15C72.408 154.617 73.9914 153.467 75.8247 152.7C77.6914 151.9 79.758 151.5 82.0247 151.5C84.2914 151.5 86.3414 151.9 88.1747 152.7C90.0414 153.467 91.6247 154.617 92.9247 156.15C94.258 157.65 95.2747 159.533 95.9747 161.8C96.708 164.033 97.0747 166.617 97.0747 169.55C97.0747 172.483 96.708 175.083 95.9747 177.35C95.2747 179.583 94.258 181.467 92.9247 183C91.6247 184.5 90.0414 185.65 88.1747 186.45C86.3414 187.217 84.2914 187.6 82.0247 187.6ZM82.0247 182.55C83.358 182.55 84.5747 182.317 85.6747 181.85C86.808 181.383 87.758 180.717 88.5247 179.85C89.3247 178.95 89.9414 177.867 90.3747 176.6C90.808 175.333 91.0247 173.9 91.0247 172.3V166.8C91.0247 165.2 90.808 163.767 90.3747 162.5C89.9414 161.233 89.3247 160.167 88.5247 159.3C87.758 158.4 86.808 157.717 85.6747 157.25C84.5747 156.783 83.358 156.55 82.0247 156.55C80.658 156.55 79.4247 156.783 78.3247 157.25C77.2247 157.717 76.2747 158.4 75.4747 159.3C74.708 160.167 74.108 161.233 73.6747 162.5C73.2414 163.767 73.0247 165.2 73.0247 166.8V172.3C73.0247 173.9 73.2414 175.333 73.6747 176.6C74.108 177.867 74.708 178.95 75.4747 179.85C76.2747 180.717 77.2247 181.383 78.3247 181.85C79.4247 182.317 80.658 182.55 82.0247 182.55ZM114.405 170.7L109.605 176.2V187H103.955V152.1H109.605V169.8H109.805L114.805 163.45L124.205 152.1H130.805L118.355 166.8L131.805 187H125.005L114.405 170.7ZM157.85 167.7L154 160.3H153.85V187H148.45V152.1H154.75L166.15 171.4L170 178.8H170.15V152.1H175.55V187H169.25L157.85 167.7ZM197.478 187.6C195.211 187.6 193.145 187.217 191.278 186.45C189.445 185.65 187.861 184.5 186.528 183C185.228 181.467 184.211 179.583 183.478 177.35C182.778 175.083 182.428 172.483 182.428 169.55C182.428 166.617 182.778 164.033 183.478 161.8C184.211 159.533 185.228 157.65 186.528 156.15C187.861 154.617 189.445 153.467 191.278 152.7C193.145 151.9 195.211 151.5 197.478 151.5C199.745 151.5 201.795 151.9 203.628 152.7C205.495 153.467 207.078 154.617 208.378 156.15C209.711 157.65 210.728 159.533 211.428 161.8C212.161 164.033 212.528 166.617 212.528 169.55C212.528 172.483 212.161 175.083 211.428 177.35C210.728 179.583 209.711 181.467 208.378 183C207.078 184.5 205.495 185.65 203.628 186.45C201.795 187.217 199.745 187.6 197.478 187.6ZM197.478 182.55C198.811 182.55 200.028 182.317 201.128 181.85C202.261 181.383 203.211 180.717 203.978 179.85C204.778 178.95 205.395 177.867 205.828 176.6C206.261 175.333 206.478 173.9 206.478 172.3V166.8C206.478 165.2 206.261 163.767 205.828 162.5C205.395 161.233 204.778 160.167 203.978 159.3C203.211 158.4 202.261 157.717 201.128 157.25C200.028 156.783 198.811 156.55 197.478 156.55C196.111 156.55 194.878 156.783 193.778 157.25C192.678 157.717 191.728 158.4 190.928 159.3C190.161 160.167 189.561 161.233 189.128 162.5C188.695 163.767 188.478 165.2 188.478 166.8V172.3C188.478 173.9 188.695 175.333 189.128 176.6C189.561 177.867 190.161 178.95 190.928 179.85C191.728 180.717 192.678 181.383 193.778 181.85C194.878 182.317 196.111 182.55 197.478 182.55ZM224.07 187L215.82 152.1H221.57L225.12 168.9L227.57 180.5H227.72L230.52 168.9L234.67 152.1H240.97L245.07 168.9L247.82 180.45H247.97L250.52 168.9L254.17 152.1H259.72L251.12 187H244.77L240.32 168.95L237.72 158.35H237.62L234.97 168.95L230.42 187H224.07ZM266.944 177L265.194 162.05V152.1H271.094V162.05L269.444 177H266.944ZM268.194 187.6C266.928 187.6 265.994 187.3 265.394 186.7C264.828 186.067 264.544 185.267 264.544 184.3V183.45C264.544 182.483 264.828 181.7 265.394 181.1C265.994 180.467 266.928 180.15 268.194 180.15C269.461 180.15 270.378 180.467 270.944 181.1C271.544 181.7 271.844 182.483 271.844 183.45V184.3C271.844 185.267 271.544 186.067 270.944 186.7C270.378 187.3 269.461 187.6 268.194 187.6Z\"\r\n      fill=\"#577FFC\"\r\n    />\r\n    <defs>\r\n      <filter\r\n        id=\"filter0_d\"\r\n        x=\"62\"\r\n        y=\"0\"\r\n        width=\"149\"\r\n        height=\"161.144\"\r\n        filterUnits=\"userSpaceOnUse\"\r\n        color-interpolation-filters=\"sRGB\"\r\n      >\r\n        <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\" />\r\n        <feColorMatrix\r\n          in=\"SourceAlpha\"\r\n          type=\"matrix\"\r\n          values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\r\n        />\r\n        <feOffset />\r\n        <feGaussianBlur stdDeviation=\"15\" />\r\n        <feColorMatrix\r\n          type=\"matrix\"\r\n          values=\"0 0 0 0 0.4125 0 0 0 0 0.554924 0 0 0 0 1 0 0 0 0.7 0\"\r\n        />\r\n        <feBlend\r\n          mode=\"normal\"\r\n          in2=\"BackgroundImageFix\"\r\n          result=\"effect1_dropShadow\"\r\n        />\r\n        <feBlend\r\n          mode=\"normal\"\r\n          in=\"SourceGraphic\"\r\n          in2=\"effect1_dropShadow\"\r\n          result=\"shape\"\r\n        />\r\n      </filter>\r\n    </defs>\r\n  </svg>\r\n  //   </div>\r\n  // </Draggable>\r\n)\r\n\r\nexport const CloseWidgetIcon = () => (\r\n  <svg\r\n    width=\"15\"\r\n    height=\"15\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M17.4195 19.0767L9.99952 11.645L2.57952 19.0767L0.922852 17.42L8.35452 10L0.922852 2.58001L2.57952 0.92334L9.99952 8.35501L17.4195 0.935007L19.0645 2.58001L11.6445 10L19.0645 17.42L17.4195 19.0767Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const BackArrowIcon = () => (\r\n  <svg\r\n    width=\"6\"\r\n    height=\"10\"\r\n    viewBox=\"0 0 6 10\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      fill-rule=\"evenodd\"\r\n      clip-rule=\"evenodd\"\r\n      d=\"M4.76857 0.203577L0.146076 4.66058C-0.048692 4.8482 -0.048692 5.15131 0.146076 5.33942L4.76857 9.79642C5.04973 10.0679 5.50719 10.0679 5.78885 9.79642C6.07002 9.52499 6.07002 9.08445 5.78885 8.81302L1.83456 4.99976L5.78885 1.18747C6.07002 0.915548 6.07002 0.475013 5.78885 0.203577C5.50719 -0.0678587 5.04973 -0.0678587 4.76857 0.203577Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const ForwardArrowIcon = () => (\r\n  <svg\r\n    width=\"6\"\r\n    height=\"10\"\r\n    viewBox=\"0 0 6 10\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      fill-rule=\"evenodd\"\r\n      clip-rule=\"evenodd\"\r\n      d=\"M1.23143 0.203577L5.85392 4.66058C6.04869 4.8482 6.04869 5.15131 5.85392 5.33942L1.23143 9.79642C0.950267 10.0679 0.492813 10.0679 0.211148 9.79642C-0.0700169 9.52499 -0.0700169 9.08445 0.211148 8.81302L4.16544 4.99976L0.211148 1.18747C-0.0700169 0.915548 -0.0700169 0.475013 0.211148 0.203577C0.492813 -0.0678587 0.950267 -0.0678587 1.23143 0.203577Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const EditIcon = () => (\r\n  <svg\r\n    width=\"16\"\r\n    height=\"16\"\r\n    viewBox=\"0 0 26 26\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M1.50387 25.8748C1.61524 25.8748 1.72662 25.8611 1.83662 25.8336L7.33662 24.4586C7.57862 24.3981 7.79999 24.273 7.976 24.097L24.8789 7.19409C25.3986 6.67434 25.6846 5.98409 25.6846 5.24984C25.6846 4.51559 25.3986 3.82534 24.8789 3.30559L22.6981 1.12484C21.6586 0.0853398 19.8491 0.0853398 18.8096 1.12484L1.90674 18.0277C1.73083 18.2038 1.60587 18.4243 1.54512 18.6657L0.17012 24.1657C0.119331 24.3685 0.11543 24.5801 0.158714 24.7846C0.201997 24.9891 0.291326 25.181 0.41991 25.3458C0.548494 25.5105 0.712951 25.6438 0.900778 25.7355C1.08861 25.8272 1.29486 25.8748 1.50387 25.8748ZM20.7539 3.06909L22.9346 5.24984L20.7539 7.43059L18.5731 5.24984L20.7539 3.06909ZM4.1205 19.7025L16.6289 7.19409L18.8096 9.37484L6.29987 21.8832L3.39312 22.6092L4.1205 19.7025Z\"\r\n      fill=\"url(#paint0_radial)\"\r\n    />\r\n    <defs>\r\n      <radialGradient\r\n        id=\"paint0_radial\"\r\n        cx=\"0\"\r\n        cy=\"0\"\r\n        r=\"1\"\r\n        gradientUnits=\"userSpaceOnUse\"\r\n        gradientTransform=\"translate(1.72614 3.91935) rotate(47.4628) scale(29.7968 852.45)\"\r\n      >\r\n        <stop stopColor=\"#568AFD\" />\r\n        <stop offset=\"0.494792\" stopColor=\"#670DF2\" />\r\n        <stop offset=\"1\" stopColor=\"#851EDF\" />\r\n      </radialGradient>\r\n    </defs>\r\n  </svg>\r\n)\r\n\r\nexport const EditPencilIcon = () => (\r\n  <svg\r\n    width=\"16\"\r\n    height=\"26\"\r\n    viewBox=\"0 0 26 26\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M1.50387 25.8748C1.61524 25.8748 1.72662 25.8611 1.83662 25.8336L7.33662 24.4586C7.57862 24.3981 7.79999 24.273 7.976 24.097L24.8789 7.19409C25.3986 6.67434 25.6846 5.98409 25.6846 5.24984C25.6846 4.51559 25.3986 3.82534 24.8789 3.30559L22.6981 1.12484C21.6586 0.0853398 19.8491 0.0853398 18.8096 1.12484L1.90674 18.0277C1.73083 18.2038 1.60587 18.4243 1.54512 18.6657L0.17012 24.1657C0.119331 24.3685 0.11543 24.5801 0.158714 24.7846C0.201997 24.9891 0.291326 25.181 0.41991 25.3458C0.548494 25.5105 0.712951 25.6438 0.900778 25.7355C1.08861 25.8272 1.29486 25.8748 1.50387 25.8748ZM20.7539 3.06909L22.9346 5.24984L20.7539 7.43059L18.5731 5.24984L20.7539 3.06909ZM4.1205 19.7025L16.6289 7.19409L18.8096 9.37484L6.29987 21.8832L3.39312 22.6092L4.1205 19.7025Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const HourIcon = () => (\r\n  <svg\r\n    width=\"22\"\r\n    height=\"18\"\r\n    viewBox=\"0 0 18 28\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M0 0.194336H18V8.49063L12.0234 13.9999L18 19.5091V27.8054H0V19.5091L5.97656 13.9999L0 8.49063V0.194336ZM14.9766 20.2221L9 14.7129L3.02344 20.2221V25.0832H14.9766V20.2221ZM9 13.2869L14.9766 7.77767V2.91656H3.02344V7.77767L9 13.2869Z\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nexport const DoneIcon = () => (\r\n  <svg\r\n    width=\"31\"\r\n    height=\"10\"\r\n    viewBox=\"0 0 51 16\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M0.445312 15V0.78125H4.64453C5.90104 0.78125 7.01432 1.0612 7.98438 1.62109C8.96094 2.18099 9.71615 2.97526 10.25 4.00391C10.7839 5.03255 11.0508 6.21094 11.0508 7.53906V8.25195C11.0508 9.59961 10.7806 10.7845 10.2402 11.8066C9.70638 12.8288 8.94141 13.6165 7.94531 14.1699C6.95573 14.7233 5.81966 15 4.53711 15H0.445312ZM2.91602 2.77344V13.0273H4.52734C5.82292 13.0273 6.81576 12.6237 7.50586 11.8164C8.20247 11.0026 8.55729 9.83724 8.57031 8.32031V7.5293C8.57031 5.98633 8.23503 4.80794 7.56445 3.99414C6.89388 3.18034 5.92057 2.77344 4.64453 2.77344H2.91602ZM24.6944 8.26172C24.6944 9.65495 24.4535 10.8789 23.9717 11.9336C23.4899 12.9818 22.7998 13.7891 21.9014 14.3555C21.0095 14.9154 19.9808 15.1953 18.8155 15.1953C17.6631 15.1953 16.6345 14.9154 15.7295 14.3555C14.8311 13.7891 14.1345 12.985 13.6397 11.9434C13.1514 10.9017 12.904 9.70052 12.8975 8.33984V7.53906C12.8975 6.15234 13.1416 4.92839 13.6299 3.86719C14.1247 2.80599 14.8181 1.99544 15.71 1.43555C16.6084 0.869141 17.6371 0.585938 18.7959 0.585938C19.9548 0.585938 20.9802 0.865885 21.8721 1.42578C22.7705 1.97917 23.4639 2.77995 23.9522 3.82812C24.4405 4.86979 24.6879 6.08398 24.6944 7.4707V8.26172ZM22.2237 7.51953C22.2237 5.94401 21.9242 4.73633 21.3252 3.89648C20.7328 3.05664 19.8897 2.63672 18.7959 2.63672C17.7282 2.63672 16.8916 3.05664 16.2862 3.89648C15.6872 4.72982 15.3812 5.91146 15.3682 7.44141V8.26172C15.3682 9.82422 15.6709 11.0319 16.2764 11.8848C16.8884 12.7376 17.7347 13.1641 18.8155 13.1641C19.9092 13.1641 20.7491 12.7474 21.335 11.9141C21.9274 11.0807 22.2237 9.86328 22.2237 8.26172V7.51953ZM38.2696 15H35.7989L29.461 4.91211V15H26.9903V0.78125H29.461L35.8184 10.9082V0.78125H38.2696V15ZM49.3351 8.65234H43.4952V13.0273H50.3214V15H41.0245V0.78125H50.253V2.77344H43.4952V6.69922H49.3351V8.65234Z\"\r\n      fill=\"url(#paint0_radial)\"\r\n    />\r\n    <defs>\r\n      <radialGradient\r\n        id=\"paint0_radial\"\r\n        cx=\"0\"\r\n        cy=\"0\"\r\n        r=\"1\"\r\n        gradientUnits=\"userSpaceOnUse\"\r\n        gradientTransform=\"translate(2.25 1.38) rotate(19.63) scale(43.519 790.824)\"\r\n      >\r\n        <stop stopColor=\"#568AFD\" />\r\n        <stop offset=\"0.494792\" stopColor=\"#670DF2\" />\r\n        <stop offset=\"1\" stopColor=\"#851EDF\" />\r\n      </radialGradient>\r\n    </defs>\r\n  </svg>\r\n)\r\n\r\nexport const Sedan = () => (\r\n  <div>\r\n    <img\r\n      style={{ width: \"100%\" }}\r\n      alt=\"sedan\"\r\n      src=\"http://bookinglane-webui.us-east-2.elasticbeanstalk.com/images/cartypes/sedan.png\"\r\n    />\r\n  </div>\r\n)\r\n\r\nexport const Suv = () => (\r\n  <div>\r\n    <img\r\n      className=\"booking-suv-image-icon\"\r\n      alt=\"sedan\"\r\n      src=\"http://bookinglane-webui.us-east-2.elasticbeanstalk.com/images/cartypes/suv.png\"\r\n    />\r\n  </div>\r\n)\r\n\r\nexport const Limo = () => (\r\n  <div>\r\n    <img\r\n      className=\"booking-limo-image-icon\"\r\n      alt=\"Limo\"\r\n      src=\"http://bookinglane-webui.us-east-2.elasticbeanstalk.com/images/cartypes/limo.png\"\r\n    />\r\n  </div>\r\n)\r\n\r\nexport const MiniBus = () => (\r\n  <div>\r\n    <img\r\n      className=\"booking-minibus-image-icon\"\r\n      alt=\"MiniBus\"\r\n      src=\"http://bookinglane-webui.us-east-2.elasticbeanstalk.com/images/cartypes/miniBus.png\"\r\n    />\r\n  </div>\r\n)\r\n\r\nexport const ArrowDown = () => (\r\n  <svg\r\n    width=\"10\"\r\n    height=\"31\"\r\n    aria-hidden=\"true\"\r\n    focusable=\"false\"\r\n    data-prefix=\"fas\"\r\n    data-icon=\"long-arrow-alt-down\"\r\n    className=\"svg-inline--fa fa-long-arrow-alt-down fa-w-8\"\r\n    role=\"img\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 256 512\"\r\n  >\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M168 345.941V44c0-6.627-5.373-12-12-12h-56c-6.627 0-12 5.373-12 12v301.941H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.569 9.373 33.941 0l86.059-86.059c15.119-15.119 4.411-40.971-16.971-40.971H168z\"\r\n    ></path>\r\n  </svg>\r\n)\r\n\r\nexport const ArrowDownLine = () => (\r\n  <svg\r\n    width=\"30\"\r\n    height=\"20\"\r\n    aria-hidden=\"true\"\r\n    focusable=\"false\"\r\n    data-prefix=\"fas\"\r\n    data-icon=\"chevron-down\"\r\n    className=\"svg-inline--fa fa-chevron-down fa-w-14\"\r\n    role=\"img\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 448 512\"\r\n  >\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z\"\r\n    ></path>\r\n  </svg>\r\n)\r\n","C:\\Emir's folder\\widget-booking\\src\\Components\\CompanyProfile\\CompanyProfile.js",["164","165","166"],"import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getCompanyProfile } from '../../Redux/company-profile-reducer'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { CloseWidgetIcon } from '../../assets/icons'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport { isMobile } from 'react-device-detect'\r\nimport { Preloader } from '../Helpers/Preloader'\r\nimport AppBar from '@material-ui/core/AppBar'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  companyContainer: {\r\n    padding: theme.spacing(1.5),\r\n    // position: 'fixed',\r\n  },\r\n  companyLogo: {\r\n    borderRadius: '100px',\r\n    width: '55px',\r\n    height: '55px',\r\n    marginLeft: '15px',\r\n    userDrag: 'none',\r\n    userSelect: 'none',\r\n    mozUserSelect: 'none',\r\n    webkitUserDrag: 'none',\r\n    webkitUserSelect: 'none',\r\n    msUserSelect: 'none',\r\n  },\r\n  companyName: {\r\n    fontFamily: 'Roboto',\r\n    fontWeight: '700',\r\n    color: 'white',\r\n    fontSize: '24px',\r\n    textTransform: 'none',\r\n  },\r\n}))\r\n\r\nconst CompanyProfile = ({\r\n  initializing,\r\n  profile,\r\n  getCompanyProfile,\r\n  handleCloseDialog,\r\n  setExpanded,\r\n  setActiveStep,\r\n  setBackgroundScrollStop,\r\n}) => {\r\n  const classes = useStyles()\r\n\r\n  const jwtToken = localStorage.getItem('Authorization')\r\n\r\n  useEffect(() => {\r\n    if (jwtToken) {\r\n      getCompanyProfile()\r\n    }\r\n  }, [getCompanyProfile, jwtToken])\r\n\r\n  return (\r\n    <>\r\n      {/* {isMobile ? <> <Grid container direction=\"row\"\r\n                justify=\"space-between\"\r\n                alignItems=\"center\"\r\n                className={classes.companyContainer}>\r\n                <Grid item>\r\n                    <img src={profile.companyLogoPath} className={classes.companyLogo} alt='companyLogo' />\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                    <Typography className={classes.companyName}>{profile.companyName}</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <span style={{ cursor: 'pointer' }} onClick={() => { handleCloseDialog(false); setActiveStep(0) }}>\r\n                        <CloseWidgetIcon />\r\n                    </span>\r\n                </Grid>\r\n            </Grid>\r\n                <Divider orientation='horizontal' variant='fullWidth' />\r\n            </> : */}\r\n      {/* {initializing ? ( */}\r\n\r\n      <Grid\r\n        container\r\n        direction='row'\r\n        justify='space-between'\r\n        alignItems='center'\r\n        className={classes.companyContainer}\r\n      >\r\n        <Grid item>\r\n          <img\r\n            src={profile.companyLogoPath}\r\n            className={classes.companyLogo}\r\n            alt='companyLogo'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6} md={8}>\r\n          <Typography className={classes.companyName}>\r\n            {profile.companyName}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <span\r\n            style={{ cursor: 'pointer' }}\r\n            onClick={() => {\r\n              setExpanded(false)\r\n              setActiveStep(0)\r\n              setBackgroundScrollStop(false)\r\n            }}\r\n          >\r\n            <CloseWidgetIcon />\r\n          </span>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Divider orientation='horizontal' variant='fullWidth' />\r\n\r\n      {/* ) : (\r\n        <Preloader />\r\n      )} */}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.companyProfile.profile,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getCompanyProfile })(CompanyProfile)\r\n","C:\\Emir's folder\\widget-booking\\src\\Components\\Helpers\\Preloader.js",[],"C:\\Emir's folder\\widget-booking\\src\\Components\\CheckoutForm\\CheckOut\\CheckOut.js",[],"C:\\Emir's folder\\widget-booking\\src\\Redux\\form-reducer.js",["167","168"],"import { formApi } from \"../api/api\"\r\nimport { toggleIsFetching } from \"./car-reducer\"\r\nimport { isSuccess } from \"./company-profile-reducer\"\r\n\r\nexport const SET_FORM_DATA = \"./form-reducer/SET_FORM_DATA\"\r\nconst SET_NOTE = \"./form-reducer/SET_NOTE\"\r\nconst LOGOUT = \"./form-reducer/LOGOUT\"\r\nconst SET_CAR_ID = \"./form-reducer/SET_CAR_ID\"\r\nconst SET_ORDER_SUM = \"./form-reducer/SET_ORDER_SUM\"\r\nconst SET_PAYMENT_FORM = \"./form-reducer/SET_PAYMENT_FORM\"\r\nconst SET_EXACT_DATE = \"./form-reducer/SET_EXACT_DATE\"\r\nconst SET_EXACT_TIME = \"./form-reducer/SET_EXACT_TIME\"\r\n\r\nlet initialState = {\r\n  orderType: 3,\r\n  bookingType: 0,\r\n  orderSum: 0,\r\n  orderStartDate: \"\",\r\n  orderStartTime: \"\",\r\n  passengersQuantity: 0,\r\n  carInfo: {\r\n    id: 0,\r\n  },\r\n  orderAddressDetails: [\r\n    {\r\n      rideCheckPoint: \"\",\r\n      latitude: 0,\r\n      longitude: 0,\r\n      placeType: 0,\r\n      placeId: \"\",\r\n    },\r\n    {\r\n      rideCheckPoint: \"\",\r\n      latitude: 0,\r\n      longitude: 0,\r\n      placeType: 0,\r\n      placeId: \"\",\r\n    },\r\n  ],\r\n  orderNotes: \"\",\r\n  hours: 0,\r\n  paymentInfo: {\r\n    cardNumber: \"\",\r\n    month: null,\r\n    year: null,\r\n    cvc: \"\",\r\n    amount: 0,\r\n  },\r\n  client: {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\",\r\n    address: \"\",\r\n    zip: \"\",\r\n    cityId: 0,\r\n    stateId: 0,\r\n  },\r\n  greetClientInfo: {\r\n    id: 0,\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\",\r\n  },\r\n  isAirportPickupIncluded: false,\r\n  flightNumber: \"\",\r\n  airlines: {\r\n    id: 0,\r\n  },\r\n}\r\n\r\nconst formReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_FORM_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.dataForm,\r\n      }\r\n    // case SET_EXACT_DATE:\r\n    //   return {\r\n    //     ...state,\r\n    //     orderStartDate: action.date,\r\n    //   };\r\n    // case SET_EXACT_TIME:\r\n    //   return {\r\n    //     ...state,\r\n    //     orderStartTime: action.time,\r\n    //   };\r\n    case SET_NOTE:\r\n      return {\r\n        ...state,\r\n        orderNotes: action.note,\r\n      }\r\n    case SET_CAR_ID:\r\n      return {\r\n        ...state,\r\n        carInfo: { id: action.id },\r\n      }\r\n    case SET_ORDER_SUM:\r\n      return {\r\n        ...state,\r\n        orderSum: action.sum,\r\n      }\r\n    case LOGOUT:\r\n      return {\r\n        orderType: 3,\r\n        bookingType: 0,\r\n        orderSum: 0,\r\n        orderStartDate: \"\",\r\n        orderStartTime: \"\",\r\n        passengersQuantity: 0,\r\n        carInfo: {\r\n          id: 0,\r\n        },\r\n        orderAddressDetails: [\r\n          {\r\n            rideCheckPoint: \"\",\r\n            latitude: 0,\r\n            longitude: 0,\r\n            placeType: 0,\r\n            placeId: \"\",\r\n          },\r\n          {\r\n            rideCheckPoint: \"\",\r\n            latitude: 0,\r\n            longitude: 0,\r\n            placeType: 0,\r\n            placeId: \"\",\r\n          },\r\n        ],\r\n        orderNotes: \"\",\r\n        hours: 0,\r\n        paymentInfo: {\r\n          cardNumber: \"\",\r\n          month: null,\r\n          year: null,\r\n          cvc: \"\",\r\n          amount: 0,\r\n        },\r\n        client: {\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          email: \"\",\r\n          phoneNumber: \"\",\r\n          address: \"\",\r\n          zip: \"\",\r\n          cityId: 0,\r\n          stateId: 0,\r\n        },\r\n        greetClientInfo: {\r\n          id: 0,\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          email: \"\",\r\n          phoneNumber: \"\",\r\n        },\r\n        isAirportPickupIncluded: false,\r\n        flightNumber: \"\",\r\n        airlines: {\r\n          id: 0,\r\n        },\r\n      }\r\n    case SET_PAYMENT_FORM:\r\n      return {\r\n        ...state,\r\n        greetClientInfo: { ...action.form.greetClientInfo },\r\n        paymentInfo: {\r\n          ...action.form.paymentInfo,\r\n          month: action.date[0],\r\n          year: action.date[1],\r\n        },\r\n        client: {\r\n          ...action.form.client,\r\n          cityId: action.cityId,\r\n          stateId: action.stateId,\r\n        },\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setFormData = (dataForm) => ({ type: SET_FORM_DATA, dataForm })\r\n\r\n// export const setExactDate = (date) => ({\r\n//   type: SET_EXACT_DATE,\r\n//   date,\r\n// });\r\n// export const setExactTime = (time) => ({\r\n//   type: SET_EXACT_TIME,\r\n//   time,\r\n// });\r\n\r\nexport const logOut = () => ({ type: LOGOUT })\r\n\r\nexport const setNoteRedux = (note) => ({ type: SET_NOTE, note })\r\n\r\nexport const setCarId = (id) => ({ type: SET_CAR_ID, id })\r\n\r\nexport const setOrderSum = (sum) => ({ type: SET_ORDER_SUM, sum })\r\n\r\nexport const setPaymentForm = (form, cityId, stateId, date) => ({\r\n  type: SET_PAYMENT_FORM,\r\n  form,\r\n  cityId,\r\n  stateId,\r\n  date,\r\n})\r\n\r\nexport const createReservation = (formSummary) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    let response = await formApi.createReservation(formSummary)\r\n    if (response.status === 200) {\r\n      dispatch(isSuccess(true))\r\n    } else {\r\n      dispatch(isSuccess(false))\r\n    }\r\n    dispatch(toggleIsFetching(false))\r\n  }\r\n}\r\n\r\nexport default formReducer\r\n\r\n// ByDistance = 1,\r\n// ByHour = 2,\r\n// AirportTransfer = 3\r\n","C:\\Emir's folder\\widget-booking\\src\\Redux\\car-reducer.js",[],"C:\\Emir's folder\\widget-booking\\src\\api\\api.js",["169"],"import * as axios from \"axios\"\r\n\r\nconst jwtToken = localStorage.getItem(\"Authorization\")\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: `http://ec2-18-118-140-167.us-east-2.compute.amazonaws.com/api/`,\r\n  headers: {\r\n    'Authorization': 'Bearer ' + jwtToken,\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n  },\r\n})\r\n\r\nexport const authApi = {\r\n  getToken() {\r\n    const company0Key = \"35c0b3e4-50b4-4b02-8ea6-237811b6cebd\"\r\n    return axios.post(\"http://ec2-18-118-140-167.us-east-2.compute.amazonaws.com/api/companywidget/company-widget-auth\" , {\"accessKey\": \"35c0b3e4-50b4-4b02-8ea6-237811b6cebd\"} )\r\n      .then((response) => {\r\n        return response\r\n      })\r\n  },\r\n\r\n  getCompanyProfile() {\r\n    const jwtToken = localStorage.getItem(\"Authorization\")\r\n\r\n    const headers = {\r\n      \"Authorization\": \"Bearer \" + jwtToken,\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    }\r\n\r\n    return axiosInstance\r\n      .get(\"companywidget/company-widget-info\", { headers: headers })\r\n      .then((response) => {\r\n        return response\r\n      })\r\n      .catch(function (error) {\r\n        if (error.response) {\r\n          return error.response.status\r\n        }\r\n      })\r\n  },\r\n}\r\n\r\nexport const fleetApi = {\r\n  getCarsByType(carType, pageSize) {\r\n    return axiosInstance\r\n      .get(`car/company-cars?typeId=${carType}&page=${pageSize}`)\r\n      .then((response) => {\r\n        return response.data\r\n      })\r\n  },\r\n\r\n  getCompanyCars(dataForm) {\r\n    return axiosInstance\r\n      .post(\"car/companycars-withprice\", { ...dataForm })\r\n      .then((response) => {\r\n        return response.data\r\n      })\r\n  },\r\n}\r\n\r\nexport const placesApi = {\r\n  getStates() {\r\n    return axiosInstance.get(`place/states`).then((response) => {\r\n      return response.data\r\n    })\r\n  },\r\n\r\n  getCities(id) {\r\n    return axiosInstance.get(`place/cities/${id}`).then((response) => {\r\n      return response.data\r\n    })\r\n  },\r\n\r\n  getAirlines() {\r\n    return axiosInstance.get(`place/airlines`).then((response) => {\r\n      return response.data\r\n    })\r\n  },\r\n}\r\n\r\nexport const formApi = {\r\n  createReservation(form) {\r\n    return axiosInstance\r\n      .post(`reservation/web`, { ...form })\r\n      .then((response) => {\r\n        return response\r\n      })\r\n      .catch(function (error) {\r\n        if (error.response) {\r\n          return error.response.status\r\n        }\r\n      })\r\n  },\r\n}\r\n\r\nexport const termsApi = {\r\n  getTermOfUse() {\r\n    return axiosInstance.get(`home/term-of-use`).then((response) => {\r\n      return response.data\r\n    })\r\n  },\r\n  getPrivacyPolicy() {\r\n    return axiosInstance.get(`home/privacy-policy`).then((response) => {\r\n      return response.data\r\n    })\r\n  },\r\n}\r\n","C:\\Emir's folder\\widget-booking\\src\\Components\\CheckoutForm\\CheckOut\\AdressForm.js",["170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187"],"C:\\Emir's folder\\widget-booking\\src\\Components\\CheckoutForm\\CheckOut\\Payment.js",["188"],"import React, { useState, useEffect } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { FormProvider, useForm } from \"react-hook-form\"\r\nimport {\r\n  CustomFormInput,\r\n  CustomFormInputForPayment,\r\n  CustomMaskInput,\r\n} from \"./CustomFormInput\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { BackArrowIcon } from \"../../../assets/icons\"\r\nimport { yupResolver } from \"@hookform/resolvers/yup\"\r\nimport * as yup from \"yup\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Checkbox from \"@material-ui/core/Checkbox\"\r\nimport Switch from \"@material-ui/core/Switch\"\r\nimport { Link } from \"@material-ui/core\"\r\nimport { placesApi } from \"../../../api/api\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport { setPaymentForm } from \"./../../../Redux/form-reducer\"\r\nimport PrivacyPolicy from \"./../../TermsOfUse/PrivacyPolicy\"\r\nimport TermsOfUse from \"./../../TermsOfUse/TermOfUse\"\r\nimport { withStyles } from \"@material-ui/styles\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  contentContainer: {\r\n    padding: theme.spacing(2),\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(2.2),\r\n  },\r\n  buttonGroup: {\r\n    paddingTop: theme.spacing(0),\r\n  },\r\n  error: {\r\n    color: \"#db5858\",\r\n    margin: \"0px\",\r\n    paddingTop: \"4px\",\r\n    fontSize: \"13px\",\r\n  },\r\n  inputRoot: {\r\n    height: \"40px\",\r\n  },\r\n  inputRootAutocomplete: {\r\n    height: \"40px\",\r\n    background: \"#282836\",\r\n    borderRadius: \"10px\",\r\n    paddingLeft: \"13px\",\r\n    \"&::placeholder\": {\r\n      color: \"white\",\r\n      opacity: \"1\",\r\n      fontSize: \"10px\",\r\n    },\r\n    fontSize: \"14px\",\r\n  },\r\n  inputRootAutocompleteCardNumber: {\r\n    height: \"40px\",\r\n    background: \"#282836\",\r\n    borderRadius: \"10px\",\r\n    \"&::placeholder\": {\r\n      color: \"white\",\r\n      opacity: \"1\",\r\n      fontSize: \"10px\",\r\n    },\r\n    fontSize: \"14px\",\r\n  },\r\n  inputPlaceholder: {\r\n    height: \"40px\",\r\n    \"&::placeholder\": {\r\n      color: \"white\",\r\n      opacity: \"1\",\r\n      fontSize: \"10px\",\r\n    },\r\n  },\r\n  noBorder: {\r\n    border: \"none\",\r\n    \"&::placeholder\": {\r\n      color: \"white\",\r\n      opacity: \"1\",\r\n      fontSize: \"16px\",\r\n    },\r\n  },\r\n  inputPlaceholderFontSize: {\r\n    \"& input::placeholder\": {\r\n      fontSize: \"14px\",\r\n    },\r\n    fontSize: \"14px\",\r\n  },\r\n  inputRootAutocomplete2: {\r\n    height: \"40px\",\r\n  },\r\n  // input: {\r\n  //   height: \"40px\",\r\n  // },\r\n}))\r\n\r\nconst AntSwitch = withStyles((theme) => ({\r\n  root: {\r\n    width: 38,\r\n    height: 21,\r\n    padding: 0,\r\n    display: \"flex\",\r\n  },\r\n  switchBase: {\r\n    \"&:hover\": {\r\n      paddingRight: \"4px\",\r\n      paddingBottom: \"2px\",\r\n      backgroundColor: \"#595959\",\r\n    },\r\n    padding: 2,\r\n    color: \"#191823\",\r\n    \"&$checked\": {\r\n      transform: \"translateX(16px)\",\r\n      color: theme.palette.common.main,\r\n      \"& + $track\": {\r\n        opacity: 1,\r\n        backgroundColor: \"white\",\r\n        borderColor: \"white\",\r\n      },\r\n    },\r\n  },\r\n  thumb: {\r\n    width: 14,\r\n    height: 14,\r\n    boxShadow: \"none\",\r\n    marginTop: \"1.5px\",\r\n    marginLeft: \"2px\",\r\n  },\r\n  track: {\r\n    border: `1px solid '#2B2A32'`,\r\n    borderRadius: 19,\r\n    opacity: 1,\r\n    backgroundColor: \"#2B2A32\",\r\n  },\r\n  checked: {},\r\n}))(Switch)\r\n\r\nconst SignupSchema = yup.object().shape({\r\n  // greetClientInfo: yup.object().shape({\r\n  //     firstName: yup.string().required('Required'),\r\n  //     phoneNumber: yup.number('Not a number').required('Required'),\r\n  //     lastName: yup.string().required('Required'),\r\n  //     email: yup.string().email('invalid email').required('Required'),\r\n  // }),\r\n  client: yup.object().shape({\r\n    firstName: yup.string().required(\"Required\"),\r\n    lastName: yup.string().required(\"Required\"),\r\n    address: yup.string().required(\"Required\"),\r\n    zip: yup.number().required(\"Required\").typeError(\"Not a number\"),\r\n    email: yup.string().email(\"invalid email\").required(\"Required\"),\r\n    phoneNumber: yup.number().typeError(\"Not a number\").required(\"Required\"),\r\n  }),\r\n  paymentInfo: yup.object().shape({\r\n    cardNumber: yup.string().required(\"Required\"),\r\n    month: yup.string().required(\"Required\"),\r\n    cvc: yup.number().required(\"Required\").typeError(\"Not a number\"),\r\n  }),\r\n})\r\n\r\nconst Payment = ({ next, back, total, formSummary, setPaymentForm }) => {\r\n  const classes = useStyles()\r\n\r\n  const [states, setStates] = useState([])\r\n  const [cities, setCities] = useState([])\r\n  const [statesId, setStatesId] = useState(0)\r\n  const [citiesId, setCitiesId] = useState(0)\r\n  const [checked, setChecked] = useState(false)\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true\r\n    const fetchStates = async () => {\r\n      const data = await placesApi.getStates()\r\n      if (componentMounted) {\r\n        setStates(data)\r\n      }\r\n    }\r\n    fetchStates()\r\n    return () => {\r\n      componentMounted = false\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true\r\n    const fetchCities = async (id) => {\r\n      const data = await placesApi.getCities(id)\r\n      if (componentMounted) {\r\n        setCities(data)\r\n      }\r\n    }\r\n    statesId ? fetchCities(statesId) : setCities([])\r\n    return () => {\r\n      componentMounted = false\r\n    }\r\n  }, [statesId])\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    ...methods\r\n  } = useForm({\r\n    resolver: yupResolver(SignupSchema),\r\n  })\r\n\r\n  const [riderDetails, setRiderDetails] = React.useState(true)\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data)\r\n    const date = data.paymentInfo.month.split(\"/\")\r\n    setPaymentForm({ ...data }, citiesId, statesId, date)\r\n    next()\r\n  }\r\n\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Grid container justify=\"center\" className={classes.contentContainer}>\r\n          <Grid container direction=\"column\" spacing={2}>\r\n            <Grid item>\r\n              <Typography\r\n                variant=\"body2\"\r\n                style={{\r\n                  fontFamily: \"Roboto\",\r\n                  fontWeight: 500,\r\n                  color: \"#FFFFFF\",\r\n                  fontSize: \"22px\",\r\n                  lineHeight: \"36px\",\r\n                }}\r\n              >\r\n                Payment\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <Typography\r\n                    // variant=\"body1\"\r\n                    style={{\r\n                      //   marginTop: \"7px\",\r\n                      color: riderDetails ? \"white\" : \"#757575\",\r\n                      fontSize: \"15px\",\r\n                    }}\r\n\r\n                    // style={{}}\r\n                  >\r\n                    Is passenger a cardholder?\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <AntSwitch\r\n                    checked={riderDetails}\r\n                    onClick={() => setRiderDetails(!riderDetails)}\r\n                    color=\"primary\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            {!riderDetails && (\r\n              <Grid item style={{ paddingBottom: \"20px\" }}>\r\n                <Grid item style={{ paddingBottom: \"13px\" }}>\r\n                  <Typography style={{ color: \"white\", fontSize: \"15px\" }}>\r\n                    Passenger Detail\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"space-between\"\r\n                    spacing={2}\r\n                    style={{ marginBottom: \"8px\" }}\r\n                  >\r\n                    <Grid item xs={6}>\r\n                      <CustomFormInputForPayment\r\n                        variant=\"outlined\"\r\n                        name=\"greetClientInfo.firstName\"\r\n                        placeholder=\"First Name\"\r\n                        defaultValue={formSummary.greetClientInfo.firstName}\r\n                        style={{ height: \"40px\", width: \"100%\" }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <CustomFormInputForPayment\r\n                        variant=\"outlined\"\r\n                        name=\"greetClientInfo.lastName\"\r\n                        defaultValue={formSummary.greetClientInfo.lastName}\r\n                        placeholder=\"Last Name\"\r\n                        style={{ width: \"100%\" }}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"space-between\"\r\n                    spacing={2}\r\n                  >\r\n                    <Grid item xs={6}>\r\n                      <CustomFormInputForPayment\r\n                        name=\"greetClientInfo.email\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Email\"\r\n                        defaultValue={formSummary.greetClientInfo.email}\r\n                        style={{ width: \"100%\" }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <CustomFormInputForPayment\r\n                        variant=\"outlined\"\r\n                        name=\"greetClientInfo.phoneNumber\"\r\n                        defaultValue={formSummary.greetClientInfo.phoneNumber}\r\n                        placeholder=\"Phone Number\"\r\n                        style={{ width: \"100%\" }}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n            <Grid item>\r\n              <Grid item style={{ paddingBottom: \"13px\" }}>\r\n                <Typography style={{ color: \"white\", fontSize: \"15px\" }}>\r\n                  Cardholder Information\r\n                </Typography>\r\n              </Grid>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                spacing={2}\r\n              >\r\n                <Grid item xs={6}>\r\n                  <CustomFormInputForPayment\r\n                    variant=\"outlined\"\r\n                    name=\"client.firstName\"\r\n                    className={classes.inputPlaceholderFontSize}\r\n                    defaultValue={formSummary.client.firstName}\r\n                    style={{ fontSize: \"14px\", width: \"100%\" }}\r\n                    placeholder=\"First Name\"\r\n                    error={errors.client?.firstName ? true : false}\r\n                  />\r\n                  {errors.client?.firstName && (\r\n                    <p className={classes.error}>\r\n                      {errors.client?.firstName.message}\r\n                    </p>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <CustomFormInputForPayment\r\n                    variant=\"outlined\"\r\n                    name=\"client.lastName\"\r\n                    className={classes.inputPlaceholderFontSize}\r\n                    defaultValue={formSummary.client.lastName}\r\n                    placeholder=\"Last Name\"\r\n                    style={{ width: \"100%\" }}\r\n                    error={errors.client?.lastName ? true : false}\r\n                  />\r\n                  {errors.client?.lastName && (\r\n                    <p className={classes.error}>\r\n                      {errors.client?.lastName.message}\r\n                    </p>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                spacing={2}\r\n              >\r\n                <Grid item xs={6}>\r\n                  <CustomFormInputForPayment\r\n                    name=\"client.email\"\r\n                    variant=\"outlined\"\r\n                    className={classes.inputPlaceholderFontSize}\r\n                    placeholder=\"Email\"\r\n                    style={{ width: \"100%\" }}\r\n                    defaultValue={formSummary.client.email}\r\n                    error={errors.client?.email ? true : false}\r\n                  />\r\n                  {errors.client?.email && (\r\n                    <p className={classes.error}>\r\n                      {errors.client?.email.message}\r\n                    </p>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <CustomFormInputForPayment\r\n                    variant=\"outlined\"\r\n                    name=\"client.phoneNumber\"\r\n                    className={classes.inputPlaceholderFontSize}\r\n                    defaultValue={formSummary.client.phoneNumber}\r\n                    placeholder=\"Phone Number\"\r\n                    style={{ width: \"100%\" }}\r\n                    error={errors.client?.phoneNumber ? true : false}\r\n                  />\r\n                  {errors.client?.phoneNumber && (\r\n                    <p className={classes.error}>\r\n                      {errors.client?.phoneNumber.message}\r\n                    </p>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <CustomFormInputForPayment\r\n                name=\"client.address\"\r\n                variant=\"outlined\"\r\n                className={classes.inputPlaceholderFontSize}\r\n                placeholder=\"Address\"\r\n                defaultValue={formSummary.client.address}\r\n                fullWidth\r\n                error={errors.client?.address ? true : false}\r\n              />\r\n              {errors.client?.address && (\r\n                <p className={classes.error}>\r\n                  {errors.client?.address.message}\r\n                </p>\r\n              )}\r\n            </Grid>\r\n            <Grid item>\r\n              <Autocomplete\r\n                id=\"combo-box-demo\"\r\n                options={states}\r\n                defaultValue={null}\r\n                autoHighlight\r\n                InputProps={{\r\n                  classes: {\r\n                    root: classes.inputRootAutocomplete2,\r\n                  },\r\n                }}\r\n                getOptionLabel={(option) => option.name}\r\n                renderOption={(option) => (\r\n                  <div style={{ fontSize: \"14px\" }}>\r\n                    <span>{option.code}</span>\r\n                    {option.name} ({option.code})\r\n                  </div>\r\n                )}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    fullWidth\r\n                    className={classes.inputPlaceholderFontSize}\r\n                    placeholder=\"State\"\r\n                    // variant=\"outlined\"\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n\r\n                      classes: {\r\n                        root: classes.inputRootAutocomplete,\r\n                        notchedOutline: classes.noBorder,\r\n                        input: classes.input,\r\n                      },\r\n                      disableUnderline: true,\r\n                    }}\r\n                  />\r\n                )}\r\n                onChange={(event, newValue) => {\r\n                  newValue ? setStatesId(newValue.id) : setStatesId(null)\r\n                }}\r\n                name=\"stateId\"\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                spacing={2}\r\n              >\r\n                <Grid item xs={6}>\r\n                  <Autocomplete\r\n                    id=\"combo-box-demo\"\r\n                    options={cities}\r\n                    key={statesId}\r\n                    defaultValue={null}\r\n                    autoHighlight\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(option) => (\r\n                      <div style={{ fontSize: \"13px\" }}>\r\n                        <span>{option.code}</span>\r\n                        {option.name} ({option.code})\r\n                      </div>\r\n                    )}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        fullWidth\r\n                        className={classes.inputPlaceholderFontSize}\r\n                        placeholder=\"Cities\"\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          classes: {\r\n                            root: classes.inputRootAutocomplete,\r\n                            notchedOutline: classes.noBorder,\r\n                            input: classes.input,\r\n                          },\r\n                          disableUnderline: true,\r\n                        }}\r\n                      />\r\n                    )}\r\n                    onChange={(event, newValue) => {\r\n                      newValue ? setCitiesId(newValue.id) : setCitiesId(null)\r\n                    }}\r\n                    name=\"cityId\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <CustomFormInputForPayment\r\n                    variant=\"outlined\"\r\n                    name=\"client.zip\"\r\n                    className={classes.inputPlaceholderFontSize}\r\n                    placeholder=\"ZIP\"\r\n                    style={{ width: \"100%\" }}\r\n                    defaultValue={formSummary.client.zip}\r\n                    error={errors.client?.address ? true : false}\r\n                  />\r\n                  {errors.client?.zip && (\r\n                    <p className={classes.error}>\r\n                      {errors.client?.zip.message}\r\n                    </p>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography style={{ fontSize: \"15px\" }}>\r\n                Card information\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <CustomMaskInput\r\n                name=\"paymentInfo.cardNumber\"\r\n                mask=\"9999-9999-9999-9999\"\r\n                defaultValue={formSummary.paymentInfo.cardNumber}\r\n              >\r\n                {() => (\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    className={classes.inputPlaceholderFontSize}\r\n                    placeholder=\"Card number/0000 0000 0000 0000\"\r\n                    fullWidth\r\n                    error={errors.paymentInfo?.cardNumber ? true : false}\r\n                    InputProps={{\r\n                      // ...params.InputProps,\r\n                      classes: {\r\n                        root: classes.inputRootAutocompleteCardNumber,\r\n                        notchedOutline: classes.noBorder,\r\n                        input: classes.input,\r\n                      },\r\n                      disableUnderline: true,\r\n                    }}\r\n                  />\r\n                )}\r\n              </CustomMaskInput>\r\n              {errors.paymentInfo?.cardNumber && (\r\n                <p className={classes.error}>\r\n                  {errors.paymentInfo?.cardNumber.message}\r\n                </p>\r\n              )}\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                spacing={2}\r\n              >\r\n                <Grid item xs={6}>\r\n                  <CustomMaskInput\r\n                    name=\"paymentInfo.month\"\r\n                    mask=\"99/99\"\r\n                    defaultValue={`${formSummary.paymentInfo.month}/${formSummary.paymentInfo.year}`}\r\n                  >\r\n                    {() => (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        className={classes.inputPlaceholderFontSize}\r\n                        placeholder=\"mm/yy\"\r\n                        fullWidth\r\n                        error={errors.paymentInfo?.month ? true : false}\r\n                        InputProps={{\r\n                          // ...params.InputProps,\r\n                          classes: {\r\n                            root: classes.inputRootAutocompleteCardNumber,\r\n                            notchedOutline: classes.noBorder,\r\n                            input: classes.input,\r\n                          },\r\n                          disableUnderline: true,\r\n                        }}\r\n                      />\r\n                    )}\r\n                  </CustomMaskInput>\r\n                  {errors.paymentInfo?.month && (\r\n                    <p className={classes.error}>\r\n                      {errors.paymentInfo?.month.message}\r\n                    </p>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <CustomMaskInput\r\n                    name=\"paymentInfo.cvc\"\r\n                    type=\"date\"\r\n                    mask=\"999\"\r\n                    defaultValue={formSummary.paymentInfo.cvc}\r\n                  >\r\n                    {() => (\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        className={classes.inputPlaceholderFontSize}\r\n                        placeholder=\"CVV/CVC\"\r\n                        fullWidth\r\n                        error={errors.paymentInfo?.cvc ? true : false}\r\n                        InputProps={{\r\n                          // ...params.InputProps,\r\n                          classes: {\r\n                            root: classes.inputRootAutocompleteCardNumber,\r\n                            notchedOutline: classes.noBorder,\r\n                            input: classes.input,\r\n                          },\r\n                          disableUnderline: true,\r\n                        }}\r\n                      />\r\n                    )}\r\n                  </CustomMaskInput>\r\n                  {errors.paymentInfo?.cvc && (\r\n                    <p className={classes.error}>\r\n                      {errors.paymentInfo?.cvc.message}\r\n                    </p>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Checkbox color=\"default\" onClick={() => setChecked(!checked)} />\r\n              <Link underline=\"always\" style={{ color: \"#BABABA\" }}>\r\n                <TermsOfUse />\r\n              </Link>{\" \"}\r\n              /{\" \"}\r\n              <Link underline=\"always\" style={{ color: \"#BABABA\" }}>\r\n                <PrivacyPolicy />\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                spacing={1}\r\n                className={classes.buttonGroup}\r\n              >\r\n                <Grid item xs={6}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    onClick={back}\r\n                    startIcon={<BackArrowIcon />}\r\n                    style={{\r\n                      height: \"50px\",\r\n                      borderRadius: \"8px\",\r\n                      backgroundColor: \"#1B1837\",\r\n                      textTransform: \"none\",\r\n                    }}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    fullWidth\r\n                    type=\"submit\"\r\n                    color=\"primary\"\r\n                    style={{\r\n                      height: \"50px\",\r\n                      borderRadius: \"8px\",\r\n                      textTransform: \"none\",\r\n                    }}\r\n                    disabled={!checked}\r\n                  >\r\n                    Pay ${total}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </FormProvider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    total: state.formData.orderSum,\r\n    formSummary: state.formData,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setPaymentForm })(Payment)\r\n","C:\\Emir's folder\\widget-booking\\src\\Components\\CheckoutForm\\CheckOut\\Preview.js",["189","190","191","192","193","194"],"import { useMediaQuery } from \"@material-ui/core\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport React from \"react\"\r\nimport Carousel from \"react-material-ui-carousel\"\r\nimport { connect } from \"react-redux\"\r\nimport { BackArrowIcon, ForwardArrowIcon } from \"../../../assets/icons\"\r\nimport { toggleIsFetching } from \"../../../Redux/car-reducer\"\r\nimport { setNoteRedux, setOrderSum } from \"../../../Redux/form-reducer\"\r\nimport Directions from \"../../GoogleMap/Directions\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"#191929\",\r\n    borderRadius: \"8px\",\r\n  },\r\n  contentContainer: {\r\n    padding: theme.spacing(2),\r\n    paddingTop: \"8px\",\r\n    paddingBottom: \"8px\",\r\n\r\n    overflow: \"visible\",\r\n  },\r\n  carInfoCont: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      alignItems: \"center\",\r\n      padding: theme.spacing(2),\r\n    },\r\n  },\r\n  priceBox: {\r\n    backgroundColor: \"#851EDF\",\r\n    padding: theme.spacing(1),\r\n  },\r\n  notes: {\r\n    height: \"50px\",\r\n    \"& .MuiFormLabel-root\": {\r\n      color: \"white\", // or black\r\n      fontSize: \"16px\",\r\n    },\r\n  },\r\n}))\r\n\r\nconst Preview = ({\r\n  carId,\r\n  cars,\r\n  formData,\r\n  next,\r\n  back,\r\n  setNoteRedux,\r\n  setOrderSum,\r\n}) => {\r\n  const classes = useStyles()\r\n  const selectedCar = cars.find((car) => car.id === carId)\r\n\r\n  const [note, setNote] = React.useState(\"\")\r\n  const [distance, setDistance] = React.useState(0)\r\n\r\n  const sendNote = (note) => {\r\n    setNoteRedux(note)\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setNote(event.target.value)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setNote(formData.orderNotes)\r\n  }, [formData.orderNotes])\r\n\r\n  const isMobile = useMediaQuery(\"(max-width:650px)\")\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={1} className={classes.contentContainer}>\r\n        <Grid item>\r\n          <Typography\r\n            variant=\"body2\"\r\n            style={{\r\n              fontFamily: \"Roboto\",\r\n              fontWeight: 500,\r\n              color: \"#FFFFFF\",\r\n              fontSize: \"22px\",\r\n              lineHeight: \"36px\",\r\n            }}\r\n          >\r\n            Preview\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Directions\r\n        destinations={formData.orderAddressDetails}\r\n        setDistance={setDistance}\r\n        style={{ height: \"250px\" }}\r\n      />\r\n      <Grid container justify=\"center\">\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          spacing={2}\r\n          className={classes.contentContainer}\r\n        >\r\n          <Grid\r\n            item\r\n            style={{\r\n              height: \"135px\",\r\n              paddingRight: \"14.5px\",\r\n              marginTop: \"10px\",\r\n            }}\r\n          >\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <Carousel\r\n                  autoPlay={false}\r\n                  animation=\"slide\"\r\n                  navButtonsProps={{\r\n                    style: {\r\n                      width: \"1em\",\r\n                      height: \"1em\",\r\n                    },\r\n                  }}\r\n                  indicatorIconButtonProps={{\r\n                    style: {\r\n                      \"&:hover\": {\r\n                        \"& $button\": {\r\n                          backgroundColor: \"#10B7EC\",\r\n                          filter: \"brightness(120%)\",\r\n                          opacity: \"0.4\",\r\n                        },\r\n                      },\r\n                      marginTop: \"-80px\",\r\n                      color: \"grey\",\r\n                    },\r\n                  }}\r\n                  activeIndicatorIconButtonProps={{\r\n                    style: {\r\n                      color: \"white\",\r\n                    },\r\n                  }}\r\n                  indicatorContainerProps={{\r\n                    style: { height: \"0px\" },\r\n                  }}\r\n                >\r\n                  {selectedCar.imageUrls.length !== 0 ? (\r\n                    selectedCar.imageUrls.map((url) => (\r\n                      <span key={url.id} variant=\"outlined\" color=\"primary\">\r\n                        <div\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            width: \"75px\",\r\n                            height: \"20px\",\r\n                            backgroundColor: \"#313159\",\r\n                            borderBottomRightRadius: \"10px\",\r\n                            fontSize: \"13px\",\r\n                            paddingLeft: \"12px\",\r\n                          }}\r\n                        >\r\n                          or similar\r\n                        </div>\r\n                        <img\r\n                          src={url.path}\r\n                          style={{\r\n                            width: \"170px\",\r\n                            height: \"120px\",\r\n                            borderRadius: \"8px\",\r\n                            cursor: \"zoom-in\",\r\n                          }}\r\n                          alt=\"car\"\r\n                        />\r\n                      </span>\r\n                    ))\r\n                  ) : (\r\n                    <>\r\n                      <span\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          width: \"75px\",\r\n                          height: \"20px\",\r\n                          backgroundColor: \"#313159\",\r\n                          borderTopLeftRadius: \"6px\",\r\n                          borderBottomRightRadius: \"10px\",\r\n                          fontSize: \"13px\",\r\n                          paddingLeft: \"12px\",\r\n                        }}\r\n                      >\r\n                        or similar\r\n                      </span>\r\n                      <img\r\n                        src={\r\n                          \"https://fl-1.cdn.flockler.com/embed/not-found.png\"\r\n                        }\r\n                        style={{\r\n                          width: \"170px\",\r\n                          height: \"120px\",\r\n                          borderRadius: \"8px\",\r\n                        }}\r\n                        alt=\"car\"\r\n                      />\r\n                    </>\r\n                  )}\r\n                </Carousel>\r\n              </Grid>\r\n              <Grid item style={{ width: \"45%\" }}>\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  spacing={2}\r\n                  className={classes.carInfoCont}\r\n                >\r\n                  <Typography variant=\"body2\" style={{ fontSize: \"18px\" }}>\r\n                    {selectedCar.make} {selectedCar.model}\r\n                  </Typography>\r\n\r\n                  {/* <Typography\r\n                            variant='body2'\r\n                            style={{ fontSize: '18px' }}\r\n                          ></Typography> */}\r\n\r\n                  <Grid\r\n                    container\r\n                    justify=\"row\"\r\n                    justify=\"space-between\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid item>\r\n                      <Typography\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: \"13px\",\r\n                          fontWeight: \"400\",\r\n                        }}\r\n                      >\r\n                        Type\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item style={{ flexGrow: 1 }}>\r\n                      <Box\r\n                        style={{\r\n                          marginTop: \"13px\",\r\n                          backgroundColor: \"transparent\",\r\n                          borderColor: \"#736994\",\r\n                          borderStyle: \"dashed\",\r\n                          borderWidth: \"1px\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: \"13px\",\r\n                          fontWeight: \"400\",\r\n                        }}\r\n                      >\r\n                        {selectedCar.type}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    container\r\n                    justify=\"row\"\r\n                    justify=\"space-between\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid item>\r\n                      <Typography\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: \"13px\",\r\n                          fontWeight: \"400\",\r\n                        }}\r\n                      >\r\n                        Capacity\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item style={{ flexGrow: 1 }}>\r\n                      <Box\r\n                        style={{\r\n                          marginTop: \"13px\",\r\n                          backgroundColor: \"transparent\",\r\n                          borderColor: \"#736994\",\r\n                          borderStyle: \"dashed\",\r\n                          borderWidth: \"1px\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: \"13px\",\r\n                          fontWeight: \"400\",\r\n                        }}\r\n                      >\r\n                        {selectedCar.capacity}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container justify=\"row\">\r\n                    <Grid item>\r\n                      <Typography\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: \"13px\",\r\n                          fontWeight: \"400\",\r\n                        }}\r\n                      >\r\n                        Color\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item style={{ flexGrow: 1 }}>\r\n                      <Box\r\n                        style={{\r\n                          marginTop: \"13px\",\r\n                          backgroundColor: \"transparent\",\r\n                          borderColor: \"#736994\",\r\n                          borderStyle: \"dashed\",\r\n                          borderWidth: \"1px\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: \"13px\",\r\n                          fontWeight: \"400\",\r\n                        }}\r\n                      >\r\n                        white\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container justify=\"row\">\r\n                    <Grid item>\r\n                      <Typography\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: \"13px\",\r\n                          fontWeight: \"400\",\r\n                        }}\r\n                      >\r\n                        Amount\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item style={{ flexGrow: 1 }}>\r\n                      <Box\r\n                        style={{\r\n                          marginTop: \"13px\",\r\n                          backgroundColor: \"transparent\",\r\n                          borderColor: \"#736994\",\r\n                          borderStyle: \"dashed\",\r\n                          borderWidth: \"1px\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: \"16px\",\r\n                          fontWeight: \"500\",\r\n                        }}\r\n                      >\r\n                        ${selectedCar.price}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  {/* <Grid item xs={8}>\r\n                            <Paper className={classes.priceBox}>\r\n                              <Grid container justify=\"center\">\r\n                                <Typography variant=\"body2\">\r\n                                  ${car.price}\r\n                                </Typography>\r\n                              </Grid>\r\n                            </Paper>\r\n                          </Grid> */}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <Typography style={{ color: \"white\", fontSize: \"16px\" }}>\r\n                  Date\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item style={{ flexGrow: 1 }}>\r\n                <Box\r\n                  style={{\r\n                    marginTop: \"13px\",\r\n                    backgroundColor: \"transparent\",\r\n                    borderColor: \"#292742\",\r\n                    borderStyle: \"dashed\",\r\n                    borderWidth: \"1px\",\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography\r\n                  style={{\r\n                    color: \"white\",\r\n                    fontSize: \"16px\",\r\n                    marginRight: \"-3px\",\r\n                  }}\r\n                >\r\n                  {new Date(formData.orderStartDate).toLocaleDateString(\r\n                    \"en-GB\"\r\n                  )}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <Typography style={{ color: \"white\", fontSize: \"16px\" }}>\r\n                  Time\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item style={{ flexGrow: 1 }}>\r\n                <Box\r\n                  style={{\r\n                    marginTop: \"13px\",\r\n                    backgroundColor: \"transparent\",\r\n                    borderColor: \"#292742\",\r\n                    borderStyle: \"dashed\",\r\n                    borderWidth: \"1px\",\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography style={{ color: \"white\", fontSize: \"16px\" }}>\r\n                  {new Date(formData.orderStartTime).toLocaleTimeString(\r\n                    \"en-US\",\r\n                    {\r\n                      hour: \"numeric\",\r\n                      minute: \"numeric\",\r\n                    }\r\n                  )}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"flex-start\"\r\n              wrap=\"nowrap\"\r\n            >\r\n              <Grid item>\r\n                <Typography style={{ color: \"white\", fontSize: \"16px\" }}>\r\n                  From\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item style={{ flexGrow: 1 }}>\r\n                <Box\r\n                  style={{\r\n                    marginTop: \"13px\",\r\n                    backgroundColor: \"transparent\",\r\n                    borderColor: \"#292742\",\r\n                    borderStyle: \"dashed\",\r\n                    borderWidth: \"1px\",\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography\r\n                  style={{\r\n                    wordWrap: \"break-word\",\r\n                    color: \"white\",\r\n                    fontSize: \"16px\",\r\n                    width: \"300px\",\r\n                    textAlign: \"end\",\r\n                  }}\r\n                >\r\n                  {formData.orderAddressDetails[0].rideCheckPoint}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n              wrap=\"nowrap\"\r\n            >\r\n              <Grid item>\r\n                <Typography style={{ color: \"white\", fontSize: \"16px\" }}>\r\n                  To\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item style={{ flexGrow: 1 }}>\r\n                <Box\r\n                  style={{\r\n                    marginTop: \"13px\",\r\n                    backgroundColor: \"transparent\",\r\n                    borderColor: \"#292742\",\r\n                    borderStyle: \"dashed\",\r\n                    borderWidth: \"1px\",\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography\r\n                  style={{\r\n                    wordWrap: \"break-word\",\r\n                    color: \"white\",\r\n                    fontSize: \"16px\",\r\n                    width: \"300px\",\r\n                    textAlign: \"end\",\r\n                  }}\r\n                >\r\n                  {\r\n                    formData.orderAddressDetails[\r\n                      formData.orderAddressDetails.length - 1\r\n                    ].rideCheckPoint\r\n                  }\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <Typography style={{ color: \"white\", fontSize: \"16px\" }}>\r\n                  Vehicle\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item style={{ flexGrow: 1 }}>\r\n                <Box\r\n                  style={{\r\n                    marginTop: \"13px\",\r\n                    backgroundColor: \"transparent\",\r\n                    borderColor: \"#292742\",\r\n                    borderStyle: \"dashed\",\r\n                    borderWidth: \"1px\",\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography style={{ color: \"white\", fontSize: \"16px\" }}>\r\n                  {selectedCar.type}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <Typography style={{ color: \"white\", fontSize: \"16px\" }}>\r\n                  Total distance\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item style={{ flexGrow: 1 }}>\r\n                <Box\r\n                  style={{\r\n                    marginTop: \"13px\",\r\n                    backgroundColor: \"transparent\",\r\n                    borderColor: \"#292742\",\r\n                    borderStyle: \"dashed\",\r\n                    borderWidth: \"1px\",\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography style={{ color: \"white\", fontSize: \"16px\" }}>\r\n                  {distance} miles\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <Typography style={{ color: \"white\", fontSize: \"16px\" }}>\r\n                  Number of Passengers\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item style={{ flexGrow: 1 }}>\r\n                <Box\r\n                  style={{\r\n                    marginTop: \"13px\",\r\n                    backgroundColor: \"transparent\",\r\n                    borderColor: \"#292742\",\r\n                    borderStyle: \"dashed\",\r\n                    borderWidth: \"1px\",\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography style={{ color: \"white\", fontSize: \"16px\" }}>\r\n                  {formData.passengersQuantity}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <Typography style={{ color: \"white\", fontSize: \"16px\" }}>\r\n                  Hours\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item style={{ flexGrow: 1 }}>\r\n                <Box\r\n                  style={{\r\n                    marginTop: \"13px\",\r\n                    backgroundColor: \"transparent\",\r\n                    borderColor: \"#292742\",\r\n                    borderStyle: \"dashed\",\r\n                    borderWidth: \"1px\",\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography style={{ color: \"white\", fontSize: \"16px\" }}>\r\n                  {formData.hours}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <Typography style={{ color: \"white\", fontSize: \"16px\" }}>\r\n                  Total\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item style={{ flexGrow: 1 }}>\r\n                <Box\r\n                  style={{\r\n                    marginTop: \"13px\",\r\n                    backgroundColor: \"transparent\",\r\n                    borderColor: \"#292742\",\r\n                    borderStyle: \"dashed\",\r\n                    borderWidth: \"1px\",\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography\r\n                  style={{\r\n                    color: \"white\",\r\n                    fontSize: \"16px\",\r\n                    fontWeight: \"700\",\r\n                  }}\r\n                >{`$${selectedCar.price}`}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              id=\"outlined-multiline-static\"\r\n              style={{\r\n                backgroundColor: \"#101020\",\r\n                borderRadius: \"8px\",\r\n                marginTop: \"-20px\",\r\n              }}\r\n              label=\"Notes\"\r\n              multiline\r\n              fullWidth\r\n              value={note}\r\n              onChange={handleChange}\r\n              className={classes.notes}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              alignItems=\"center\"\r\n              justify=\"center\"\r\n              spacing={1}\r\n              className={classes.buttonGroup}\r\n            >\r\n              <Grid item xs={6}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  onClick={back}\r\n                  startIcon={<BackArrowIcon />}\r\n                  style={{\r\n                    height: \"50px\",\r\n                    borderRadius: \"8px\",\r\n                    backgroundColor: \"#1B1837\",\r\n                    textTransform: \"none\",\r\n                  }}\r\n                >\r\n                  Back\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  fullWidth\r\n                  onClick={() => {\r\n                    next()\r\n                    sendNote(note)\r\n                    setOrderSum(selectedCar.price)\r\n                  }}\r\n                  color=\"primary\"\r\n                  endIcon={<ForwardArrowIcon />}\r\n                  style={{\r\n                    height: \"50px\",\r\n                    borderRadius: \"8px\",\r\n                    textTransform: \"none\",\r\n                  }}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cars: state.cars.cars,\r\n    formData: state.formData,\r\n    carId: state.formData.carInfo.id,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  setNoteRedux,\r\n  setOrderSum,\r\n})(Preview)\r\n","C:\\Emir's folder\\widget-booking\\src\\Components\\CheckoutForm\\CheckOut\\FleetForm.js",["195","196","197","198"],"import Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport React from 'react'\r\nimport Carousel from 'react-material-ui-carousel'\r\nimport { connect } from 'react-redux'\r\nimport { BackArrowIcon, ForwardArrowIcon } from '../../../assets/icons'\r\nimport { Preloader } from './../../Helpers/Preloader'\r\nimport { setCarId } from '../../../Redux/form-reducer'\r\nimport { AppBar, useMediaQuery } from '@material-ui/core'\r\nimport Box from '@material-ui/core/Box'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: '#313159',\r\n    borderRadius: '8px',\r\n    paddingTop: '15px',\r\n    paddingLeft: '0px',\r\n    paddingBottom: '6px',\r\n    cursor: 'pointer',\r\n    // \"&:hover\": {\r\n    //   backgroundColor: \"red\",\r\n    // },\r\n    // \"&$selected\": { backgroundColor: \"white\" },\r\n  },\r\n  contentContainer: {\r\n    padding: theme.spacing(2),\r\n    height: '100%',\r\n    flexWrap: 'nowrap',\r\n  },\r\n  carContainer: {\r\n    overflowY: 'scroll',\r\n    overflowX: 'hidden',\r\n\r\n    '&::-webkit-scrollbar': {\r\n      width: '0.7em',\r\n    },\r\n    '&::-webkit-scrollbar-thumb': {\r\n      backgroundColor: '#3F3D4A',\r\n      borderRadius: '8px',\r\n    },\r\n    '&::-webkit-scrollbar-thumb:hover': {\r\n      background: '#555',\r\n    },\r\n  },\r\n  priceBox: {\r\n    backgroundColor: '#851EDF',\r\n    padding: theme.spacing(1),\r\n  },\r\n  buttonGroup: {\r\n    bottom: 15,\r\n    position: 'absolute',\r\n\r\n    padding: '10px 24px 0px 0',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  carInfoCont: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      alignItems: 'center',\r\n      padding: theme.spacing(0),\r\n    },\r\n    margin: '0px',\r\n    marginTop: '-10px',\r\n    width: '170px',\r\n  },\r\n  listRoot: {\r\n    opacity: '0.5',\r\n    '&:hover': { opacity: '1' },\r\n  },\r\n\r\n  active: {\r\n    '&.Mui-selected': {\r\n      backgroundColor: '#313159',\r\n    },\r\n    '&.Mui-selected:hover': {\r\n      backgroundColor: '#313159',\r\n    },\r\n    opacity: '1',\r\n  },\r\n}))\r\n\r\nconst FleetForm = React.memo(({ cars, isFetching, back, next, setCarId }) => {\r\n  const classes = useStyles()\r\n  const [carCard, setCarCard] = React.useState(0)\r\n  const [carModal, setCarModal] = React.useState(null)\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  const handleClickOpen = (id) => {\r\n    setCarModal(id)\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setCarModal(null)\r\n    setOpen(false)\r\n  }\r\n\r\n  const handleClick = (id) => {\r\n    setCarCard(id)\r\n  }\r\n\r\n  let result = null\r\n  if (carModal) {\r\n    result = cars.find((cars) => carModal === cars.id)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setCarCard(carCard)\r\n  }, [carCard])\r\n\r\n  const isMobile = useMediaQuery('(max-width:650px)')\r\n\r\n  return (\r\n    <>\r\n      {isFetching ? (\r\n        <Preloader />\r\n      ) : (\r\n        <Grid\r\n          container\r\n          justify='center'\r\n          style={{\r\n            height: isMobile ? '86%' : '89%',\r\n            paddingTop: isMobile ? '0px' : '0px',\r\n          }}\r\n        >\r\n          <Grid\r\n            container\r\n            direction='column'\r\n            spacing={1}\r\n            className={classes.contentContainer}\r\n          >\r\n            <Grid item>\r\n              {/* <AppBar\r\n              position=\"sticky\"\r\n              color=\" #101020\"\r\n              style={{ top: '100px', bottom: '0' }}\r\n            > */}\r\n              <Typography\r\n                style={{\r\n                  fontFamily: 'Roboto',\r\n                  fontWeight: 500,\r\n                  color: '#FFFFFF',\r\n                  fontSize: '22px',\r\n                  lineHeight: '36px',\r\n                }}\r\n              >\r\n                Select vehicle\r\n              </Typography>\r\n              {/* </AppBar> */}\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              className={classes.carContainer}\r\n              style={{ paddingBottom: '10px' }}\r\n            >\r\n              <Grid container direction='column' spacing={2}>\r\n                {cars.map((car, index) => (\r\n                  <Grid item key={`${car.id}${car.name}`}>\r\n                    <ListItem\r\n                      className={classes.root}\r\n                      onClick={() => {\r\n                        handleClick(car.id)\r\n                      }}\r\n                      selected={car.id === carCard}\r\n                      classes={{\r\n                        root: classes.listRoot,\r\n                        selected: car.id && classes.active,\r\n                      }}\r\n                      // style={{\r\n                      //   opacity: \"0.5\",\r\n                      //   \"&:hover\": { opacity: \"1\" },\r\n                      // }}\r\n                    >\r\n                      <Grid\r\n                        container\r\n                        direction='row'\r\n                        justify='space-between'\r\n                        alignItems='center'\r\n                      >\r\n                        <Grid\r\n                          item\r\n                          style={{ marginLeft: '13px', marginBottom: '-2px' }}\r\n                        >\r\n                          <Carousel\r\n                            autoPlay={false}\r\n                            animation='slide'\r\n                            navButtonsProps={{\r\n                              style: {\r\n                                width: '1em',\r\n                                height: '1em',\r\n                              },\r\n                            }}\r\n                            indicatorIconButtonProps={{\r\n                              style: {\r\n                                '&:hover': {\r\n                                  '&$button': {\r\n                                    backgroundColor: '#10B7EC',\r\n                                    filter: 'brightness(120%)',\r\n                                    opacity: '0.4',\r\n                                  },\r\n                                },\r\n                                marginTop: '-80px',\r\n                                // marginBottom: \"-30px\",\r\n                                color: 'grey',\r\n                              },\r\n                            }}\r\n                            activeIndicatorIconButtonProps={{\r\n                              style: {\r\n                                color: 'white',\r\n                                height: '10px',\r\n                              },\r\n                            }}\r\n                            indicatorContainerProps={{\r\n                              style: { height: '0px' },\r\n                            }}\r\n                          >\r\n                            {car.imageUrls.length !== 0 ? (\r\n                              car.imageUrls.map((url) => (\r\n                                <span\r\n                                  key={url.id}\r\n                                  variant='outlined'\r\n                                  color='primary'\r\n                                  onClick={() => handleClickOpen(car.id)}\r\n                                >\r\n                                  <div\r\n                                    style={{\r\n                                      position: 'absolute',\r\n                                      width: '75px',\r\n                                      height: '20px',\r\n                                      backgroundColor: '#313159',\r\n                                      borderBottomRightRadius: '10px',\r\n                                      fontSize: '13px',\r\n                                      paddingLeft: '12px',\r\n                                    }}\r\n                                  >\r\n                                    or similar\r\n                                  </div>\r\n                                  <img\r\n                                    src={url.path}\r\n                                    style={{\r\n                                      display: 'block',\r\n                                      width: !isMobile ? '170px' : '22vh',\r\n                                      height: !isMobile ? '127px' : '17vh',\r\n                                      borderRadius: '8px',\r\n                                      cursor: 'zoom-in',\r\n                                    }}\r\n                                    alt='car'\r\n                                  />\r\n                                </span>\r\n                              ))\r\n                            ) : (\r\n                              <>\r\n                                <span\r\n                                  style={{\r\n                                    position: 'absolute',\r\n                                    width: '75px',\r\n                                    height: '20px',\r\n                                    backgroundColor: '#313159',\r\n                                    borderBottomRightRadius: '10px',\r\n                                    fontSize: '13px',\r\n                                    paddingLeft: '12px',\r\n                                  }}\r\n                                >\r\n                                  or similar\r\n                                </span>\r\n                                <img\r\n                                  src={\r\n                                    'https://fl-1.cdn.flockler.com/embed/not-found.png'\r\n                                  }\r\n                                  style={{\r\n                                    width: !isMobile ? '170px' : '22vh',\r\n                                    height: !isMobile ? '127px' : '17vh',\r\n                                    borderRadius: '8px',\r\n                                  }}\r\n                                  alt='car'\r\n                                />\r\n                              </>\r\n                            )}\r\n                          </Carousel>\r\n\r\n                          {carModal && (\r\n                            <Dialog\r\n                              open={open}\r\n                              onClose={handleClose}\r\n                              aria-labelledby='alert-dialog-title'\r\n                              aria-describedby='alert-dialog-description'\r\n                            >\r\n                              <DialogActions>\r\n                                <Carousel\r\n                                  autoPlay={false}\r\n                                  animation='slide'\r\n                                  navButtonsProps={{\r\n                                    style: {\r\n                                      width: '1em',\r\n                                      height: '1em',\r\n                                    },\r\n                                  }}\r\n                                  indicatorIconButtonProps={{\r\n                                    style: {\r\n                                      '&:hover': {\r\n                                        '& $button': {\r\n                                          backgroundColor: '#10B7EC',\r\n                                          filter: 'brightness(120%)',\r\n                                          opacity: '0.4',\r\n                                        },\r\n                                      },\r\n                                    },\r\n                                  }}\r\n                                  activeIndicatorIconButtonProps={{\r\n                                    style: {\r\n                                      color: '#10B7EC',\r\n                                    },\r\n                                  }}\r\n                                  indicatorContainerProps={{\r\n                                    style: {},\r\n                                  }}\r\n                                >\r\n                                  {carModal &&\r\n                                    result.imageUrls.map((url) => (\r\n                                      <img\r\n                                        src={url.path}\r\n                                        style={{\r\n                                          width: '600px',\r\n                                          height: '400px',\r\n                                          borderRadius: '8px',\r\n                                        }}\r\n                                        alt='car'\r\n                                        key={`${url.id}${url.path}`}\r\n                                      />\r\n                                    ))}\r\n                                </Carousel>\r\n                              </DialogActions>\r\n                            </Dialog>\r\n                          )}\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          style={{ width: !isMobile ? '46.5%' : '52%' }}\r\n                        >\r\n                          <Grid\r\n                            container\r\n                            direction='row'\r\n                            spacing={2}\r\n                            className={classes.carInfoCont}\r\n                          >\r\n                            <Typography\r\n                              variant='body2'\r\n                              style={{ fontSize: '18px' }}\r\n                            >\r\n                              {car.make} {car.model}\r\n                            </Typography>\r\n\r\n                            {/* <Typography\r\n                            variant='body2'\r\n                            style={{ fontSize: '18px' }}\r\n                          ></Typography> */}\r\n\r\n                            <Grid\r\n                              container\r\n                              justify='row'\r\n                              justify='space-between'\r\n                              alignItems='center'\r\n                            >\r\n                              <Grid item>\r\n                                <Typography\r\n                                  style={{\r\n                                    color: 'white',\r\n                                    fontSize: '13px',\r\n                                    fontWeight: '400',\r\n                                  }}\r\n                                >\r\n                                  Type\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item style={{ flexGrow: 1 }}>\r\n                                <Box\r\n                                  style={{\r\n                                    marginTop: '13px',\r\n                                    backgroundColor: 'transparent',\r\n                                    borderColor: '#736994',\r\n                                    borderStyle: 'dashed',\r\n                                    borderWidth: '1px',\r\n                                  }}\r\n                                />\r\n                              </Grid>\r\n                              <Grid item>\r\n                                <Typography\r\n                                  style={{\r\n                                    color: 'white',\r\n                                    fontSize: '13px',\r\n                                    fontWeight: '400',\r\n                                  }}\r\n                                >\r\n                                  {car.type}\r\n                                </Typography>\r\n                              </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid\r\n                              container\r\n                              justify='row'\r\n                              justify='space-between'\r\n                              alignItems='center'\r\n                            >\r\n                              <Grid item>\r\n                                <Typography\r\n                                  style={{\r\n                                    color: 'white',\r\n                                    fontSize: '13px',\r\n                                    fontWeight: '400',\r\n                                  }}\r\n                                >\r\n                                  Capacity\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item style={{ flexGrow: 1 }}>\r\n                                <Box\r\n                                  style={{\r\n                                    marginTop: '13px',\r\n                                    backgroundColor: 'transparent',\r\n                                    borderColor: '#736994',\r\n                                    borderStyle: 'dashed',\r\n                                    borderWidth: '1px',\r\n                                  }}\r\n                                />\r\n                              </Grid>\r\n                              <Grid item>\r\n                                <Typography\r\n                                  style={{\r\n                                    color: 'white',\r\n                                    fontSize: '13px',\r\n                                    fontWeight: '400',\r\n                                  }}\r\n                                >\r\n                                  {car.capacity}\r\n                                </Typography>\r\n                              </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container justify='row'>\r\n                              <Grid item>\r\n                                <Typography\r\n                                  style={{\r\n                                    color: 'white',\r\n                                    fontSize: '12px',\r\n                                    fontWeight: '400',\r\n                                  }}\r\n                                >\r\n                                  Color\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item style={{ flexGrow: 1 }}>\r\n                                <Box\r\n                                  style={{\r\n                                    marginTop: '13px',\r\n                                    backgroundColor: 'transparent',\r\n                                    borderColor: '#736994',\r\n                                    borderStyle: 'dashed',\r\n                                    borderWidth: '1px',\r\n                                  }}\r\n                                />\r\n                              </Grid>\r\n                              <Grid item>\r\n                                <Typography\r\n                                  style={{\r\n                                    color: 'white',\r\n                                    fontSize: '13px',\r\n                                    fontWeight: '400',\r\n                                  }}\r\n                                >\r\n                                  white\r\n                                </Typography>\r\n                              </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container justify='row'>\r\n                              <Grid item>\r\n                                <Typography\r\n                                  style={{\r\n                                    color: 'white',\r\n                                    fontSize: '12px',\r\n                                    fontWeight: '400',\r\n                                  }}\r\n                                >\r\n                                  Amount\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item style={{ flexGrow: 1 }}>\r\n                                <Box\r\n                                  style={{\r\n                                    marginTop: '13px',\r\n                                    backgroundColor: 'transparent',\r\n                                    borderColor: '#736994',\r\n                                    borderStyle: 'dashed',\r\n                                    borderWidth: '1px',\r\n                                  }}\r\n                                />\r\n                              </Grid>\r\n                              <Grid item>\r\n                                <Typography\r\n                                  style={{\r\n                                    color: 'white',\r\n                                    fontSize: '16px',\r\n                                    fontWeight: '500',\r\n                                  }}\r\n                                >\r\n                                  ${car.price}\r\n                                </Typography>\r\n                              </Grid>\r\n                            </Grid>\r\n                            {/* <Grid item xs={8}>\r\n                            <Paper className={classes.priceBox}>\r\n                              <Grid container justify=\"center\">\r\n                                <Typography variant=\"body2\">\r\n                                  ${car.price}\r\n                                </Typography>\r\n                              </Grid>\r\n                            </Paper>\r\n                          </Grid> */}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </ListItem>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n            {/* <AppBar\r\n            position=\"sticky\"\r\n            color=\"primary\"\r\n            className={classes.appBar}\r\n            style={{ top: \"auto\", bottom: \"0\" }}\r\n          > */}\r\n            <Grid\r\n              container\r\n              direction='row'\r\n              alignItems='center'\r\n              justify='center'\r\n              spacing={1}\r\n              className={classes.buttonGroup}\r\n            >\r\n              <Grid item xs={6}>\r\n                <Button\r\n                  variant='contained'\r\n                  color='primary'\r\n                  fullWidth\r\n                  onClick={back}\r\n                  startIcon={<BackArrowIcon />}\r\n                  style={{\r\n                    height: '50px',\r\n                    borderRadius: '8px',\r\n                    backgroundColor: '#1B1837',\r\n                    textTransform: 'none',\r\n                  }}\r\n                >\r\n                  Back\r\n                </Button>\r\n              </Grid>\r\n\r\n              <Grid item xs={6}>\r\n                <Button\r\n                  variant='contained'\r\n                  fullWidth\r\n                  onClick={() => {\r\n                    next()\r\n                    setCarId(carCard)\r\n                  }}\r\n                  color='primary'\r\n                  endIcon={<ForwardArrowIcon />}\r\n                  disabled={carCard ? false : true}\r\n                  style={{\r\n                    height: '50px',\r\n                    borderRadius: '8px',\r\n                    textTransform: 'none',\r\n                  }}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            {/* </AppBar> */}\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  )\r\n})\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cars: state.cars.cars,\r\n    isFetching: state.cars.isFetching,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setCarId })(FleetForm)\r\n","C:\\Emir's folder\\widget-booking\\src\\Components\\CheckoutForm\\Confirmation.js",["199"],"import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Preloader } from './../Helpers/Preloader';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Success } from '../../assets/icons';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport ReservationFailed from './ReservationFailed';\r\nimport { createReservation, logOut } from './../../Redux/form-reducer';\r\n\r\n\r\nconst Confirmation = ({ createReservation, companyName, email, setExpanded, isSuccess, isFetching, setActiveStep, formSummary, logOut }) => {\r\n\r\n\r\n    React.useEffect(() => {\r\n        createReservation(formSummary)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {isFetching ? <Preloader /> :\r\n                isSuccess ?\r\n                    <Grid container direction=\"column\" spacing={2} justify='center' alignItems='center' style={{ height: '80vh' }}>\r\n                        <Grid item>\r\n                            <Success />\r\n                        </Grid>\r\n                        {/* <Grid item>\r\n                            <Typography variant='body2'>Success</Typography>\r\n                        </Grid> */}\r\n                        <Grid item>\r\n                            <Typography variant='body2' align='center'>Your reservation was successfully <Typography variant='body2' >submitted. A confirmation email was</Typography> sent to {email && email}.</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant='body2'>Thanks, {companyName && companyName}</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button onClick={() => { setExpanded(false); setActiveStep(0); logOut() }} variant='contained' color='primary' fullWidth>Done</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    :\r\n                    <ReservationFailed setActiveStep={setActiveStep} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isSuccess: state.companyProfile.isSuccess,\r\n        isFetching: state.cars.isFetching,\r\n        formSummary: state.formData,\r\n        email: state.formData.client.email,\r\n        companyName: state.companyProfile.profile.companyName\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { createReservation, logOut })(Confirmation);\r\n","C:\\Emir's folder\\widget-booking\\src\\Components\\CheckoutForm\\CheckOut\\Hours.js",["200"],"import Grid from \"@material-ui/core/Grid\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport React, { useState } from \"react\"\r\nimport { useFormContext } from \"react-hook-form\"\r\nimport { HourlyIcon, MinusIcon, PlusIcon } from \"../../../assets/icons\"\r\n\r\nconst Hours = ({\r\n  hoursState,\r\n  setHourly,\r\n  hoursAddressForm,\r\n  setHoursAddressForm,\r\n}) => {\r\n  const { register } = useFormContext()\r\n\r\n  //   const [hoursAddressForm, setHoursAddressForm] = useState(0)\r\n\r\n  const onDecrease = () => {\r\n    if (hoursAddressForm === 0) {\r\n      return\r\n    }\r\n    setHoursAddressForm((hoursAddressForm) => hoursAddressForm - 1)\r\n  }\r\n  const onIncrease = () => {\r\n    setHoursAddressForm((hoursAddressForm) => hoursAddressForm + 1)\r\n  }\r\n\r\n  //   React.useEffect(() => {\r\n  //     if (hoursState !== 0) {\r\n  //       setHourly(true)\r\n  //       setHoursAddressForm(parseInt(hoursState))\r\n  //     }\r\n  //   }, [hoursState])\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justify=\"space-between\"\r\n      alignItems=\"center\"\r\n      style={{ marginTop: \"-4px\" }}\r\n    >\r\n      <Grid item>\r\n        <Grid container direction=\"row\" alignItems=\"center\">\r\n          <HourlyIcon />\r\n          <Typography\r\n            style={{ color: \"white\", fontSize: \"14px\", marginTop: \"4px\" }}\r\n          >\r\n            Hours\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-around\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item>\r\n            <span onClick={onDecrease} style={{ marginRight: \"5px\" }}>\r\n              <MinusIcon />\r\n            </span>\r\n          </Grid>\r\n          <Grid item style={{ textAlign: \"center\" }}>\r\n            <input\r\n              ref={register}\r\n              name=\"hours\"\r\n              onChange={(e) => {\r\n                setHoursAddressForm(e.target.value)\r\n              }}\r\n              value={hoursAddressForm}\r\n              size=\"1\"\r\n              style={{\r\n                // pointerEvents: \"none\",\r\n                marginRight: \"3px\",\r\n                marginBottom: \"4px\",\r\n                backgroundColor: \"transparent\",\r\n                border: \"none\",\r\n                color: \"#FFFFFF\",\r\n                textAlign: \"center\",\r\n                fontFamily: \"Roboto\",\r\n                textTransform: \"none\",\r\n                fontWeight: \"400\",\r\n                fontSize: \"14px\",\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <span onClick={onIncrease} style={{ marginLeft: \"4px\" }}>\r\n              <PlusIcon />\r\n            </span>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Hours\r\n","C:\\Emir's folder\\widget-booking\\src\\Components\\CheckoutForm\\CheckOut\\PassengerQuantity.js",["201","202","203"],"import Grid from \"@material-ui/core/Grid\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport React, { memo, useState } from \"react\"\r\nimport { useFormContext } from \"react-hook-form\"\r\nimport {\r\n  MinusIcon,\r\n  NumberOfPassengers,\r\n  NumberOfPassengersIcon,\r\n  PlusIcon,\r\n} from \"../../../assets/icons\"\r\n\r\nexport default React.memo(function PassengerQuantity({\r\n  passengersqState,\r\n  setPassengers,\r\n  passengers,\r\n}) {\r\n  const { register } = useFormContext()\r\n\r\n  const onDecrease = () => {\r\n    if (passengers === 0) {\r\n      return\r\n    }\r\n    setPassengers((passengers) => passengers - 1)\r\n  }\r\n  const onIncrease = () => {\r\n    if (passengers === 14) {\r\n      return\r\n    }\r\n    setPassengers((passengers) => passengers + 1)\r\n  }\r\n\r\n  //   React.useEffect(() => {\r\n  //     setPassengers(parseInt(passengersqState))\r\n  //   }, [passengersqState])\r\n  return (\r\n    <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n      <Grid item>\r\n        <Grid container direction=\"row\">\r\n          <NumberOfPassengersIcon\r\n            style={{ paddingLeft: \"30px\" }}\r\n          ></NumberOfPassengersIcon>\r\n          <Typography style={{ color: \"white\", fontSize: \"14px\" }}>\r\n            Number of passengers\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-around\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item>\r\n            <span\r\n              onClick={onDecrease}\r\n              style={{\r\n                marginRight: \"5px\",\r\n              }}\r\n            >\r\n              <MinusIcon />\r\n            </span>\r\n          </Grid>\r\n          <Grid item style={{ textAlign: \"center\" }}>\r\n            <input\r\n              ref={register}\r\n              name=\"passengersQuantity\"\r\n              onChange={(e) => {\r\n                setPassengers(e.target.value)\r\n              }}\r\n              value={passengers}\r\n              size=\"1\"\r\n              style={{\r\n                // pointerEvents: \"none\",\r\n                marginRight: \"3px\",\r\n                marginBottom: \"4px\",\r\n                backgroundColor: \"transparent\",\r\n                border: \"none\",\r\n                color: \"#FFFFFF\",\r\n                textAlign: \"center\",\r\n                fontFamily: \"Roboto\",\r\n                textTransform: \"none\",\r\n                fontWeight: \"400\",\r\n                fontSize: \"14px\",\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <span onClick={onIncrease} style={{ marginLeft: \"4px\" }}>\r\n              <PlusIcon />\r\n            </span>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n})\r\n","C:\\Emir's folder\\widget-booking\\src\\Components\\CheckoutForm\\CheckOut\\CustomFormInput.js",["204","205","206"],"import { makeStyles } from \"@material-ui/core\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\"\r\nimport {\r\n  DatePicker,\r\n  DateTimePicker,\r\n  // TimePicker,\r\n  // KeyboardTimePicker,\r\n} from \"@material-ui/pickers\"\r\nimport \"date-fns\"\r\nimport React from \"react\"\r\nimport { Controller, useFormContext } from \"react-hook-form\"\r\nimport InputMask from \"react-input-mask\"\r\nimport { PlacesAutocomplete } from \"react-places-autocomplete\"\r\nimport { TimePicker } from \"antd\"\r\nimport \"antd/dist/antd.css\"\r\nimport \"./index.css\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  inputRoot: {\r\n    height: \"40px\",\r\n    background: \"#282836\",\r\n    fontSize: \"14px\",\r\n    \"& input::placeholder\": {\r\n      color: \"white\",\r\n    },\r\n  },\r\n  noBorder: {\r\n    border: \"none\",\r\n  },\r\n\r\n  // input: {\r\n  //   height: \"40px\",\r\n  // },\r\n}))\r\n\r\nexport const CustomFormInput = ({ defaultValue, name, required, ...props }) => {\r\n  const { control } = useFormContext()\r\n\r\n  return (\r\n    <Controller\r\n      as={TextField}\r\n      control={control}\r\n      name={name}\r\n      required={required}\r\n      defaultValue={defaultValue}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport const CustomFormInputForPayment = ({\r\n  defaultValue,\r\n  name,\r\n  required,\r\n  ...props\r\n}) => {\r\n  const { control } = useFormContext()\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Controller\r\n      as={TextField}\r\n      control={control}\r\n      name={name}\r\n      required={required}\r\n      defaultValue={defaultValue}\r\n      InputProps={{\r\n        classes: {\r\n          root: classes.inputRoot,\r\n          notchedOutline: classes.noBorder,\r\n        },\r\n      }}\r\n      style={{ height: \"40px\" }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport const FormInput = ({ defaultValue, name, required, ...props }) => {\r\n  const { control } = useFormContext()\r\n\r\n  return (\r\n    <Controller\r\n      as={TextField}\r\n      control={control}\r\n      name={name}\r\n      required={required}\r\n      defaultValue={defaultValue}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport const CustomMaskInput = ({\r\n  defaultValue,\r\n  name,\r\n  required,\r\n  mask,\r\n  ...props\r\n}) => {\r\n  const { control } = useFormContext()\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Controller\r\n      as={InputMask}\r\n      control={control}\r\n      name={name}\r\n      required={required}\r\n      mask={mask}\r\n      defaultValue={defaultValue}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport const CustomAutocomplete = ({\r\n  defaultValue,\r\n  name,\r\n  required,\r\n  ...props\r\n}) => {\r\n  const { control } = useFormContext()\r\n\r\n  return (\r\n    <Controller\r\n      as={PlacesAutocomplete}\r\n      control={control}\r\n      name={name}\r\n      required={required}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport const DateInputControl = ({ name, required, ...props }) => {\r\n  const { control } = useFormContext()\r\n\r\n  return (\r\n    <Controller\r\n      as={DatePicker}\r\n      name={name}\r\n      required={required}\r\n      style={{ cursor: \"pointer\" }}\r\n      {...props}\r\n      control={control}\r\n    ></Controller>\r\n  )\r\n}\r\nexport const TimeInputControl = ({ name, required, ...props }) => {\r\n  const { control } = useFormContext()\r\n\r\n  return (\r\n    <Controller\r\n      as={TimePicker}\r\n      name={name}\r\n      required={required}\r\n      style={{ cursor: \"pointer\" }}\r\n      {...props}\r\n      control={control}\r\n    ></Controller>\r\n  )\r\n}\r\n","C:\\Emir's folder\\widget-booking\\src\\Components\\CheckoutForm\\ReservationFailed.js",[],"C:\\Emir's folder\\widget-booking\\src\\Components\\GoogleMap\\Directions.js",[],"C:\\Emir's folder\\widget-booking\\src\\Components\\GoogleMap\\GoogleMap.js",["207","208","209","210","211","212"],"import Grid from \"@material-ui/core/Grid\"\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\"\r\nimport MenuItem from \"@material-ui/core/MenuItem\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { useForm, useFormContext } from \"react-hook-form\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport { GoogleApiWrapper, Map, Marker } from \"google-maps-react\"\r\nimport React, { forwardRef, useState } from \"react\"\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\"\r\nimport {\r\n  AddLocIcon,\r\n  DeleteLocIcon,\r\n  EndLocationIcon,\r\n  StartLocationIcon,\r\n} from \"../../assets/icons\"\r\nimport rideCheckPointErrors from \"./../CheckoutForm/CheckOut/AdressForm\"\r\nimport MapStyles from \"./mapStyles\"\r\n\r\nvar redBorder = null\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mapContainer: {\r\n    width: \"91.5%\",\r\n    height: \"200px\",\r\n    position: \"relative\",\r\n    marginLeft: \"17px\",\r\n    borderRadius: \"20px\",\r\n  },\r\n  destinationContainer: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  destinationText: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  dropDown: {\r\n    position: \"absolute\",\r\n    zIndex: 1000,\r\n    justifyContent: \"center\",\r\n    width: \"500px\",\r\n  },\r\n  destinationInputFrom: {},\r\n  inputRoot: {\r\n    height: \"40px\",\r\n    backgroundColor: \"#191929\",\r\n    \"&::placeholder\": {\r\n      color: \"white\",\r\n    },\r\n    fontSize: \"14px\",\r\n  },\r\n  noBorderDefault: {\r\n    border: \"1px solid #191929\",\r\n  },\r\n  noBorderRed: {\r\n    border: \"1px solid #db5858\",\r\n  },\r\n  input: {\r\n    // \"&::-webkit-input-placeholder\": {\r\n    //   /* Chrome/Opera/Safari */ color: \"white\",\r\n    //   opacity: \"1\",\r\n    // },\r\n    // \"&::-moz-placeholder\": {\r\n    //   /* Firefox 19+ */ color: \"white\",\r\n    //   opacity: \"1\",\r\n    // },\r\n    // \"&:-ms-input-placeholder\": {\r\n    //   /* IE 10+ */ color: \"white\",\r\n    //   opacity: \"1\",\r\n    // },\r\n    // \"&:-moz-placeholder\": {\r\n    //   /* Firefox 18- */ color: \"white\",\r\n    //   opacity: \"1\",\r\n    // },\r\n    \"&::placeholder\": {\r\n      color: \"white\",\r\n      opacity: \"1\",\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n}))\r\n\r\nconst GoogleMap = React.memo(\r\n  forwardRef(\r\n    ({\r\n      setDestinations,\r\n      destinations,\r\n      orderAddressDetails,\r\n      ref,\r\n      errors,\r\n      redBorderOnSubmit,\r\n      redBorderOnSubmit2,\r\n      ...props\r\n    }) => {\r\n      const classes = useStyles(redBorderOnSubmit)\r\n\r\n      const [condition, setCondition] = useState([])\r\n\r\n      const handleChanger = (e) => {\r\n        setCondition(e.event.target)\r\n        console.log(condition)\r\n      }\r\n      const [markers, setMarkers] = useState([])\r\n      const [mapCenter, setMapCenter] = useState({\r\n        lat: 49.2827291,\r\n        lng: -123.1207375,\r\n      })\r\n\r\n      const setUseHookState = (value, id) => {\r\n        let newArr = [...destinations]\r\n        newArr[id].rideCheckPoint = value\r\n        setDestinations(newArr)\r\n      }\r\n\r\n      const handleChange = (value, id) => {\r\n        setUseHookState(value, id)\r\n      }\r\n\r\n      let selectedArray = null\r\n\r\n      const handleSelect = async (value, id) => {\r\n        setUseHookState(value, id)\r\n        const results = await geocodeByAddress(value)\r\n        const latLng = await getLatLng(results[0])\r\n        const placeId = results[0].place_id\r\n        let placeType = 0\r\n        if (results[0].types.some((types) => types === \"airport\")) {\r\n          placeType = 2\r\n        }\r\n        selectedArray = [...destinations]\r\n        selectedArray[id] = {\r\n          ...selectedArray[id],\r\n          latitude: latLng.lat,\r\n          longitude: latLng.lng,\r\n          placeId: placeId,\r\n          placeType: placeType,\r\n        }\r\n        setDestinations(selectedArray)\r\n        setMapCenter({ lat: latLng.lat, lng: latLng.lng })\r\n        setMarkers([...markers, { lat: latLng.lat, lng: latLng.lng }])\r\n      }\r\n\r\n      const addEndPoint = () => {\r\n        let newArr = [\r\n          ...destinations,\r\n          {\r\n            rideCheckPoint: \"\",\r\n            latitude: 0,\r\n            longitude: 0,\r\n            placeType: 0,\r\n            placeId: \"\",\r\n          },\r\n        ]\r\n        setDestinations(newArr)\r\n      }\r\n\r\n      const removeEndPoint = (index) => {\r\n        let newArr = [...destinations]\r\n        newArr.splice(index, 1)\r\n        setDestinations(newArr)\r\n      }\r\n\r\n      React.useEffect(() => {\r\n        setDestinations(orderAddressDetails)\r\n      }, [orderAddressDetails])\r\n\r\n      return (\r\n        <>\r\n          <Grid container direction=\"column\">\r\n            <Grid item className={classes.mapContainer}>\r\n              <Map\r\n                google={props.google}\r\n                disableDefaultUI={true}\r\n                center={{\r\n                  lat: mapCenter.lat,\r\n                  lng: mapCenter.lng,\r\n                }}\r\n                styles={MapStyles}\r\n              >\r\n                {markers.map((marker, id) => (\r\n                  <Marker\r\n                    key={`${id}${marker.lat}`}\r\n                    lat={marker.lat}\r\n                    lng={marker.lng}\r\n                  />\r\n                ))}\r\n              </Map>\r\n            </Grid>\r\n            <Grid item className={classes.destinationContainer}>\r\n              <Grid container direction=\"column\">\r\n                {destinations.map((destination, id) => (\r\n                  <PlacesAutocomplete\r\n                    value={destinations[id].rideCheckPoint}\r\n                    onChange={(value) => handleChange(value, id)}\r\n                    onSelect={(value) => handleSelect(value, id)}\r\n                    key={`${destination.id}${id}`}\r\n                  >\r\n                    {({\r\n                      getInputProps,\r\n                      suggestions,\r\n                      getSuggestionItemProps,\r\n                      loading,\r\n                    }) => (\r\n                      <div>\r\n                        <Grid item className={classes.destinationText}>\r\n                          <TextField\r\n                            position=\"start\"\r\n                            style={{\r\n                              height: \"40px\",\r\n                              border: \"none\",\r\n                              marginTop: \"-4px\",\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            name=\"rideCheckPoint\"\r\n                            defaultValue={destinations[id].rideCheckPoint}\r\n                            fullWidth\r\n                            // inputRef={ref}\r\n                            InputProps={{\r\n                              classes: {\r\n                                root: classes.inputRoot,\r\n                                notchedOutline: redBorderOnSubmit\r\n                                  ? classes.noBorderRed\r\n                                  : classes.noBorderDefault,\r\n                                input: classes.input,\r\n                              },\r\n\r\n                              startAdornment: (\r\n                                <InputAdornment style={{ marginRight: \"10px\" }}>\r\n                                  {id === 0 && <StartLocationIcon />}\r\n                                  {id === destinations.length - 1 && (\r\n                                    <EndLocationIcon />\r\n                                  )}\r\n                                  {id > 0 && id < destinations.length - 1 && (\r\n                                    <span\r\n                                      style={{\r\n                                        borderRadius: \"50%\",\r\n                                        width: \"24px\",\r\n                                        height: \"25px\",\r\n                                        backgroundColor: \"transparent\",\r\n                                        border: \"2px solid #FFFFFF\",\r\n                                        textAlign: \"center\",\r\n                                        fontFamily: \"Roboto\",\r\n                                        fontWeight: \"700\",\r\n                                        fontSize: \"0.9rem\",\r\n                                        marginLeft: \"-5px\",\r\n                                        marginRight: \"-5px\",\r\n                                      }}\r\n                                    >\r\n                                      {id}\r\n                                    </span>\r\n                                  )}\r\n                                </InputAdornment>\r\n                              ),\r\n                              endAdornment: (\r\n                                <InputAdornment\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  position=\"end\"\r\n                                >\r\n                                  {id === destinations.length - 1 && (\r\n                                    <span onClick={addEndPoint}>\r\n                                      <AddLocIcon />\r\n                                    </span>\r\n                                  )}\r\n                                  {id > 0 && id < destinations.length - 1 && (\r\n                                    <span onClick={() => removeEndPoint(id)}>\r\n                                      <DeleteLocIcon />\r\n                                    </span>\r\n                                  )}\r\n                                </InputAdornment>\r\n                              ),\r\n                            }}\r\n                            {...getInputProps({\r\n                              placeholder: id === 0 ? \"From\" : \"To\",\r\n                              className: \"location-search-input\",\r\n                            })}\r\n                          />\r\n                        </Grid>\r\n                        <div className={classes.dropDown}>\r\n                          {loading && (\r\n                            <div style={{ alignItems: \"center\" }}>\r\n                              Loading...\r\n                            </div>\r\n                          )}\r\n                          {suggestions.map((suggestion, id) => {\r\n                            const className = suggestion.active\r\n                              ? \"suggestion-item--active\"\r\n                              : \"suggestion-item\"\r\n                            // inline style for demonstration purpose\r\n                            const style = suggestion.active\r\n                              ? {\r\n                                  backgroundColor: \"#101020\",\r\n                                  cursor: \"pointer\",\r\n                                  textTransform: \"none\",\r\n                                  justifyContent: \"center\",\r\n\r\n                                  width: \"380px\",\r\n                                }\r\n                              : {\r\n                                  backgroundColor: \"#160E31\",\r\n                                  cursor: \"pointer\",\r\n                                  textTransform: \"none\",\r\n                                  width: \"380px\",\r\n                                  justifyContent: \"center\",\r\n                                }\r\n                            return (\r\n                              <div\r\n                                key={`${id}${suggestion.description}`}\r\n                                {...getSuggestionItemProps(suggestion, {\r\n                                  className,\r\n                                  style,\r\n                                })}\r\n                              >\r\n                                <MenuItem\r\n                                  style={{\r\n                                    whiteSpace: \"pre-line\",\r\n                                    fontSize: \"14px\",\r\n                                  }}\r\n                                >\r\n                                  {suggestion.description}\r\n                                </MenuItem>\r\n                              </div>\r\n                            )\r\n                          })}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </PlacesAutocomplete>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )\r\n    }\r\n  )\r\n)\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyCmKhi_5V_pulQtm6DFJ8teDZpR9I5hJoM\",\r\n  libraries: [\"places\", \"drawing\", \"geometry\"],\r\n})(GoogleMap)\r\n","C:\\Emir's folder\\widget-booking\\src\\Components\\TermsOfUse\\TermOfUse.js",["213","214","215"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { termsApi } from '../../api/api';\r\n\r\nexport default function TermsOfUse() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [term, setTerm] = React.useState('')\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    React.useEffect(() => {\r\n        let componentMounted = true;\r\n        if (open) {\r\n            const fetchTerms = async () => {\r\n                const data = await termsApi.getTermOfUse();\r\n                if (componentMounted) {\r\n                    setTerm(data)\r\n                }\r\n                fetchTerms();\r\n            }\r\n        }\r\n        return () => {\r\n            componentMounted = false;\r\n        }\r\n    }, [])\r\n\r\n    let descriptionElementRef = React.useRef(null);\r\n    React.useEffect(() => {\r\n        if (open) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <>\r\n            <Button onClick={handleClickOpen} disableRipple\r\n                style={{ height: '50px', textTransform: 'none', padding: 0, backgroundColor: 'transparent' }}>Terms</Button>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"scroll-dialog-title\"\r\n                aria-describedby=\"scroll-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"scroll-dialog-title\">Terms Of Use</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText\r\n                        id=\"scroll-dialog-description\"\r\n                        ref={descriptionElementRef}\r\n                        tabIndex={-1}\r\n                    >\r\n                        1. General.\r\n                        The Stripe Checkout service (“Stripe Checkout”) is technology that makes it easier for merchants on the Internet (“Merchants”) to collect payment from individuals like you. Stripe Checkout also makes it easy for you to store payment credentials, like credit cards and debit cards (“Payment Credentials”) with Stripe for use with Merchants who have chosen to use Stripe as their payment processor.\r\n\r\n                        2. Using Stripe Checkout.\r\n                        When you check out on the website of a Merchant that has Stripe Checkout enabled, we will ask you if you’d like us to remember you. When you allow us to remember you, Stripe will store certain identifying information, such as your email address and your mobile phone number (“Stripe Credentials”), and your Payment Credentials. Information stored as part of your Payment Credentials may include information such as your name, the account number and the expiration date, as well as associated information like your billing address and shipping address. The advantage of remembering you is that it will make your checkout quicker and easier if you come back to the same website, or to any of the other Merchants that use Stripe (a “Stripe Enabled Merchant”) – this can be especially handy when you’re on a mobile device or don’t have your credit card in front of you.\r\n\r\n                        If you elect to allow us to remember you, Stripe will use cookies to link your web browser to your Stripe Credentials and recognize when you visit a Stripe Enabled Merchant. If you come to a Stripe Enabled Merchant and we don’t recognize you (for example, because you’ve cleared your cookies, logged out, or you’re using a different device), we will provide a way for you to identify yourself and login via your Stripe Credentials (for example, by sending you a verification code via SMS text message). While you are logged in, Stripe will give you the ability to make purchases using your stored Payment Credentials. Stripe may also allow you to make a purchase with your Payment Credentials by sending a message directly from the email address or phone number stored as your Stripe Credentials (for example, to authorize a purchase via SMS).\r\n\r\n                        If you send us text messages, or have us send you one, don’t forget that your carrier might charge you for that. For more information on how we use cookies, please view our Cookie Policy.\r\n\r\n                        3. Stripe’s Role.\r\n                        Stripe Checkout enables you to store your Payment Credentials, but it doesn’t change anything else about your relationship with the Merchant you’re paying or your bank or credit card company. Stripe will, however, use reasonable efforts to keep your Payment Credentials secure.\r\n\r\n                        You are ultimately responsible for the purchases you make using Stripe Checkout. Also, the Merchant is the one responsible for providing you the goods or services that you purchase using Stripe Checkout, not Stripe. Stripe Checkout may display, or link to, the terms and policies that attach to a product or service sold by a Stripe Enabled Merchant. For example, Stripe Checkout may display, or link to, a Merchant’s policies with respect to returns, refunds, and exchanges. The content of any such policies is chosen by the Merchant, and Stripe does not control, or have any responsibility for, the Merchant’s compliance with the content of its policies and terms. If you believe that a Merchant has failed to comply with its terms or policies, or any other obligation imposed by applicable law, please contact the Merchant directly.\r\n\r\n                        4. Your Location; Making Changes.\r\n                        When you allow us to remember you, we will assume that you are located in the country of your billing address, if one is provided, and otherwise the country of your phone number. If this country is incorrect, or you move countries, and you wish to continue to store your Payment Credentials with us, then you must contact us for instructions on how to delete your stored information, and create a new account that is associated with the correct country.\r\n\r\n                        If you want to delete your Payment Credentials, stop storing information using Stripe Checkout, or change your settings, please contact us.\r\n\r\n                        5. Representations and Warranties.\r\n                        By using Stripe Checkout you confirm that you are at least 18 years of age and that you will not use Stripe Checkout for any fraudulent, unlawful or abusive purpose.\r\n\r\n                        6. Disclaimers.\r\n                        Stripe Checkout, including all content, software, functions, materials, and information made available on, provided in connection with or accessible through Stripe Checkout, are provided “as is.” To the fullest extent permissible by law, Stripe), make no representation or warranty of any kind whatsoever for the services or the content, materials, information and functions made accessible by Stripe Checkout, or for any breach of security associated with the transmission of sensitive information through Stripe Checkout. To the fullest extent permissible by law, Stripe disclaims any warranty of any kind with respect to the services, noninfringement, merchantability, or being fit for a particular purpose. Stripe does not warrant that the functions contained in the services will be uninterrupted or error free. Stripe shall not be responsible for any service interruptions, including, but not limited to, system failures or other interruptions that may affect the receipt, processing, acceptance, completion or settlement of payment transactions, unless such service interruption has been caused by Stripe.\r\n\r\n                        7. Limitations of Liability; Force Majeure.\r\n                        We do not exclude or limit in any way our liability to you where it would be unlawful to do so. This includes liability for death or personal injury caused by our negligence or the negligence of our employees, agents or representatives; for fraud or fraudulent misrepresentation. Nothing in this section or these terms will affect your statutory rights as a consumer.\r\n\r\n                        Except under the circumstances stated above, in no event shall Stripe be responsible or liable to you or any third party under any circumstances for any indirect, consequential, special, punitive or exemplary, damages or losses, including but not limited to damages for loss of profits, goodwill, use, data, or other intangible losses which may be incurred in connection with Stripe or the services, or any goods, services, or information purchased, received, sold, or paid for by way of the services.\r\n\r\n                        In addition to and without limiting any of the foregoing, Stripe shall not have any liability for any failure or delay resulting from any condition beyond the reasonable control of itself, including but not limited to governmental action or acts of terrorism, earthquake, fire, flood or other acts of God, strikes or other industrial action, power failures and Internet outages.\r\n\r\n                        8. Governing Law.\r\n                        This Agreement is concluded in English.\r\n\r\n                        This Agreement and any dispute or claim arising out of or in connection with it or its subject matter or formation (including non-contractual disputes or claims) (a “Dispute”) will be governed by and construed in accordance with the laws of the Republic of Ireland. Any Dispute shall be finally resolved by the courts competent to adjudicate the Dispute.\r\n\r\n                        This section is without prejudice to any overriding rights which you may be entitled to in your country of residence. If you are a consumer then the courts of your country of residence may have jurisdiction to hear any dispute that may arise out of or is related to this Agreement.\r\n\r\n                        If you are located in the European Union, we hereby provide you, in accordance with Article 14 of EU Regulation 524/2013, with an electronic link to the Online Dispute Resolution (“ODR”) platform of the European Union. For the purposes of the same EU Regulation, we confirm that you can contact us through the following email address: notices@stripe.com, and that we do not intend to use the platform.\r\n\r\n                        9. Modification of Terms of Service; Notices.\r\n                        We have the right to change or add to these Terms of Service at any time, solely with prospective effect, and to change, delete, discontinue, or impose conditions on use of Stripe Checkout by posting such changes on our website . We may provide you with notice via email, postings on our website, or through other reasonable means. If you are an existing Stripe Checkout user, the changes will come into effect 10 days after we post the changes to our website, and your use of Stripe Checkout more than 10 days after we publish any such changes on our website, constitutes your acceptance of the modified Terms of Service. In the event that you do not agree with any such modification, your sole and exclusive remedy is to terminate your use of Stripe Checkout. You can access a copy of the current terms of these Terms of Service on our website at any time. You can find out when these Terms of Service were last changed by checking the “Last updated” date at the top of these Terms of Service.\r\n\r\n                        10. Assignment.\r\n                        You may not assign these Terms of Service or any rights or obligations hereunder without our prior written approval and any such attempted assignment shall be void. We may assign these Terms of Service and the rights and obligations hereunder, to any third party. Unless you terminate your use of Stripe Checkout, which you or your successor may do at any time, these Terms of Service shall be binding upon and inure to the benefit of Stripe and your successor.\r\n\r\n                        11. Data.\r\n                        By using Stripe Checkout, you agree to the Stripe Privacy Policy, which is incorporated into and forms part of these Terms of Service. You should be aware that your data may be transferred, processed and stored outside of your country (including, if you are located in the European Union, outside of the European Union), and that your data may be subject to disclosure as required by applicable law.\r\n\r\n                        Stripe has implemented reCAPTCHA on Stripe Checkout. Use of reCAPTCHA is subject to the Google Privacy Policy and Terms of Service.\r\n\r\n                        12. Survival.\r\n                        You may terminate your use of Stripe Checkout at any time by ceasing to make purchases from merchants that use Stripe Checkout. Upon termination of your use of Stripe Checkout or termination of these Terms of Service for any reason, in addition to this section, the following sections shall survive termination: Sections 5 through to 13 (inclusive).\r\n\r\n                        13. Miscellaneous.\r\n                        Stripe’s failure to exercise or enforce any right or provision of the Terms of Service will not be considered a waiver of that right or provision. If any provision of these Terms of Service shall be adjudged by any court of competent jurisdiction to be unenforceable or invalid, that provision shall be limited or eliminated to the minimum extent necessary so that these Terms of Service shall otherwise remain in full force and effect and remain enforceable between the parties. Headings are for reference purposes only and in no way define, limit, construe or describe the scope or extent of such section. These Terms of Service, including Stripe’s policies applicable to Stripe Checkout at referenced above, constitutes the entire agreement between you and Stripe with respect to the use of Stripe Checkout. These Terms of Service are not intended and shall not be construed to create any rights or remedies in any parties other than you and Stripe, and no other person will have the ability to assert any rights as a third party beneficiary under these Terms of Service. These Terms of Service do not limit any rights that Stripe may have under trade secret, copyright, patent or other laws.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        OK\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}","C:\\Emir's folder\\widget-booking\\src\\Components\\TermsOfUse\\PrivacyPolicy.js",["216","217"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { termsApi } from '../../api/api';\r\n\r\nexport default function PrivacyPolicy() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [privacyPolicy, setPrivacyPolicy] = React.useState('')\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    React.useEffect(() => {\r\n        let componentMounted = true;\r\n        const fetchPrivacyPolicy = async () => {\r\n            const data = await termsApi.getPrivacyPolicy();\r\n            if (componentMounted) {\r\n                setPrivacyPolicy(data)\r\n            }\r\n            fetchPrivacyPolicy()\r\n        }\r\n        return () => {\r\n            componentMounted = false;\r\n        }\r\n    }, [])\r\n\r\n\r\n    const descriptionElementRef = React.useRef(null);\r\n    React.useEffect(() => {\r\n        if (open) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <>\r\n            <Button onClick={handleClickOpen} disableRipple\r\n                style={{ height: '50px', textTransform: 'none', padding: 0, backgroundColor: 'transparent' }}>Privacy Policy</Button>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"scroll-dialog-title\"\r\n                aria-describedby=\"scroll-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"scroll-dialog-title\">Privacy Policy</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText\r\n                        id=\"scroll-dialog-description\"\r\n                        ref={descriptionElementRef}\r\n                        tabIndex={-1}\r\n                    >\r\n                        Ipsum eu magna pariatur ex eiusmod ullamco excepteur cillum culpa cupidatat labore minim culpa. In exercitation voluptate nostrud aute sunt excepteur est fugiat. Quis excepteur elit aute cupidatat. Adipisicing elit nulla eu eu qui consequat eu exercitation. Sunt ipsum cupidatat sit occaecat cupidatat tempor et elit id id amet esse labore. Duis est velit veniam cupidatat cillum sint eu voluptate aliqua nostrud minim sit.\r\n\r\n                        Consequat laboris amet laboris amet laboris duis. Eiusmod adipisicing amet et amet deserunt mollit pariatur excepteur magna eu enim elit reprehenderit. Ex ut ex non aliqua nisi sint voluptate nisi laboris adipisicing excepteur aliqua tempor. Minim irure laboris sint voluptate aliqua proident deserunt quis id nulla nostrud ad. Ipsum sit anim ad nulla incididunt. Nostrud est reprehenderit consequat do.\r\n\r\n                        Et fugiat minim Lorem velit do ullamco duis incididunt laboris mollit nisi sint mollit elit. Aute fugiat sunt aliquip quis dolore. Excepteur amet consectetur labore do duis enim laboris mollit anim veniam. Magna eiusmod est laboris nisi id ullamco officia incididunt nulla. Aliquip nisi est adipisicing dolor culpa proident irure. Et esse aliqua elit exercitation mollit aliquip ipsum consequat sunt sit magna aliqua cupidatat anim.\r\n\r\n                        Esse id velit mollit ut aliqua culpa ipsum sit. Est do elit laborum proident sit. Quis id eiusmod consequat ullamco ipsum pariatur aliqua aliqua nulla enim voluptate. Consequat minim esse ut elit voluptate deserunt aute incididunt esse laborum enim ullamco. Et adipisicing enim culpa dolor duis cillum.\r\n\r\n                        Quis minim deserunt quis eu. Voluptate et cillum fugiat non Lorem qui quis nisi et deserunt. Est adipisicing ex eiusmod anim proident ipsum esse. Magna in reprehenderit eu cupidatat ullamco dolor Lorem Lorem excepteur magna Lorem enim anim laboris. Elit consequat cillum culpa pariatur. Proident esse elit aliquip cupidatat fugiat aute nisi ipsum elit ut occaecat est non Lorem.\r\n\r\n                        Lorem reprehenderit officia minim mollit dolore. Eiusmod ad tempor pariatur est sunt exercitation aliqua ad mollit. Elit aliqua excepteur commodo eiusmod. Occaecat magna labore mollit aliquip commodo est Lorem Lorem reprehenderit cillum. Exercitation ipsum ut aliquip aliqua. Voluptate do dolore culpa qui excepteur veniam commodo est mollit ea consectetur non. Et nulla deserunt eu officia ex ad cupidatat.\r\n\r\n                        Laboris duis consequat id sunt nisi aliqua ad. Ipsum sit ad amet laboris mollit duis irure. Commodo laborum non quis enim dolore. Ipsum aliqua eu nisi reprehenderit voluptate exercitation tempor.\r\n\r\n                        Ipsum qui reprehenderit aliqua irure. Nulla ut laborum aliqua qui velit proident velit dolor non aliquip sit officia culpa. Ipsum ullamco et laborum commodo ut. Est eu tempor ex incididunt dolore id laborum ea fugiat nostrud sunt consectetur. Ad officia ipsum fugiat sunt ipsum ipsum culpa nisi adipisicing. Laborum ullamco Lorem fugiat cupidatat ipsum aliquip ea consequat. Non cupidatat dolore duis veniam eu sint duis excepteur deserunt eiusmod.\r\n\r\n                        Tempor eu amet cillum esse magna mollit laborum cillum laboris non fugiat. Esse cillum velit laborum minim non quis nostrud. Sunt culpa elit cupidatat dolor aute labore esse. Anim ex occaecat sint aliquip laborum laboris nostrud exercitation amet cupidatat nostrud minim. Nostrud est Lorem in Lorem ea proident esse culpa. Eiusmod eiusmod esse irure irure officia ex elit in. Ea voluptate voluptate in enim adipisicing proident amet qui ad duis tempor ut magna incididunt.\r\n\r\n                        Voluptate veniam excepteur mollit eu quis velit occaecat enim qui laborum cillum incididunt esse. Dolor enim occaecat non adipisicing excepteur Lorem incididunt reprehenderit aliquip mollit aliquip sit incididunt. Aute velit culpa fugiat eu sint ea nisi cillum cillum et aliquip. Officia aliquip incididunt officia sit labore anim consequat magna officia id. Ex aliquip fugiat eiusmod enim dolore anim enim qui.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        OK\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}","C:\\Emir's folder\\widget-booking\\src\\Components\\GoogleMap\\mapStyles.js",["218"],"export default [\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": 36\r\n            },\r\n            {\r\n                \"color\": \"#000000\"\r\n            },\r\n            {\r\n                \"lightness\": 40\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"color\": \"#000000\"\r\n            },\r\n            {\r\n                \"lightness\": 16\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels.icon\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#000000\"\r\n            },\r\n            {\r\n                \"lightness\": 20\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#000000\"\r\n            },\r\n            {\r\n                \"lightness\": 17\r\n            },\r\n            {\r\n                \"weight\": 1.2\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#000000\"\r\n            },\r\n            {\r\n                \"lightness\": 20\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#000000\"\r\n            },\r\n            {\r\n                \"lightness\": 21\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#000000\"\r\n            },\r\n            {\r\n                \"lightness\": 17\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#000000\"\r\n            },\r\n            {\r\n                \"lightness\": 29\r\n            },\r\n            {\r\n                \"weight\": 0.2\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#000000\"\r\n            },\r\n            {\r\n                \"lightness\": 18\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.local\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#000000\"\r\n            },\r\n            {\r\n                \"lightness\": 16\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#000000\"\r\n            },\r\n            {\r\n                \"lightness\": 19\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#000000\"\r\n            },\r\n            {\r\n                \"lightness\": 17\r\n            }\r\n        ]\r\n    }\r\n]","C:\\Emir's folder\\widget-booking\\src\\AppStyles.js",[],{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":7,"column":8,"nodeType":"225","messageId":"226","endLine":7,"endColumn":14},{"ruleId":"223","severity":1,"message":"227","line":8,"column":8,"nodeType":"225","messageId":"226","endLine":8,"endColumn":14},{"ruleId":"223","severity":1,"message":"228","line":19,"column":3,"nodeType":"225","messageId":"226","endLine":19,"endColumn":15},{"ruleId":"223","severity":1,"message":"229","line":24,"column":10,"nodeType":"225","messageId":"226","endLine":24,"endColumn":19},{"ruleId":"223","severity":1,"message":"230","line":41,"column":10,"nodeType":"225","messageId":"226","endLine":41,"endColumn":24},{"ruleId":"223","severity":1,"message":"231","line":41,"column":26,"nodeType":"225","messageId":"226","endLine":41,"endColumn":43},{"ruleId":"223","severity":1,"message":"232","line":42,"column":10,"nodeType":"225","messageId":"226","endLine":42,"endColumn":14},{"ruleId":"223","severity":1,"message":"233","line":51,"column":10,"nodeType":"225","messageId":"226","endLine":51,"endColumn":19},{"ruleId":"223","severity":1,"message":"234","line":55,"column":9,"nodeType":"225","messageId":"226","endLine":55,"endColumn":24},{"ruleId":"223","severity":1,"message":"235","line":59,"column":9,"nodeType":"225","messageId":"226","endLine":59,"endColumn":26},{"ruleId":"236","severity":1,"message":"237","line":88,"column":5,"nodeType":"238","messageId":"239","endLine":90,"endColumn":6},{"ruleId":"236","severity":1,"message":"237","line":107,"column":5,"nodeType":"238","messageId":"239","endLine":109,"endColumn":6},{"ruleId":"223","severity":1,"message":"240","line":129,"column":9,"nodeType":"225","messageId":"226","endLine":129,"endColumn":36},{"ruleId":"236","severity":1,"message":"237","line":135,"column":5,"nodeType":"238","messageId":"239","endLine":137,"endColumn":6},{"ruleId":"223","severity":1,"message":"241","line":157,"column":9,"nodeType":"225","messageId":"226","endLine":157,"endColumn":37},{"ruleId":"223","severity":1,"message":"242","line":180,"column":9,"nodeType":"225","messageId":"226","endLine":180,"endColumn":28},{"ruleId":"243","severity":1,"message":"244","line":200,"column":6,"nodeType":"245","endLine":200,"endColumn":16,"suggestions":"246"},{"ruleId":"223","severity":1,"message":"247","line":202,"column":9,"nodeType":"225","messageId":"226","endLine":202,"endColumn":19},{"ruleId":"248","severity":1,"message":"249","line":278,"column":23,"nodeType":"250","messageId":"251","endLine":282,"endColumn":24},{"ruleId":"248","severity":1,"message":"249","line":283,"column":23,"nodeType":"250","messageId":"251","endLine":285,"endColumn":25},{"ruleId":"248","severity":1,"message":"249","line":384,"column":27,"nodeType":"250","messageId":"251","endLine":388,"endColumn":28},{"ruleId":"248","severity":1,"message":"249","line":467,"column":29,"nodeType":"250","messageId":"251","endLine":471,"endColumn":30},{"ruleId":"223","severity":1,"message":"252","line":2,"column":8,"nodeType":"225","messageId":"226","endLine":2,"endColumn":13},{"ruleId":"223","severity":1,"message":"253","line":2,"column":17,"nodeType":"225","messageId":"226","endLine":2,"endColumn":25},{"ruleId":"223","severity":1,"message":"254","line":11,"column":7,"nodeType":"225","messageId":"226","endLine":11,"endColumn":17},{"ruleId":"223","severity":1,"message":"253","line":2,"column":10,"nodeType":"225","messageId":"226","endLine":2,"endColumn":18},{"ruleId":"223","severity":1,"message":"255","line":3,"column":8,"nodeType":"225","messageId":"226","endLine":3,"endColumn":17},{"ruleId":"223","severity":1,"message":"256","line":9,"column":10,"nodeType":"225","messageId":"226","endLine":9,"endColumn":18},{"ruleId":"223","severity":1,"message":"229","line":10,"column":10,"nodeType":"225","messageId":"226","endLine":10,"endColumn":19},{"ruleId":"223","severity":1,"message":"257","line":11,"column":8,"nodeType":"225","messageId":"226","endLine":11,"endColumn":14},{"ruleId":"223","severity":1,"message":"258","line":11,"column":7,"nodeType":"225","messageId":"226","endLine":11,"endColumn":21},{"ruleId":"223","severity":1,"message":"259","line":12,"column":7,"nodeType":"225","messageId":"226","endLine":12,"endColumn":21},{"ruleId":"223","severity":1,"message":"260","line":15,"column":11,"nodeType":"225","messageId":"226","endLine":15,"endColumn":22},{"ruleId":"223","severity":1,"message":"261","line":9,"column":10,"nodeType":"225","messageId":"226","endLine":9,"endColumn":21},{"ruleId":"223","severity":1,"message":"262","line":32,"column":3,"nodeType":"225","messageId":"226","endLine":32,"endColumn":19},{"ruleId":"223","severity":1,"message":"263","line":42,"column":8,"nodeType":"225","messageId":"226","endLine":42,"endColumn":15},{"ruleId":"223","severity":1,"message":"264","line":45,"column":10,"nodeType":"225","messageId":"226","endLine":45,"endColumn":24},{"ruleId":"223","severity":1,"message":"265","line":46,"column":10,"nodeType":"225","messageId":"226","endLine":46,"endColumn":23},{"ruleId":"223","severity":1,"message":"266","line":47,"column":8,"nodeType":"225","messageId":"226","endLine":47,"endColumn":12},{"ruleId":"223","severity":1,"message":"267","line":48,"column":8,"nodeType":"225","messageId":"226","endLine":48,"endColumn":12},{"ruleId":"223","severity":1,"message":"268","line":49,"column":10,"nodeType":"225","messageId":"226","endLine":49,"endColumn":17},{"ruleId":"223","severity":1,"message":"269","line":49,"column":19,"nodeType":"225","messageId":"226","endLine":49,"endColumn":29},{"ruleId":"223","severity":1,"message":"270","line":247,"column":7,"nodeType":"225","messageId":"226","endLine":247,"endColumn":13},{"ruleId":"236","severity":1,"message":"271","line":253,"column":1,"nodeType":"238","messageId":"272","endLine":255,"endColumn":2},{"ruleId":"223","severity":1,"message":"273","line":273,"column":10,"nodeType":"225","messageId":"226","endLine":273,"endColumn":23},{"ruleId":"223","severity":1,"message":"274","line":279,"column":10,"nodeType":"225","messageId":"226","endLine":279,"endColumn":26},{"ruleId":"223","severity":1,"message":"275","line":279,"column":28,"nodeType":"225","messageId":"226","endLine":279,"endColumn":47},{"ruleId":"223","severity":1,"message":"276","line":281,"column":10,"nodeType":"225","messageId":"226","endLine":281,"endColumn":22},{"ruleId":"223","severity":1,"message":"277","line":282,"column":10,"nodeType":"225","messageId":"226","endLine":282,"endColumn":22},{"ruleId":"223","severity":1,"message":"278","line":282,"column":24,"nodeType":"225","messageId":"226","endLine":282,"endColumn":40},{"ruleId":"223","severity":1,"message":"279","line":316,"column":9,"nodeType":"225","messageId":"226","endLine":316,"endColumn":29},{"ruleId":"223","severity":1,"message":"280","line":5,"column":3,"nodeType":"225","messageId":"226","endLine":5,"endColumn":18},{"ruleId":"223","severity":1,"message":"281","line":5,"column":8,"nodeType":"225","messageId":"226","endLine":5,"endColumn":16},{"ruleId":"223","severity":1,"message":"282","line":6,"column":8,"nodeType":"225","messageId":"226","endLine":6,"endColumn":13},{"ruleId":"223","severity":1,"message":"283","line":14,"column":10,"nodeType":"225","messageId":"226","endLine":14,"endColumn":26},{"ruleId":"223","severity":1,"message":"284","line":76,"column":9,"nodeType":"225","messageId":"226","endLine":76,"endColumn":17},{"ruleId":"248","severity":1,"message":"249","line":232,"column":21,"nodeType":"250","messageId":"251","endLine":232,"endColumn":44},{"ruleId":"248","severity":1,"message":"249","line":273,"column":21,"nodeType":"250","messageId":"251","endLine":273,"endColumn":44},{"ruleId":"223","severity":1,"message":"282","line":4,"column":8,"nodeType":"225","messageId":"226","endLine":4,"endColumn":13},{"ruleId":"223","severity":1,"message":"257","line":15,"column":10,"nodeType":"225","messageId":"226","endLine":15,"endColumn":16},{"ruleId":"248","severity":1,"message":"249","line":366,"column":31,"nodeType":"250","messageId":"251","endLine":366,"endColumn":54},{"ruleId":"248","severity":1,"message":"249","line":407,"column":31,"nodeType":"250","messageId":"251","endLine":407,"endColumn":54},{"ruleId":"243","severity":1,"message":"285","line":17,"column":8,"nodeType":"245","endLine":17,"endColumn":10,"suggestions":"286"},{"ruleId":"223","severity":1,"message":"253","line":3,"column":17,"nodeType":"225","messageId":"226","endLine":3,"endColumn":25},{"ruleId":"223","severity":1,"message":"287","line":3,"column":17,"nodeType":"225","messageId":"226","endLine":3,"endColumn":21},{"ruleId":"223","severity":1,"message":"253","line":3,"column":23,"nodeType":"225","messageId":"226","endLine":3,"endColumn":31},{"ruleId":"223","severity":1,"message":"288","line":7,"column":3,"nodeType":"225","messageId":"226","endLine":7,"endColumn":21},{"ruleId":"223","severity":1,"message":"289","line":3,"column":8,"nodeType":"225","messageId":"226","endLine":3,"endColumn":20},{"ruleId":"223","severity":1,"message":"290","line":6,"column":3,"nodeType":"225","messageId":"226","endLine":6,"endColumn":17},{"ruleId":"223","severity":1,"message":"291","line":103,"column":9,"nodeType":"225","messageId":"226","endLine":103,"endColumn":16},{"ruleId":"223","severity":1,"message":"292","line":5,"column":10,"nodeType":"225","messageId":"226","endLine":5,"endColumn":17},{"ruleId":"223","severity":1,"message":"293","line":5,"column":19,"nodeType":"225","messageId":"226","endLine":5,"endColumn":33},{"ruleId":"223","severity":1,"message":"294","line":19,"column":8,"nodeType":"225","messageId":"226","endLine":19,"endColumn":28},{"ruleId":"223","severity":1,"message":"295","line":22,"column":5,"nodeType":"225","messageId":"226","endLine":22,"endColumn":14},{"ruleId":"223","severity":1,"message":"296","line":100,"column":13,"nodeType":"225","messageId":"226","endLine":100,"endColumn":26},{"ruleId":"243","severity":1,"message":"297","line":166,"column":10,"nodeType":"245","endLine":166,"endColumn":31,"suggestions":"298"},{"ruleId":"223","severity":1,"message":"299","line":12,"column":12,"nodeType":"225","messageId":"226","endLine":12,"endColumn":16},{"ruleId":"223","severity":1,"message":"300","line":26,"column":19,"nodeType":"225","messageId":"226","endLine":26,"endColumn":29},{"ruleId":"243","severity":1,"message":"301","line":37,"column":8,"nodeType":"245","endLine":37,"endColumn":10,"suggestions":"302"},{"ruleId":"223","severity":1,"message":"303","line":12,"column":12,"nodeType":"225","messageId":"226","endLine":12,"endColumn":25},{"ruleId":"223","severity":1,"message":"304","line":25,"column":15,"nodeType":"225","messageId":"226","endLine":25,"endColumn":33},{"ruleId":"305","severity":1,"message":"306","line":1,"column":1,"nodeType":"307","endLine":167,"endColumn":2},"no-native-reassign",["308"],"no-negated-in-lhs",["309"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Dialog' is defined but never used.","'initializing' is defined but never used.","'Preloader' is defined but never used.","'disabledWidget' is assigned a value but never used.","'setDisabledWidget' is assigned a value but never used.","'open' is assigned a value but never used.","'draggable' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'handleCloseDialog' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'enableAccordionButtonMobile' is assigned a value but never used.","'disableAccordionButtonMobile' is assigned a value but never used.","'handleDragForMobile' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["310"],"'Transition' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'React' is defined but never used.","'useState' is defined but never used.","'palletType' is assigned a value but never used.","'Draggable' is defined but never used.","'isMobile' is defined but never used.","'AppBar' is defined but never used.","'SET_EXACT_DATE' is assigned a value but never used.","'SET_EXACT_TIME' is assigned a value but never used.","'company0Key' is assigned a value but never used.","'yupResolver' is defined but never used.","'DataInputControl' is defined but never used.","'Tooltip' is defined but never used.","'createMuiTheme' is defined but never used.","'ThemeProvider' is defined but never used.","'Blue' is defined but never used.","'lime' is defined but never used.","'Popover' is defined but never used.","'TimePicker' is defined but never used.","'schema' is assigned a value but never used.","Block is redundant.","redundantBlock","'disableHourly' is assigned a value but never used.","'timePickerOpened' is assigned a value but never used.","'setTimePickerOpened' is assigned a value but never used.","'selectedDate' is assigned a value but never used.","'selectedTime' is assigned a value but never used.","'handleTimeChange' is assigned a value but never used.","'handleDateChangeFunc' is assigned a value but never used.","'CustomFormInput' is defined but never used.","'ListItem' is defined but never used.","'Paper' is defined but never used.","'toggleIsFetching' is defined but never used.","'isMobile' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'createReservation' and 'formSummary'. Either include them or remove the dependency array. If 'createReservation' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["311"],"'memo' is defined but never used.","'NumberOfPassengers' is defined but never used.","'Autocomplete' is defined but never used.","'DateTimePicker' is defined but never used.","'classes' is assigned a value but never used.","'useForm' is defined but never used.","'useFormContext' is defined but never used.","'rideCheckPointErrors' is defined but never used.","'redBorder' is assigned a value but never used.","'handleChanger' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'setDestinations'. Either include it or remove the dependency array. If 'setDestinations' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["312"],"'term' is assigned a value but never used.","'fetchTerms' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'open'. Either include it or remove the dependency array.",["313"],"'privacyPolicy' is assigned a value but never used.","'fetchPrivacyPolicy' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},"Update the dependencies array to be: [jwtToken, props]",{"range":"322","text":"323"},"Update the dependencies array to be: [createReservation, formSummary]",{"range":"324","text":"325"},"Update the dependencies array to be: [orderAddressDetails, setDestinations]",{"range":"326","text":"327"},"Update the dependencies array to be: [open]",{"range":"328","text":"329"},[6228,6238],"[jwtToken, props]",[669,671],"[createReservation, formSummary]",[4413,4434],"[orderAddressDetails, setDestinations]",[1132,1134],"[open]"]